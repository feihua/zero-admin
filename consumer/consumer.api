syntax = "v1"

type LoginReq {
	Account  string `json:"account"` //手机号或者用户名
	Password string `json:"password"` //密码
}

type LoginData {
	AccessToken string `json:"token"`
}

type LoginResp {
	Code    string    `json:"code"`
	Message string    `json:"message"`
	Data    LoginData `json:"data"`
}

type Request {
	Name string `path:"name,options=you|me"`
}

type Response {
	Message string `json:"message"`
}

type MemberInfo {
	MemberId         int64   `json:"memberId"` //会员ID
	WxOpenid         string  `json:"wxOpenid"` //微信openid
	LevelId          int64   `json:"levelId"` //等级ID
	Nickname         string  `json:"nickname"` //昵称
	Mobile           string  `json:"mobile"` //手机号码
	Source           int32   `json:"source"` //注册来源：0-PC，1-APP，2-小程序
	Avatar           string  `json:"avatar"` //头像
	Signature        string  `json:"signature"` //个性签名
	Gender           int32   `json:"gender"` //性别：0-未知，1-男，2-女
	Birthday         string  `json:"birthday,optional"` //生日
	GrowthPoint      int32   `json:"growthPoint"` //成长值
	Points           int32   `json:"points"` //积分
	TotalPoints      int32   `json:"totalPoints"` //累计获得积分
	SpendAmount      float64 `json:"spendAmount"` //累计消费金额
	OrderCount       int32   `json:"orderCount"` //订单数
	CouponCount      int32   `json:"couponCount"` //优惠券数量
	CommentCount     int32   `json:"commentCount"` //评价数
	ReturnCount      int32   `json:"returnCount"` //退货数
	LotteryTimes     int32   `json:"lotteryTimes"` //剩余抽奖次数
	FirstLoginStatus int32   `json:"firstLoginStatus"` //1:未登录过,2:已登录过
	LastLogin        string  `json:"lastLogin,optional"` //最后登录
	IsEnabled        int32   `json:"isEnabled"` //是否启用：0-禁用，1-启用
}

type ProductEsReq {
	Ids []int64 `json:"ids,optional"` //商品ID集合
}

type TestOrderReq {
	Id       int64 `json:"id"` //商品ID
	TestType int64 `json:"testType,optional"` //测试类型
}

@server (
	jwt:    Auth
	group:  product
	prefix: /api/consumer
)
service consumer-api {
	//测试同步商品到es
	@handler AddProductToEs
	post /addProductToEs (ProductEsReq) returns (Response)

	//测试删除es中的商品
	@handler DeleteProductFromEs
	post /deleteProductFromEs (ProductEsReq) returns (Response)
}

@server (
	jwt:    Auth
	group:  order
	prefix: /api/consumer
)
service consumer-api {
	//测试订单相关的mq发送
	@handler TestOrder
	post /testOrder (TestOrderReq) returns (Response)
}

@server (
	group: auth
)
service consumer-api {
	@handler ConsumerAuth
	post /api/consumer/auth (LoginReq) returns (LoginResp)
}


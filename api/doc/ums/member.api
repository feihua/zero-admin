info(
    desc: "会员信息"
    author: "koobe"
    email: "1002219331@qq.com"
)

type (
    ListMemberReq struct {
        Current int64 `json:"current,default=1"`
        PageSize int64 `json:"pageSize,default=20"`
    }
    ListtMemberData struct {
        Id int64 `json:"id"`
        MemberLevelId int64 `json:"memberLevelId"`
        Username string `json:"username"`                               // 用户名
        Password string `json:"password"`                               // 密码
        Nickname string `json:"nickname"`                               // 昵称
        Phone string `json:"phone"`                                     // 手机号码
        Status int64 `json:"status"`                                    // 帐号启用状态:0->禁用；1->启用
        CreateTime string `json:"createTime"`                           // 注册时间
        Icon string `json:"icon"`                                       // 头像
        Gender int64 `json:"gender"`                                    // 性别：0->未知；1->男；2->女
        Birthday string `json:"birthday"`                               // 生日
        City string `json:"city"`                                       // 所做城市
        Job string `json:"job"`                                         // 职业
        PersonalizedSignature string `json:"personalizedSignature"`     // 个性签名
        SourceType int64 `json:"sourceType"`                            // 用户来源
        Integration int64 `json:"integration"`                          // 积分
        Growth int64 `json:"growth"`                                    // 成长值
        LuckeyCount int64 `json:"luckeyCount"`                          // 剩余抽奖次数
        HistoryIntegration int64 `json:"historyIntegration"`            // 历史积分数量
    }
    ListMemberResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Current int64 `json:"current,default=1"`
        Data []*ListtMemberData `json:"data"`
        PageSize int64 `json:"pageSize,default=20"`
        Success bool `json:"success"`
        Total int64 `json:"total"`
    }
    UpdateMemberReq struct {
        Id int64 `json:"id"`
        MemberLevelId int64 `json:"memberLevelId"`
        Username string `json:"username"`                           // 用户名
        Password string `json:"password"`                           // 密码
        Nickname string `json:"nickname"`                           // 昵称
        Phone string `json:"phone"`                                 // 手机号码
        Status int64 `json:"status"`                                // 帐号启用状态:0->禁用；1->启用
        CreateTime string `json:"createTime"`                       // 注册时间
        Icon string `json:"icon"`                                   // 头像
        Gender int64 `json:"gender"`                                // 性别：0->未知；1->男；2->女
        Birthday string `json:"birthday"`                           // 生日
        City string `json:"city"`                                   // 所做城市
        Job string `json:"job"`                                     // 职业
        PersonalizedSignature string `json:"personalizedSignature"` // 个性签名
        SourceType int64 `json:"sourceType"`                        // 用户来源
        Integration int64 `json:"integration"`                      // 积分
        Growth int64 `json:"growth"`                                // 成长值
        LuckeyCount int64 `json:"luckeyCount"`                      // 剩余抽奖次数
        HistoryIntegration int64 `json:"historyIntegration"`        // 历史积分数量
    }
    UpdateMemberResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    DeleteMemberReq struct {
        Id int64 `json:"id"`
    }
    DeleteMemberResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }

    AddMemberReq struct {
        Username string `json:"username"`
        Password string `json:"password"`
        Mobile string `json:"mobile"`
    }
    AddMemberResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    middleware: CheckUrl
    group: member/member
    prefix: /api/member/member
)
service admin-api {

    @handler MemberList
    post /list (ListMemberReq) returns (ListMemberResp)

    @handler MemberUpdate
    post /update (UpdateMemberReq) returns (UpdateMemberResp)

    @handler MemberDelete
    post /delete (DeleteMemberReq) returns (DeleteMemberResp)

    @handler MemberAdd
    post /add (AddMemberReq) returns (AddMemberResp)
    
}

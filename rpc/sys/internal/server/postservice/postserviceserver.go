// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: sys.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sys/internal/logic/postservice"
	"github.com/feihua/zero-admin/rpc/sys/internal/svc"
	"github.com/feihua/zero-admin/rpc/sys/sysclient"
)

type PostServiceServer struct {
	svcCtx *svc.ServiceContext
	sysclient.UnimplementedPostServiceServer
}

func NewPostServiceServer(svcCtx *svc.ServiceContext) *PostServiceServer {
	return &PostServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加岗位信息
func (s *PostServiceServer) AddPost(ctx context.Context, in *sysclient.AddPostReq) (*sysclient.AddPostResp, error) {
	l := postservicelogic.NewAddPostLogic(ctx, s.svcCtx)
	return l.AddPost(in)
}

// 删除岗位信息
func (s *PostServiceServer) DeletePost(ctx context.Context, in *sysclient.DeletePostReq) (*sysclient.DeletePostResp, error) {
	l := postservicelogic.NewDeletePostLogic(ctx, s.svcCtx)
	return l.DeletePost(in)
}

// 更新岗位信息
func (s *PostServiceServer) UpdatePost(ctx context.Context, in *sysclient.UpdatePostReq) (*sysclient.UpdatePostResp, error) {
	l := postservicelogic.NewUpdatePostLogic(ctx, s.svcCtx)
	return l.UpdatePost(in)
}

// 更新岗位信息状态
func (s *PostServiceServer) UpdatePostStatus(ctx context.Context, in *sysclient.UpdatePostStatusReq) (*sysclient.UpdatePostStatusResp, error) {
	l := postservicelogic.NewUpdatePostStatusLogic(ctx, s.svcCtx)
	return l.UpdatePostStatus(in)
}

// 查询岗位信息详情
func (s *PostServiceServer) QueryPostDetail(ctx context.Context, in *sysclient.QueryPostDetailReq) (*sysclient.QueryPostDetailResp, error) {
	l := postservicelogic.NewQueryPostDetailLogic(ctx, s.svcCtx)
	return l.QueryPostDetail(in)
}

// 查询岗位信息列表
func (s *PostServiceServer) QueryPostList(ctx context.Context, in *sysclient.QueryPostListReq) (*sysclient.QueryPostListResp, error) {
	l := postservicelogic.NewQueryPostListLogic(ctx, s.svcCtx)
	return l.QueryPostList(in)
}

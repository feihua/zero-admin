// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: sys.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/sys/internal/logic/dicttypeservice"
	"github.com/feihua/zero-admin/rpc/sys/internal/svc"
	"github.com/feihua/zero-admin/rpc/sys/sysclient"
)

type DictTypeServiceServer struct {
	svcCtx *svc.ServiceContext
	sysclient.UnimplementedDictTypeServiceServer
}

func NewDictTypeServiceServer(svcCtx *svc.ServiceContext) *DictTypeServiceServer {
	return &DictTypeServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加字典类型
func (s *DictTypeServiceServer) AddDictType(ctx context.Context, in *sysclient.AddDictTypeReq) (*sysclient.AddDictTypeResp, error) {
	l := dicttypeservicelogic.NewAddDictTypeLogic(ctx, s.svcCtx)
	return l.AddDictType(in)
}

// 删除字典类型
func (s *DictTypeServiceServer) DeleteDictType(ctx context.Context, in *sysclient.DeleteDictTypeReq) (*sysclient.DeleteDictTypeResp, error) {
	l := dicttypeservicelogic.NewDeleteDictTypeLogic(ctx, s.svcCtx)
	return l.DeleteDictType(in)
}

// 更新字典类型
func (s *DictTypeServiceServer) UpdateDictType(ctx context.Context, in *sysclient.UpdateDictTypeReq) (*sysclient.UpdateDictTypeResp, error) {
	l := dicttypeservicelogic.NewUpdateDictTypeLogic(ctx, s.svcCtx)
	return l.UpdateDictType(in)
}

// 更新字典类型状态
func (s *DictTypeServiceServer) UpdateDictTypeStatus(ctx context.Context, in *sysclient.UpdateDictTypeStatusReq) (*sysclient.UpdateDictTypeStatusResp, error) {
	l := dicttypeservicelogic.NewUpdateDictTypeStatusLogic(ctx, s.svcCtx)
	return l.UpdateDictTypeStatus(in)
}

// 查询字典类型详情
func (s *DictTypeServiceServer) QueryDictTypeDetail(ctx context.Context, in *sysclient.QueryDictTypeDetailReq) (*sysclient.QueryDictTypeDetailResp, error) {
	l := dicttypeservicelogic.NewQueryDictTypeDetailLogic(ctx, s.svcCtx)
	return l.QueryDictTypeDetail(in)
}

// 查询字典类型列表
func (s *DictTypeServiceServer) QueryDictTypeList(ctx context.Context, in *sysclient.QueryDictTypeListReq) (*sysclient.QueryDictTypeListResp, error) {
	l := dicttypeservicelogic.NewQueryDictTypeListLogic(ctx, s.svcCtx)
	return l.QueryDictTypeList(in)
}

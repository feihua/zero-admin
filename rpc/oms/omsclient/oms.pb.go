// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: rpc/oms/oms.proto

package omsclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加购物车
type AddCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source            int32   `protobuf:"varint,1,opt,name=source,proto3" json:"source,omitempty"`                                                   //来源 1-PC 2-H5 3-小程序 4-APP
	MemberId          int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                               //会员ID
	ProductId         int64   `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                            //商品ID
	ProductSkuId      int64   `protobuf:"varint,4,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                 //商品SKU ID
	Quantity          int32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`                                               //购买数量
	Price             float32 `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车时的价格
	Selected          int32   `protobuf:"varint,7,opt,name=selected,proto3" json:"selected,omitempty"`                                               //是否选中 0-未选中 1-选中
	ProductName       string  `protobuf:"bytes,8,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                       //商品名称
	ProductSubTitle   string  `protobuf:"bytes,9,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`         //商品副标题
	ProductPic        string  `protobuf:"bytes,10,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品主图URL
	ProductSkuCode    string  `protobuf:"bytes,11,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品SKU编码
	ProductSn         string  `protobuf:"bytes,12,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //商品货号
	ProductBrand      string  `protobuf:"bytes,13,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64   `protobuf:"varint,14,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类ID
	ProductAttr       string  `protobuf:"bytes,15,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性JSON
	MemberNickname    string  `protobuf:"bytes,16,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
}

func (x *AddCartItemReq) Reset() {
	*x = AddCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCartItemReq) ProtoMessage() {}

func (x *AddCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCartItemReq.ProtoReflect.Descriptor instead.
func (*AddCartItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{0}
}

func (x *AddCartItemReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *AddCartItemReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddCartItemReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddCartItemReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *AddCartItemReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AddCartItemReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddCartItemReq) GetSelected() int32 {
	if x != nil {
		return x.Selected
	}
	return 0
}

func (x *AddCartItemReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AddCartItemReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *AddCartItemReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *AddCartItemReq) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *AddCartItemReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *AddCartItemReq) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *AddCartItemReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *AddCartItemReq) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *AddCartItemReq) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

type CartItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *CartItemResp) Reset() {
	*x = CartItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItemResp) ProtoMessage() {}

func (x *CartItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItemResp.ProtoReflect.Descriptor instead.
func (*CartItemResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{1}
}

func (x *CartItemResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除购物车
type DeleteCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *DeleteCartItemReq) Reset() {
	*x = DeleteCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCartItemReq) ProtoMessage() {}

func (x *DeleteCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCartItemReq.ProtoReflect.Descriptor instead.
func (*DeleteCartItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCartItemReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteCartItemReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 更新购物车
type UpdateCartItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //主键ID
	MemberId          int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                               //会员ID
	ProductId         int64   `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                            //商品ID
	ProductSkuId      int64   `protobuf:"varint,4,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                 //商品SKU ID
	Quantity          int32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`                                               //购买数量
	Price             float32 `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车时的价格
	Selected          int32   `protobuf:"varint,7,opt,name=selected,proto3" json:"selected,omitempty"`                                               //是否选中 0-未选中 1-选中
	ProductName       string  `protobuf:"bytes,8,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                       //商品名称
	ProductSubTitle   string  `protobuf:"bytes,9,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`         //商品副标题
	ProductPic        string  `protobuf:"bytes,10,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品主图URL
	ProductSkuCode    string  `protobuf:"bytes,11,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品SKU编码
	ProductSn         string  `protobuf:"bytes,12,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //商品货号
	ProductBrand      string  `protobuf:"bytes,13,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64   `protobuf:"varint,14,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类ID
	ProductAttr       string  `protobuf:"bytes,15,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性JSON
	MemberNickname    string  `protobuf:"bytes,16,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
	Source            int32   `protobuf:"varint,17,opt,name=source,proto3" json:"source,omitempty"`                                                  //来源 1-PC 2-H5 3-小程序 4-APP
}

func (x *UpdateCartItemReq) Reset() {
	*x = UpdateCartItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemReq) ProtoMessage() {}

func (x *UpdateCartItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemReq.ProtoReflect.Descriptor instead.
func (*UpdateCartItemReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCartItemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCartItemReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *UpdateCartItemReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateCartItemReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateCartItemReq) GetSelected() int32 {
	if x != nil {
		return x.Selected
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *UpdateCartItemReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *UpdateCartItemReq) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *UpdateCartItemReq) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *UpdateCartItemReq) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

// 修改购物车中某个商品的数量
type UpdateCartItemQuantityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int32 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`                 //购买数量
	Id       int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                             //
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *UpdateCartItemQuantityReq) Reset() {
	*x = UpdateCartItemQuantityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCartItemQuantityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCartItemQuantityReq) ProtoMessage() {}

func (x *UpdateCartItemQuantityReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCartItemQuantityReq.ProtoReflect.Descriptor instead.
func (*UpdateCartItemQuantityReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCartItemQuantityReq) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateCartItemQuantityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCartItemQuantityReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 查询购物车详情
type QueryCartItemDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryCartItemDetailReq) Reset() {
	*x = QueryCartItemDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemDetailReq) ProtoMessage() {}

func (x *QueryCartItemDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemDetailReq.ProtoReflect.Descriptor instead.
func (*QueryCartItemDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{5}
}

func (x *QueryCartItemDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CartItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                           //主键ID
	MemberId          int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                               //会员ID
	ProductId         int64   `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                            //商品ID
	ProductSkuId      int64   `protobuf:"varint,4,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id,omitempty"`                 //商品SKU ID
	Quantity          int32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`                                               //购买数量
	Price             float32 `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`                                                    //添加到购物车时的价格
	Selected          int32   `protobuf:"varint,7,opt,name=selected,proto3" json:"selected,omitempty"`                                               //是否选中 0-未选中 1-选中
	ProductName       string  `protobuf:"bytes,8,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                       //商品名称
	ProductSubTitle   string  `protobuf:"bytes,9,opt,name=product_sub_title,json=productSubTitle,proto3" json:"product_sub_title,omitempty"`         //商品副标题
	ProductPic        string  `protobuf:"bytes,10,opt,name=product_pic,json=productPic,proto3" json:"product_pic,omitempty"`                         //商品主图URL
	ProductSkuCode    string  `protobuf:"bytes,11,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code,omitempty"`           //商品SKU编码
	ProductSn         string  `protobuf:"bytes,12,opt,name=product_sn,json=productSn,proto3" json:"product_sn,omitempty"`                            //商品货号
	ProductBrand      string  `protobuf:"bytes,13,opt,name=product_brand,json=productBrand,proto3" json:"product_brand,omitempty"`                   //商品品牌
	ProductCategoryId int64   `protobuf:"varint,14,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"` //商品分类ID
	ProductAttr       string  `protobuf:"bytes,15,opt,name=product_attr,json=productAttr,proto3" json:"product_attr,omitempty"`                      //商品销售属性JSON
	MemberNickname    string  `protobuf:"bytes,16,opt,name=member_nickname,json=memberNickname,proto3" json:"member_nickname,omitempty"`             //会员昵称
	Source            int32   `protobuf:"varint,17,opt,name=source,proto3" json:"source,omitempty"`                                                  //来源 1-PC 2-H5 3-小程序 4-APP
	DeleteStatus      int32   `protobuf:"varint,18,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status,omitempty"`                  //删除状态 0-正常 1-删除
	ExpireTime        string  `protobuf:"bytes,19,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`                         //过期时间
	CreateTime        string  `protobuf:"bytes,20,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                         //创建时间
	UpdateTime        string  `protobuf:"bytes,21,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                         //更新时间
}

func (x *CartItemData) Reset() {
	*x = CartItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartItemData) ProtoMessage() {}

func (x *CartItemData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartItemData.ProtoReflect.Descriptor instead.
func (*CartItemData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{6}
}

func (x *CartItemData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CartItemData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CartItemData) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *CartItemData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *CartItemData) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CartItemData) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CartItemData) GetSelected() int32 {
	if x != nil {
		return x.Selected
	}
	return 0
}

func (x *CartItemData) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CartItemData) GetProductSubTitle() string {
	if x != nil {
		return x.ProductSubTitle
	}
	return ""
}

func (x *CartItemData) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *CartItemData) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *CartItemData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *CartItemData) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *CartItemData) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *CartItemData) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *CartItemData) GetMemberNickname() string {
	if x != nil {
		return x.MemberNickname
	}
	return ""
}

func (x *CartItemData) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *CartItemData) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *CartItemData) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *CartItemData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CartItemData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询购物车列
type QueryCartItemListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` //会员id
}

func (x *QueryCartItemListReq) Reset() {
	*x = QueryCartItemListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemListReq) ProtoMessage() {}

func (x *QueryCartItemListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemListReq.ProtoReflect.Descriptor instead.
func (*QueryCartItemListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCartItemListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type QueryCartItemListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CartItemData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCartItemListResp) Reset() {
	*x = QueryCartItemListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCartItemListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCartItemListResp) ProtoMessage() {}

func (x *QueryCartItemListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCartItemListResp.ProtoReflect.Descriptor instead.
func (*QueryCartItemListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{8}
}

func (x *QueryCartItemListResp) GetList() []*CartItemData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加公司收发货地址
type AddCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             //主键ID
	AddressName   string `protobuf:"bytes,2,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	Region        string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                      //区
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	SendStatus    int32  `protobuf:"varint,9,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`           //默认发货地址：0->否；1->是
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //默认收货地址：0->否；1->是
	CreateBy      int64  `protobuf:"varint,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建人ID
}

func (x *AddCompanyAddressReq) Reset() {
	*x = AddCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyAddressReq) ProtoMessage() {}

func (x *AddCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*AddCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{9}
}

func (x *AddCompanyAddressReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddCompanyAddressReq) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *AddCompanyAddressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCompanyAddressReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddCompanyAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddCompanyAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddCompanyAddressReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddCompanyAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *AddCompanyAddressReq) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *AddCompanyAddressReq) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *AddCompanyAddressReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type AddCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddCompanyAddressResp) Reset() {
	*x = AddCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyAddressResp) ProtoMessage() {}

func (x *AddCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*AddCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{10}
}

func (x *AddCompanyAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除公司收发货地址
type DeleteCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteCompanyAddressReq) Reset() {
	*x = DeleteCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyAddressReq) ProtoMessage() {}

func (x *DeleteCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*DeleteCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCompanyAddressReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteCompanyAddressResp) Reset() {
	*x = DeleteCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyAddressResp) ProtoMessage() {}

func (x *DeleteCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*DeleteCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteCompanyAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新公司收发货地址
type UpdateCompanyAddressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             //主键ID
	AddressName   string `protobuf:"bytes,2,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	Region        string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                      //区
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	SendStatus    int32  `protobuf:"varint,9,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`           //默认发货地址：0->否；1->是
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //默认收货地址：0->否；1->是
	UpdateBy      int64  `protobuf:"varint,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                //更新人ID
}

func (x *UpdateCompanyAddressReq) Reset() {
	*x = UpdateCompanyAddressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressReq) ProtoMessage() {}

func (x *UpdateCompanyAddressReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressReq.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateCompanyAddressReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompanyAddressReq) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *UpdateCompanyAddressReq) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *UpdateCompanyAddressReq) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *UpdateCompanyAddressReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateCompanyAddressResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCompanyAddressResp) Reset() {
	*x = UpdateCompanyAddressResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressResp) ProtoMessage() {}

func (x *UpdateCompanyAddressResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressResp.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateCompanyAddressResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新公司收发货地址状态
type UpdateCompanyAddressStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //主键ID
	Status   int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                     //默认发货地址：0->否；1->是
	UpdateBy int64 `protobuf:"varint,4,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新人ID
}

func (x *UpdateCompanyAddressStatusReq) Reset() {
	*x = UpdateCompanyAddressStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressStatusReq) ProtoMessage() {}

func (x *UpdateCompanyAddressStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateCompanyAddressStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompanyAddressStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateCompanyAddressStatusReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateCompanyAddressStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateCompanyAddressStatusResp) Reset() {
	*x = UpdateCompanyAddressStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyAddressStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyAddressStatusResp) ProtoMessage() {}

func (x *UpdateCompanyAddressStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyAddressStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateCompanyAddressStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCompanyAddressStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询公司收发货地址详情
type QueryCompanyAddressDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryCompanyAddressDetailReq) Reset() {
	*x = QueryCompanyAddressDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressDetailReq) ProtoMessage() {}

func (x *QueryCompanyAddressDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressDetailReq.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{17}
}

func (x *QueryCompanyAddressDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryCompanyAddressDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             //主键ID
	AddressName   string `protobuf:"bytes,2,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	Region        string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                      //区
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	SendStatus    int32  `protobuf:"varint,9,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`           //默认发货地址：0->否；1->是
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //默认收货地址：0->否；1->是
	CreateBy      int64  `protobuf:"varint,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建人ID
	CreateTime    string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //创建时间
	UpdateBy      int64  `protobuf:"varint,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                //更新人ID
	UpdateTime    string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`           //更新时间
}

func (x *QueryCompanyAddressDetailResp) Reset() {
	*x = QueryCompanyAddressDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressDetailResp) ProtoMessage() {}

func (x *QueryCompanyAddressDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressDetailResp.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{18}
}

func (x *QueryCompanyAddressDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryCompanyAddressDetailResp) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QueryCompanyAddressDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询公司收发货地址列表
type QueryCompanyAddressListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressName   string `protobuf:"bytes,1,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`        //地址名称
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                         //收发货人姓名
	Phone         string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`                                       //收货人电话
	SendStatus    int32  `protobuf:"varint,4,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`          //默认发货地址：0->否；1->是
	ReceiveStatus int32  `protobuf:"varint,5,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //默认收货地址：0->否；1->是
	PageNum       int32  `protobuf:"varint,6,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                   //第几页
	PageSize      int32  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                //每页的数量
}

func (x *QueryCompanyAddressListReq) Reset() {
	*x = QueryCompanyAddressListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressListReq) ProtoMessage() {}

func (x *QueryCompanyAddressListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressListReq.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{19}
}

func (x *QueryCompanyAddressListReq) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *QueryCompanyAddressListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryCompanyAddressListReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryCompanyAddressListReq) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *QueryCompanyAddressListReq) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *QueryCompanyAddressListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryCompanyAddressListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CompanyAddressListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             //主键ID
	AddressName   string `protobuf:"bytes,2,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`         //地址名称
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                          //收发货人姓名
	Phone         string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                        //收货人电话
	Province      string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`                                  //省/直辖市
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                          //市
	Region        string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`                                      //区
	DetailAddress string `protobuf:"bytes,8,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address,omitempty"`   //详细地址
	SendStatus    int32  `protobuf:"varint,9,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`           //默认发货地址：0->否；1->是
	ReceiveStatus int32  `protobuf:"varint,10,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //默认收货地址：0->否；1->是
	CreateBy      int64  `protobuf:"varint,11,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                //创建人ID
	CreateTime    string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //创建时间
	UpdateBy      int64  `protobuf:"varint,13,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                //更新人ID
	UpdateTime    string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`           //更新时间
}

func (x *CompanyAddressListData) Reset() {
	*x = CompanyAddressListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyAddressListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyAddressListData) ProtoMessage() {}

func (x *CompanyAddressListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyAddressListData.ProtoReflect.Descriptor instead.
func (*CompanyAddressListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{20}
}

func (x *CompanyAddressListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompanyAddressListData) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *CompanyAddressListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyAddressListData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CompanyAddressListData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CompanyAddressListData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CompanyAddressListData) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CompanyAddressListData) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

func (x *CompanyAddressListData) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *CompanyAddressListData) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *CompanyAddressListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *CompanyAddressListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CompanyAddressListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *CompanyAddressListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryCompanyAddressListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*CompanyAddressListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryCompanyAddressListResp) Reset() {
	*x = QueryCompanyAddressListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCompanyAddressListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCompanyAddressListResp) ProtoMessage() {}

func (x *QueryCompanyAddressListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCompanyAddressListResp.ProtoReflect.Descriptor instead.
func (*QueryCompanyAddressListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{21}
}

func (x *QueryCompanyAddressListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryCompanyAddressListResp) GetList() []*CompanyAddressListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加订单收货地址
type AddOrderDeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	OrderId          int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //订单ID
	OrderNo          string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                            //订单编号
	ReceiverName     string `protobuf:"bytes,4,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`             //收货人姓名
	ReceiverPhone    string `protobuf:"bytes,5,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`          //收货人电话
	ReceiverProvince string `protobuf:"bytes,6,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"` //省份
	ReceiverCity     string `protobuf:"bytes,7,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`             //城市
	ReceiverDistrict string `protobuf:"bytes,8,opt,name=receiver_district,json=receiverDistrict,proto3" json:"receiver_district,omitempty"` //区县
	ReceiverAddress  string `protobuf:"bytes,9,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`    //详细地址
	DeliveryCompany  string `protobuf:"bytes,10,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"`   //物流公司
	DeliveryNo       string `protobuf:"bytes,11,opt,name=delivery_no,json=deliveryNo,proto3" json:"delivery_no,omitempty"`                  //物流单号
}

func (x *AddOrderDeliveryReq) Reset() {
	*x = AddOrderDeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderDeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderDeliveryReq) ProtoMessage() {}

func (x *AddOrderDeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderDeliveryReq.ProtoReflect.Descriptor instead.
func (*AddOrderDeliveryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{22}
}

func (x *AddOrderDeliveryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderDeliveryReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddOrderDeliveryReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetReceiverDistrict() string {
	if x != nil {
		return x.ReceiverDistrict
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *AddOrderDeliveryReq) GetDeliveryNo() string {
	if x != nil {
		return x.DeliveryNo
	}
	return ""
}

type AddOrderDeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderDeliveryResp) Reset() {
	*x = AddOrderDeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderDeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderDeliveryResp) ProtoMessage() {}

func (x *AddOrderDeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderDeliveryResp.ProtoReflect.Descriptor instead.
func (*AddOrderDeliveryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{23}
}

func (x *AddOrderDeliveryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除订单收货地址
type DeleteOrderDeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderDeliveryReq) Reset() {
	*x = DeleteOrderDeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderDeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderDeliveryReq) ProtoMessage() {}

func (x *DeleteOrderDeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderDeliveryReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderDeliveryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteOrderDeliveryReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderDeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderDeliveryResp) Reset() {
	*x = DeleteOrderDeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderDeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderDeliveryResp) ProtoMessage() {}

func (x *DeleteOrderDeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderDeliveryResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderDeliveryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteOrderDeliveryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单收货地址
type UpdateOrderDeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	OrderId          int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //订单ID
	OrderNo          string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                            //订单编号
	ReceiverName     string `protobuf:"bytes,4,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`             //收货人姓名
	ReceiverPhone    string `protobuf:"bytes,5,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`          //收货人电话
	ReceiverProvince string `protobuf:"bytes,6,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"` //省份
	ReceiverCity     string `protobuf:"bytes,7,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`             //城市
	ReceiverDistrict string `protobuf:"bytes,8,opt,name=receiver_district,json=receiverDistrict,proto3" json:"receiver_district,omitempty"` //区县
	ReceiverAddress  string `protobuf:"bytes,9,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`    //详细地址
	DeliveryCompany  string `protobuf:"bytes,10,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"`   //物流公司
	DeliveryNo       string `protobuf:"bytes,11,opt,name=delivery_no,json=deliveryNo,proto3" json:"delivery_no,omitempty"`                  //物流单号
}

func (x *UpdateOrderDeliveryReq) Reset() {
	*x = UpdateOrderDeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderDeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderDeliveryReq) ProtoMessage() {}

func (x *UpdateOrderDeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderDeliveryReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderDeliveryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateOrderDeliveryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderDeliveryReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateOrderDeliveryReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetReceiverDistrict() string {
	if x != nil {
		return x.ReceiverDistrict
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *UpdateOrderDeliveryReq) GetDeliveryNo() string {
	if x != nil {
		return x.DeliveryNo
	}
	return ""
}

type UpdateOrderDeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderDeliveryResp) Reset() {
	*x = UpdateOrderDeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderDeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderDeliveryResp) ProtoMessage() {}

func (x *UpdateOrderDeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderDeliveryResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderDeliveryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateOrderDeliveryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单收货地址详情
type QueryOrderDeliveryDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderDeliveryDetailReq) Reset() {
	*x = QueryOrderDeliveryDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderDeliveryDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderDeliveryDetailReq) ProtoMessage() {}

func (x *QueryOrderDeliveryDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderDeliveryDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderDeliveryDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{28}
}

func (x *QueryOrderDeliveryDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderDeliveryDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	OrderId          int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //订单ID
	OrderNo          string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                            //订单编号
	ReceiverName     string `protobuf:"bytes,4,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`             //收货人姓名
	ReceiverPhone    string `protobuf:"bytes,5,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`          //收货人电话
	ReceiverProvince string `protobuf:"bytes,6,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"` //省份
	ReceiverCity     string `protobuf:"bytes,7,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`             //城市
	ReceiverDistrict string `protobuf:"bytes,8,opt,name=receiver_district,json=receiverDistrict,proto3" json:"receiver_district,omitempty"` //区县
	ReceiverAddress  string `protobuf:"bytes,9,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`    //详细地址
	DeliveryCompany  string `protobuf:"bytes,10,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"`   //物流公司
	DeliveryNo       string `protobuf:"bytes,11,opt,name=delivery_no,json=deliveryNo,proto3" json:"delivery_no,omitempty"`                  //物流单号
	CreateTime       string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                  //创建时间
	UpdateTime       string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                  //更新时间
}

func (x *QueryOrderDeliveryDetailResp) Reset() {
	*x = QueryOrderDeliveryDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderDeliveryDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderDeliveryDetailResp) ProtoMessage() {}

func (x *QueryOrderDeliveryDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderDeliveryDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderDeliveryDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{29}
}

func (x *QueryOrderDeliveryDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderDeliveryDetailResp) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderDeliveryDetailResp) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetReceiverDistrict() string {
	if x != nil {
		return x.ReceiverDistrict
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetDeliveryNo() string {
	if x != nil {
		return x.DeliveryNo
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryOrderDeliveryDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询订单收货地址列表
type QueryOrderDeliveryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId         int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                        //订单ID
	OrderNo         string `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                         //订单编号
	ReceiverName    string `protobuf:"bytes,3,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`          //收货人姓名
	ReceiverPhone   string `protobuf:"bytes,4,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`       //收货人电话
	ReceiverAddress string `protobuf:"bytes,5,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"` //详细地址
	DeliveryCompany string `protobuf:"bytes,6,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"` //物流公司
	DeliveryNo      string `protobuf:"bytes,7,opt,name=delivery_no,json=deliveryNo,proto3" json:"delivery_no,omitempty"`                //物流单号
	PageNum         int32  `protobuf:"varint,8,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                        //第几页
	PageSize        int32  `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                     //每页的数量
}

func (x *QueryOrderDeliveryListReq) Reset() {
	*x = QueryOrderDeliveryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderDeliveryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderDeliveryListReq) ProtoMessage() {}

func (x *QueryOrderDeliveryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderDeliveryListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderDeliveryListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{30}
}

func (x *QueryOrderDeliveryListReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderDeliveryListReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *QueryOrderDeliveryListReq) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *QueryOrderDeliveryListReq) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *QueryOrderDeliveryListReq) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *QueryOrderDeliveryListReq) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *QueryOrderDeliveryListReq) GetDeliveryNo() string {
	if x != nil {
		return x.DeliveryNo
	}
	return ""
}

func (x *QueryOrderDeliveryListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderDeliveryListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderDeliveryListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	OrderId          int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //订单ID
	OrderNo          string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                            //订单编号
	ReceiverName     string `protobuf:"bytes,4,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`             //收货人姓名
	ReceiverPhone    string `protobuf:"bytes,5,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone,omitempty"`          //收货人电话
	ReceiverProvince string `protobuf:"bytes,6,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province,omitempty"` //省份
	ReceiverCity     string `protobuf:"bytes,7,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city,omitempty"`             //城市
	ReceiverDistrict string `protobuf:"bytes,8,opt,name=receiver_district,json=receiverDistrict,proto3" json:"receiver_district,omitempty"` //区县
	ReceiverAddress  string `protobuf:"bytes,9,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`    //详细地址
	DeliveryCompany  string `protobuf:"bytes,10,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company,omitempty"`   //物流公司
	DeliveryNo       string `protobuf:"bytes,11,opt,name=delivery_no,json=deliveryNo,proto3" json:"delivery_no,omitempty"`                  //物流单号
	CreateTime       string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                  //创建时间
	UpdateTime       string `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                  //更新时间
	IsDeleted        int32  `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`                    //是否删除
}

func (x *OrderDeliveryListData) Reset() {
	*x = OrderDeliveryListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDeliveryListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDeliveryListData) ProtoMessage() {}

func (x *OrderDeliveryListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDeliveryListData.ProtoReflect.Descriptor instead.
func (*OrderDeliveryListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{31}
}

func (x *OrderDeliveryListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDeliveryListData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderDeliveryListData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderDeliveryListData) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *OrderDeliveryListData) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *OrderDeliveryListData) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *OrderDeliveryListData) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *OrderDeliveryListData) GetReceiverDistrict() string {
	if x != nil {
		return x.ReceiverDistrict
	}
	return ""
}

func (x *OrderDeliveryListData) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *OrderDeliveryListData) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *OrderDeliveryListData) GetDeliveryNo() string {
	if x != nil {
		return x.DeliveryNo
	}
	return ""
}

func (x *OrderDeliveryListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderDeliveryListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *OrderDeliveryListData) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type QueryOrderDeliveryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderDeliveryListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderDeliveryListResp) Reset() {
	*x = QueryOrderDeliveryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderDeliveryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderDeliveryListResp) ProtoMessage() {}

func (x *QueryOrderDeliveryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderDeliveryListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderDeliveryListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{32}
}

func (x *QueryOrderDeliveryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderDeliveryListResp) GetList() []*OrderDeliveryListData {
	if x != nil {
		return x.List
	}
	return nil
}

type OrderItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //
	OrderId         int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //订单ID
	OrderNo         string  `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                            //订单编号
	OrderItemStatus int32   `protobuf:"varint,4,opt,name=order_item_status,json=orderItemStatus,proto3" json:"order_item_status,omitempty"` //订单商品状态：1-正常,2-退货申请中,3-已退货,4-已拒绝
	SkuId           int64   `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                                 //商品SKU ID
	SkuName         string  `protobuf:"bytes,6,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`                            //商品名称
	SkuPic          string  `protobuf:"bytes,7,opt,name=sku_pic,json=skuPic,proto3" json:"sku_pic,omitempty"`                               //商品图片
	SkuPrice        float32 `protobuf:"fixed32,8,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`                       //商品单价
	SkuQuantity     int32   `protobuf:"varint,9,opt,name=sku_quantity,json=skuQuantity,proto3" json:"sku_quantity,omitempty"`               //商品数量
	SpecData        string  `protobuf:"bytes,10,opt,name=spec_data,json=specData,proto3" json:"spec_data,omitempty"`                        //规格数据
	SkuTotalAmount  float32 `protobuf:"fixed32,11,opt,name=sku_total_amount,json=skuTotalAmount,proto3" json:"sku_total_amount,omitempty"`  //商品总金额
	PromotionAmount float32 `protobuf:"fixed32,12,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"` //促销分摊金额
	CouponAmount    float32 `protobuf:"fixed32,13,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`          //优惠券分摊金额
	PointsAmount    float32 `protobuf:"fixed32,14,opt,name=points_amount,json=pointsAmount,proto3" json:"points_amount,omitempty"`          //积分分摊金额
	DiscountAmount  float32 `protobuf:"fixed32,15,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`    //优惠分摊金额
	RealAmount      float32 `protobuf:"fixed32,16,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`                //实付金额
}

func (x *OrderItemData) Reset() {
	*x = OrderItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItemData) ProtoMessage() {}

func (x *OrderItemData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItemData.ProtoReflect.Descriptor instead.
func (*OrderItemData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{33}
}

func (x *OrderItemData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderItemData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderItemData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderItemData) GetOrderItemStatus() int32 {
	if x != nil {
		return x.OrderItemStatus
	}
	return 0
}

func (x *OrderItemData) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *OrderItemData) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *OrderItemData) GetSkuPic() string {
	if x != nil {
		return x.SkuPic
	}
	return ""
}

func (x *OrderItemData) GetSkuPrice() float32 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *OrderItemData) GetSkuQuantity() int32 {
	if x != nil {
		return x.SkuQuantity
	}
	return 0
}

func (x *OrderItemData) GetSpecData() string {
	if x != nil {
		return x.SpecData
	}
	return ""
}

func (x *OrderItemData) GetSkuTotalAmount() float32 {
	if x != nil {
		return x.SkuTotalAmount
	}
	return 0
}

func (x *OrderItemData) GetPromotionAmount() float32 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderItemData) GetCouponAmount() float32 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderItemData) GetPointsAmount() float32 {
	if x != nil {
		return x.PointsAmount
	}
	return 0
}

func (x *OrderItemData) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *OrderItemData) GetRealAmount() float32 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

// 添加订单
type AddOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   //
	OrderNo         string           `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                           //订单编号
	UserId          int64            `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                             //用户ID
	OrderStatus     int32            `protobuf:"varint,4,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`              //订单状态：1-待支付,2-已支付,3-已发货,4-已完成,5-已取消,6-已退款,7-售后中
	TotalAmount     float32          `protobuf:"fixed32,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`             //订单总金额
	PromotionAmount float32          `protobuf:"fixed32,6,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"` //促销金额
	CouponAmount    float32          `protobuf:"fixed32,7,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`          //优惠券金额
	PointsAmount    float32          `protobuf:"fixed32,8,opt,name=points_amount,json=pointsAmount,proto3" json:"points_amount,omitempty"`          //积分金额
	DiscountAmount  float32          `protobuf:"fixed32,9,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`    //优惠金额
	FreightAmount   float32          `protobuf:"fixed32,10,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`      //运费金额
	PayAmount       float32          `protobuf:"fixed32,11,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`                  //实付金额
	SourceType      int32            `protobuf:"varint,12,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                //订单来源：1-APP,2-PC,3-小程序
	UsePoints       int32            `protobuf:"varint,13,opt,name=use_points,json=usePoints,proto3" json:"use_points,omitempty"`                   //下单时使用的积分
	Remark          string           `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`                                           //订单备注
	OrderItemData   []*OrderItemData `protobuf:"bytes,15,rep,name=order_item_data,json=orderItemData,proto3" json:"order_item_data,omitempty"`      //订单商品
}

func (x *AddOrderReq) Reset() {
	*x = AddOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReq) ProtoMessage() {}

func (x *AddOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReq.ProtoReflect.Descriptor instead.
func (*AddOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{34}
}

func (x *AddOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AddOrderReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddOrderReq) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *AddOrderReq) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *AddOrderReq) GetPromotionAmount() float32 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *AddOrderReq) GetCouponAmount() float32 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *AddOrderReq) GetPointsAmount() float32 {
	if x != nil {
		return x.PointsAmount
	}
	return 0
}

func (x *AddOrderReq) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *AddOrderReq) GetFreightAmount() float32 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *AddOrderReq) GetPayAmount() float32 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *AddOrderReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *AddOrderReq) GetUsePoints() int32 {
	if x != nil {
		return x.UsePoints
	}
	return 0
}

func (x *AddOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddOrderReq) GetOrderItemData() []*OrderItemData {
	if x != nil {
		return x.OrderItemData
	}
	return nil
}

type AddOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` //订单创建成功后,返回订单id
}

func (x *AddOrderResp) Reset() {
	*x = AddOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderResp) ProtoMessage() {}

func (x *AddOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderResp.ProtoReflect.Descriptor instead.
func (*AddOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{35}
}

func (x *AddOrderResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 删除订单
type DeleteOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	MemberId int64   `protobuf:"varint,2,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
}

func (x *DeleteOrderReq) Reset() {
	*x = DeleteOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReq) ProtoMessage() {}

func (x *DeleteOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteOrderReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteOrderReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type DeleteOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderResp) Reset() {
	*x = DeleteOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderResp) ProtoMessage() {}

func (x *DeleteOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteOrderResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单
type UpdateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                            //
	OrderStatus        int32   `protobuf:"varint,2,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`                       //订单状态：1-待支付,2-已支付,3-已发货,4-已完成,5-已取消,6-已退款,7-售后中
	ExpressOrderNumber string  `protobuf:"bytes,3,opt,name=express_order_number,json=expressOrderNumber,proto3" json:"express_order_number,omitempty"` //快递单号
	Remark             string  `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`                                                     //订单备注
	FreightAmount      float32 `protobuf:"fixed32,5,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`                //运费金额
	OrderNo            string  `protobuf:"bytes,6,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                    //订单编号
}

func (x *UpdateOrderReq) Reset() {
	*x = UpdateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReq) ProtoMessage() {}

func (x *UpdateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReq) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *UpdateOrderReq) GetExpressOrderNumber() string {
	if x != nil {
		return x.ExpressOrderNumber
	}
	return ""
}

func (x *UpdateOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateOrderReq) GetFreightAmount() float32 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *UpdateOrderReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type UpdateOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderResp) Reset() {
	*x = UpdateOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderResp) ProtoMessage() {}

func (x *UpdateOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateOrderResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单状态
type UpdateOrderStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids           []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                                    //
	OrderStatus   int32   `protobuf:"varint,4,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`        //订单状态：1-待支付,2-已支付,3-已发货,4-已完成,5-已取消,6-已退款,7-售后中
	ReceiveStatus int32   `protobuf:"varint,20,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"` //是否确认收货：0->否,1->是
}

func (x *UpdateOrderStatusReq) Reset() {
	*x = UpdateOrderStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusReq) ProtoMessage() {}

func (x *UpdateOrderStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateOrderStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateOrderStatusReq) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *UpdateOrderStatusReq) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

type UpdateOrderStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderStatusResp) Reset() {
	*x = UpdateOrderStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStatusResp) ProtoMessage() {}

func (x *UpdateOrderStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateOrderStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单详情
type QueryOrderDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户ID
}

func (x *QueryOrderDetailReq) Reset() {
	*x = QueryOrderDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderDetailReq) ProtoMessage() {}

func (x *QueryOrderDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{42}
}

func (x *QueryOrderDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderDetailReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QueryOrderDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *OrderListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` //订单详情
}

func (x *QueryOrderDetailResp) Reset() {
	*x = QueryOrderDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderDetailResp) ProtoMessage() {}

func (x *QueryOrderDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{43}
}

func (x *QueryOrderDetailResp) GetData() *OrderListData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 分页查询订单列表
type QueryOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderNo            string `protobuf:"bytes,1,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                    //订单编号
	UserId             int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                      //用户ID
	OrderStatus        int32  `protobuf:"varint,3,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`                       //订单状态：1-待支付,2-已支付,3-已发货,4-已完成,5-已取消,6-已退款,7-售后中
	PayType            int32  `protobuf:"varint,4,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                                   //支付方式：1-支付宝,2-微信,3-银联
	SourceType         int32  `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                          //订单来源：1-APP,2-PC,3-小程序
	ExpressOrderNumber string `protobuf:"bytes,6,opt,name=express_order_number,json=expressOrderNumber,proto3" json:"express_order_number,omitempty"` //快递单号
	PageNum            int32  `protobuf:"varint,7,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                                   //第几页
	PageSize           int32  `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                //每页的数量
}

func (x *QueryOrderListReq) Reset() {
	*x = QueryOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderListReq) ProtoMessage() {}

func (x *QueryOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{44}
}

func (x *QueryOrderListReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *QueryOrderListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QueryOrderListReq) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *QueryOrderListReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *QueryOrderListReq) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *QueryOrderListReq) GetExpressOrderNumber() string {
	if x != nil {
		return x.ExpressOrderNumber
	}
	return ""
}

func (x *QueryOrderListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderOptLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	OrderId       int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   //订单ID
	OrderNo       string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                    //订单编号
	OperationType int32  `protobuf:"varint,4,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"` //操作类型：1-创建订单，2-支付订单，3-发货，4-确认收货，5-取消订单，6-退款
	OperatorId    int64  `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`          //操作人ID
	OperatorType  int32  `protobuf:"varint,6,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`    //操作人类型：1-用户，2-系统，3-管理员
	OperatorNote  string `protobuf:"bytes,7,opt,name=operator_note,json=operatorNote,proto3" json:"operator_note,omitempty"`     //操作备注
	CreateTime    string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //操作时间
}

func (x *OrderOptLogData) Reset() {
	*x = OrderOptLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOptLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOptLogData) ProtoMessage() {}

func (x *OrderOptLogData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOptLogData.ProtoReflect.Descriptor instead.
func (*OrderOptLogData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{45}
}

func (x *OrderOptLogData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderOptLogData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderOptLogData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderOptLogData) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

func (x *OrderOptLogData) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *OrderOptLogData) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *OrderOptLogData) GetOperatorNote() string {
	if x != nil {
		return x.OperatorNote
	}
	return ""
}

func (x *OrderOptLogData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type OrderListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                             //
	OrderNo            string             `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                                     //订单编号
	UserId             int64              `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                       //用户ID
	OrderStatus        int32              `protobuf:"varint,4,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`                        //订单状态：1-待支付,2-已支付,3-已发货,4-已完成,5-已取消,6-已退款,7-售后中
	TotalAmount        float32            `protobuf:"fixed32,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`                       //订单总金额
	PromotionAmount    float32            `protobuf:"fixed32,6,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount,omitempty"`           //促销金额
	CouponAmount       float32            `protobuf:"fixed32,7,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount,omitempty"`                    //优惠券金额
	PointsAmount       float32            `protobuf:"fixed32,8,opt,name=points_amount,json=pointsAmount,proto3" json:"points_amount,omitempty"`                    //积分金额
	DiscountAmount     float32            `protobuf:"fixed32,9,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`              //优惠金额
	FreightAmount      float32            `protobuf:"fixed32,10,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount,omitempty"`                //运费金额
	PayAmount          float32            `protobuf:"fixed32,11,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`                            //实付金额
	PayType            int32              `protobuf:"varint,12,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                                   //支付方式：1-支付宝,2-微信,3-银联
	PayTime            string             `protobuf:"bytes,13,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`                                    //支付时间
	DeliveryTime       string             `protobuf:"bytes,14,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`                     //发货时间
	ReceiveTime        string             `protobuf:"bytes,15,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`                        //收货时间
	CommentTime        string             `protobuf:"bytes,16,opt,name=comment_time,json=commentTime,proto3" json:"comment_time,omitempty"`                        //评价时间
	SourceType         int32              `protobuf:"varint,17,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                          //订单来源：1-APP,2-PC,3-小程序
	ExpressOrderNumber string             `protobuf:"bytes,18,opt,name=express_order_number,json=expressOrderNumber,proto3" json:"express_order_number,omitempty"` //快递单号
	UsePoints          int32              `protobuf:"varint,19,opt,name=use_points,json=usePoints,proto3" json:"use_points,omitempty"`                             //下单时使用的积分
	ReceiveStatus      int32              `protobuf:"varint,20,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status,omitempty"`                 //是否确认收货：0->否,1->是
	Remark             string             `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`                                                     //订单备注
	CreateTime         string             `protobuf:"bytes,22,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                           //提交时间
	UpdateTime         string             `protobuf:"bytes,23,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                           //
	OrderItemData      []*OrderItemData   `protobuf:"bytes,24,rep,name=order_item_data,json=orderItemData,proto3" json:"order_item_data,omitempty"`                //订单商品
	OptLogData         []*OrderOptLogData `protobuf:"bytes,25,rep,name=opt_log_data,json=optLogData,proto3" json:"opt_log_data,omitempty"`                         //订单操作记录
}

func (x *OrderListData) Reset() {
	*x = OrderListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListData) ProtoMessage() {}

func (x *OrderListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListData.ProtoReflect.Descriptor instead.
func (*OrderListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{46}
}

func (x *OrderListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderListData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderListData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderListData) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *OrderListData) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderListData) GetPromotionAmount() float32 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderListData) GetCouponAmount() float32 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderListData) GetPointsAmount() float32 {
	if x != nil {
		return x.PointsAmount
	}
	return 0
}

func (x *OrderListData) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *OrderListData) GetFreightAmount() float32 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *OrderListData) GetPayAmount() float32 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *OrderListData) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderListData) GetPayTime() string {
	if x != nil {
		return x.PayTime
	}
	return ""
}

func (x *OrderListData) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *OrderListData) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderListData) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *OrderListData) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *OrderListData) GetExpressOrderNumber() string {
	if x != nil {
		return x.ExpressOrderNumber
	}
	return ""
}

func (x *OrderListData) GetUsePoints() int32 {
	if x != nil {
		return x.UsePoints
	}
	return 0
}

func (x *OrderListData) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *OrderListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OrderListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *OrderListData) GetOrderItemData() []*OrderItemData {
	if x != nil {
		return x.OrderItemData
	}
	return nil
}

func (x *OrderListData) GetOptLogData() []*OrderOptLogData {
	if x != nil {
		return x.OptLogData
	}
	return nil
}

type QueryOrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderListResp) Reset() {
	*x = QueryOrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderListResp) ProtoMessage() {}

func (x *QueryOrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{47}
}

func (x *QueryOrderListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderListResp) GetList() []*OrderListData {
	if x != nil {
		return x.List
	}
	return nil
}

type DeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`         //订单id
	DeliverySn string `protobuf:"bytes,2,opt,name=delivery_sn,json=deliverySn,proto3" json:"delivery_sn,omitempty"` //物流单号
	OperatorId int64  `protobuf:"varint,3,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OrderNo    string `protobuf:"bytes,4,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
}

func (x *DeliveryReq) Reset() {
	*x = DeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryReq) ProtoMessage() {}

func (x *DeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryReq.ProtoReflect.Descriptor instead.
func (*DeliveryReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{48}
}

func (x *DeliveryReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DeliveryReq) GetDeliverySn() string {
	if x != nil {
		return x.DeliverySn
	}
	return ""
}

func (x *DeliveryReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *DeliveryReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type DeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeliveryResp) Reset() {
	*x = DeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryResp) ProtoMessage() {}

func (x *DeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryResp.ProtoReflect.Descriptor instead.
func (*DeliveryResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{49}
}

func (x *DeliveryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type CloseOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
	Note       string  `protobuf:"bytes,2,opt,name=Note,proto3" json:"Note,omitempty"`
	OperatorId int64   `protobuf:"varint,3,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OrderNo    string  `protobuf:"bytes,4,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
}

func (x *CloseOrderReq) Reset() {
	*x = CloseOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderReq) ProtoMessage() {}

func (x *CloseOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderReq.ProtoReflect.Descriptor instead.
func (*CloseOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{50}
}

func (x *CloseOrderReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CloseOrderReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *CloseOrderReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CloseOrderReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type CloseOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *CloseOrderResp) Reset() {
	*x = CloseOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderResp) ProtoMessage() {}

func (x *CloseOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderResp.ProtoReflect.Descriptor instead.
func (*CloseOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{51}
}

func (x *CloseOrderResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateReceiverInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateReceiverInfoResp) Reset() {
	*x = UpdateReceiverInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReceiverInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReceiverInfoResp) ProtoMessage() {}

func (x *UpdateReceiverInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReceiverInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateReceiverInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateReceiverInfoResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type CancelOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	OrderId  int64 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *CancelOrderReq) Reset() {
	*x = CancelOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderReq) ProtoMessage() {}

func (x *CancelOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderReq.ProtoReflect.Descriptor instead.
func (*CancelOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{53}
}

func (x *CancelOrderReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CancelOrderReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ReleaseSkuStockLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuId    int64 `protobuf:"varint,1,opt,name=ProductSkuId,proto3" json:"ProductSkuId,omitempty"`
	ProductQuantity int32 `protobuf:"varint,2,opt,name=ProductQuantity,proto3" json:"ProductQuantity,omitempty"`
}

func (x *ReleaseSkuStockLockData) Reset() {
	*x = ReleaseSkuStockLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseSkuStockLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSkuStockLockData) ProtoMessage() {}

func (x *ReleaseSkuStockLockData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSkuStockLockData.ProtoReflect.Descriptor instead.
func (*ReleaseSkuStockLockData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{54}
}

func (x *ReleaseSkuStockLockData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *ReleaseSkuStockLockData) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

type CancelOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponIds   []int64                    `protobuf:"varint,1,rep,packed,name=CouponIds,proto3" json:"CouponIds,omitempty"` //优惠券id集合
	Integration int32                      `protobuf:"varint,2,opt,name=Integration,proto3" json:"Integration,omitempty"`    //积分
	Data        []*ReleaseSkuStockLockData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`                   //释放库存
}

func (x *CancelOrderResp) Reset() {
	*x = CancelOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResp) ProtoMessage() {}

func (x *CancelOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResp.ProtoReflect.Descriptor instead.
func (*CancelOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{55}
}

func (x *CancelOrderResp) GetCouponIds() []int64 {
	if x != nil {
		return x.CouponIds
	}
	return nil
}

func (x *CancelOrderResp) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *CancelOrderResp) GetData() []*ReleaseSkuStockLockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConfirmOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	OrderId  int64 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *ConfirmOrderReq) Reset() {
	*x = ConfirmOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmOrderReq) ProtoMessage() {}

func (x *ConfirmOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmOrderReq.ProtoReflect.Descriptor instead.
func (*ConfirmOrderReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{56}
}

func (x *ConfirmOrderReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ConfirmOrderReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ConfirmOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ConfirmOrderResp) Reset() {
	*x = ConfirmOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmOrderResp) ProtoMessage() {}

func (x *ConfirmOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmOrderResp.ProtoReflect.Descriptor instead.
func (*ConfirmOrderResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{57}
}

func (x *ConfirmOrderResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QueryTimeOutOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minute int32 `protobuf:"varint,1,opt,name=minute,proto3" json:"minute,omitempty"` //超时的时间
}

func (x *QueryTimeOutOrderListReq) Reset() {
	*x = QueryTimeOutOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTimeOutOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTimeOutOrderListReq) ProtoMessage() {}

func (x *QueryTimeOutOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTimeOutOrderListReq.ProtoReflect.Descriptor instead.
func (*QueryTimeOutOrderListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{58}
}

func (x *QueryTimeOutOrderListReq) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

// 添加订单操作记录
type AddOrderOperationLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	OrderId       int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   //订单ID
	OrderNo       string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                    //订单编号
	OperationType int32  `protobuf:"varint,4,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"` //操作类型：1-创建订单，2-支付订单，3-发货，4-确认收货，5-取消订单，6-退款
	OperatorId    int64  `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`          //操作人ID
	OperatorType  int32  `protobuf:"varint,6,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`    //操作人类型：1-用户，2-系统，3-管理员
	OperatorNote  string `protobuf:"bytes,7,opt,name=operator_note,json=operatorNote,proto3" json:"operator_note,omitempty"`     //操作备注
}

func (x *AddOrderOperationLogReq) Reset() {
	*x = AddOrderOperationLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderOperationLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderOperationLogReq) ProtoMessage() {}

func (x *AddOrderOperationLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderOperationLogReq.ProtoReflect.Descriptor instead.
func (*AddOrderOperationLogReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{59}
}

func (x *AddOrderOperationLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderOperationLogReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddOrderOperationLogReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AddOrderOperationLogReq) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

func (x *AddOrderOperationLogReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddOrderOperationLogReq) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *AddOrderOperationLogReq) GetOperatorNote() string {
	if x != nil {
		return x.OperatorNote
	}
	return ""
}

type AddOrderOperationLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderOperationLogResp) Reset() {
	*x = AddOrderOperationLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderOperationLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderOperationLogResp) ProtoMessage() {}

func (x *AddOrderOperationLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderOperationLogResp.ProtoReflect.Descriptor instead.
func (*AddOrderOperationLogResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{60}
}

func (x *AddOrderOperationLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单操作记录详情
type QueryOrderOperationLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderOperationLogDetailReq) Reset() {
	*x = QueryOrderOperationLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderOperationLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderOperationLogDetailReq) ProtoMessage() {}

func (x *QueryOrderOperationLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderOperationLogDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderOperationLogDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{61}
}

func (x *QueryOrderOperationLogDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 分页查询订单操作记录列表
type QueryOrderOperationLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   //订单ID
	OrderNo       string `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                    //订单编号
	OperationType int32  `protobuf:"varint,3,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"` //操作类型：1-创建订单，2-支付订单，3-发货，4-确认收货，5-取消订单，6-退款
	OperatorId    int64  `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`          //操作人ID
	OperatorType  int32  `protobuf:"varint,5,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`    //操作人类型：1-用户，2-系统，3-管理员
	PageNum       int32  `protobuf:"varint,7,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                   //第几页
	PageSize      int32  `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                //每页的数量
}

func (x *QueryOrderOperationLogListReq) Reset() {
	*x = QueryOrderOperationLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderOperationLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderOperationLogListReq) ProtoMessage() {}

func (x *QueryOrderOperationLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderOperationLogListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderOperationLogListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{62}
}

func (x *QueryOrderOperationLogListReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderOperationLogListReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *QueryOrderOperationLogListReq) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

func (x *QueryOrderOperationLogListReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *QueryOrderOperationLogListReq) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *QueryOrderOperationLogListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderOperationLogListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderOperationLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            //主键ID
	OrderId       int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   //订单ID
	OrderNo       string `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                    //订单编号
	OperationType int32  `protobuf:"varint,4,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"` //操作类型：1-创建订单，2-支付订单，3-发货，4-确认收货，5-取消订单，6-退款
	OperatorId    int64  `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`          //操作人ID
	OperatorType  int32  `protobuf:"varint,6,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`    //操作人类型：1-用户，2-系统，3-管理员
	OperatorNote  string `protobuf:"bytes,7,opt,name=operator_note,json=operatorNote,proto3" json:"operator_note,omitempty"`     //操作备注
	CreateTime    string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //操作时间
}

func (x *OrderOperationLogData) Reset() {
	*x = OrderOperationLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOperationLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOperationLogData) ProtoMessage() {}

func (x *OrderOperationLogData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOperationLogData.ProtoReflect.Descriptor instead.
func (*OrderOperationLogData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{63}
}

func (x *OrderOperationLogData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderOperationLogData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderOperationLogData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderOperationLogData) GetOperationType() int32 {
	if x != nil {
		return x.OperationType
	}
	return 0
}

func (x *OrderOperationLogData) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *OrderOperationLogData) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *OrderOperationLogData) GetOperatorNote() string {
	if x != nil {
		return x.OperatorNote
	}
	return ""
}

func (x *OrderOperationLogData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type QueryOrderOperationLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderOperationLogData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderOperationLogListResp) Reset() {
	*x = QueryOrderOperationLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderOperationLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderOperationLogListResp) ProtoMessage() {}

func (x *QueryOrderOperationLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderOperationLogListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderOperationLogListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{64}
}

func (x *QueryOrderOperationLogListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderOperationLogListResp) GetList() []*OrderOperationLogData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加订单支付
type OrderPaymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	OrderId       int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                  //订单ID
	OrderNo       string  `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                   //订单编号
	PayType       int32   `protobuf:"varint,4,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                  //支付方式：1-支付宝，2-微信，3-银联
	TransactionId string  `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` //支付流水号
	TotalAmount   float32 `protobuf:"fixed32,6,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`     //订单金额
	PayAmount     float32 `protobuf:"fixed32,7,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`           //支付金额
	PayStatus     int32   `protobuf:"varint,8,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`            //支付状态：0-待支付，1-支付成功，2-支付失败
	PayTime       string  `protobuf:"bytes,9,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`                   //支付时间
	IsDeleted     int32   `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`           //是否删除
}

func (x *OrderPaymentReq) Reset() {
	*x = OrderPaymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPaymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPaymentReq) ProtoMessage() {}

func (x *OrderPaymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPaymentReq.ProtoReflect.Descriptor instead.
func (*OrderPaymentReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{65}
}

func (x *OrderPaymentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderPaymentReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderPaymentReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderPaymentReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderPaymentReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *OrderPaymentReq) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderPaymentReq) GetPayAmount() float32 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *OrderPaymentReq) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *OrderPaymentReq) GetPayTime() string {
	if x != nil {
		return x.PayTime
	}
	return ""
}

func (x *OrderPaymentReq) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type OrderPaymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OrderPaymentResp) Reset() {
	*x = OrderPaymentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPaymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPaymentResp) ProtoMessage() {}

func (x *OrderPaymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPaymentResp.ProtoReflect.Descriptor instead.
func (*OrderPaymentResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{66}
}

func (x *OrderPaymentResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单支付状态
type UpdateOrderPaymentStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                       //主键ID
	PayStatus int32   `protobuf:"varint,8,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"` //支付状态：0-待支付，1-支付成功，2-支付失败
}

func (x *UpdateOrderPaymentStatusReq) Reset() {
	*x = UpdateOrderPaymentStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderPaymentStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderPaymentStatusReq) ProtoMessage() {}

func (x *UpdateOrderPaymentStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderPaymentStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderPaymentStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateOrderPaymentStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateOrderPaymentStatusReq) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

// 查询订单支付详情
type QueryOrderPaymentDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderPaymentDetailReq) Reset() {
	*x = QueryOrderPaymentDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderPaymentDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderPaymentDetailReq) ProtoMessage() {}

func (x *QueryOrderPaymentDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderPaymentDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderPaymentDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{68}
}

func (x *QueryOrderPaymentDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 分页查询订单支付列表
type QueryOrderPaymentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                  //订单ID
	OrderNo       string `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                   //订单编号
	PayType       int32  `protobuf:"varint,3,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                  //支付方式：1-支付宝，2-微信，3-银联
	TransactionId string `protobuf:"bytes,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` //支付流水号
	PayStatus     int32  `protobuf:"varint,5,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`            //支付状态：0-待支付，1-支付成功，2-支付失败
	PageNum       int32  `protobuf:"varint,6,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`                  //第几页
	PageSize      int32  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`               //每页的数量
}

func (x *QueryOrderPaymentListReq) Reset() {
	*x = QueryOrderPaymentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderPaymentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderPaymentListReq) ProtoMessage() {}

func (x *QueryOrderPaymentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderPaymentListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderPaymentListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{69}
}

func (x *QueryOrderPaymentListReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderPaymentListReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *QueryOrderPaymentListReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *QueryOrderPaymentListReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *QueryOrderPaymentListReq) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *QueryOrderPaymentListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderPaymentListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderPaymentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	OrderId       int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                  //订单ID
	OrderNo       string  `protobuf:"bytes,3,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                   //订单编号
	PayType       int32   `protobuf:"varint,4,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`                  //支付方式：1-支付宝，2-微信，3-银联
	TransactionId string  `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` //支付流水号
	TotalAmount   float32 `protobuf:"fixed32,6,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`     //订单金额
	PayAmount     float32 `protobuf:"fixed32,7,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount,omitempty"`           //支付金额
	PayStatus     int32   `protobuf:"varint,8,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`            //支付状态：0-待支付，1-支付成功，2-支付失败
	PayTime       string  `protobuf:"bytes,9,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`                   //支付时间
	CreateTime    string  `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         //创建时间
	UpdateTime    string  `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`         //
	IsDeleted     int32   `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`           //是否删除
}

func (x *OrderPaymentData) Reset() {
	*x = OrderPaymentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPaymentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPaymentData) ProtoMessage() {}

func (x *OrderPaymentData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPaymentData.ProtoReflect.Descriptor instead.
func (*OrderPaymentData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{70}
}

func (x *OrderPaymentData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderPaymentData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderPaymentData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderPaymentData) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderPaymentData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *OrderPaymentData) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *OrderPaymentData) GetPayAmount() float32 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *OrderPaymentData) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *OrderPaymentData) GetPayTime() string {
	if x != nil {
		return x.PayTime
	}
	return ""
}

func (x *OrderPaymentData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderPaymentData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *OrderPaymentData) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type QueryOrderPaymentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderPaymentData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderPaymentListResp) Reset() {
	*x = QueryOrderPaymentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderPaymentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderPaymentListResp) ProtoMessage() {}

func (x *QueryOrderPaymentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderPaymentListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderPaymentListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{71}
}

func (x *QueryOrderPaymentListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderPaymentListResp) GetList() []*OrderPaymentData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加/更新-退货/售后
type OrderReturnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //主键ID
	OrderId         int64                  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //关联订单ID
	ReturnNo        string                 `protobuf:"bytes,3,opt,name=return_no,json=returnNo,proto3" json:"return_no,omitempty"`                         //退货单号
	MemberId        int64                  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                        //会员ID
	Status          int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                            //退货状态（0待审核 1审核通过 2已收货 3已退款 4已拒绝 5已关闭）
	Type            int32                  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                                //售后类型（0退货退款 1仅退款 2换货）
	Reason          string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`                                             //退货原因
	Description     string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`                                   //问题描述
	ProofPic        string                 `protobuf:"bytes,9,opt,name=proof_pic,json=proofPic,proto3" json:"proof_pic,omitempty"`                         //凭证图片，逗号分隔
	RefundAmount    float32                `protobuf:"fixed32,10,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`          //退款金额
	ReturnName      string                 `protobuf:"bytes,11,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`                  //退货人姓名
	ReturnPhone     string                 `protobuf:"bytes,12,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"`               //退货人电话
	CompanyAddress  string                 `protobuf:"bytes,13,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"`      //退货收货地址
	CreateTime      string                 `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                  //申请时间
	HandleTime      string                 `protobuf:"bytes,15,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`                  //处理时间
	HandleNote      string                 `protobuf:"bytes,16,opt,name=handle_note,json=handleNote,proto3" json:"handle_note,omitempty"`                  //处理备注
	HandleMan       string                 `protobuf:"bytes,17,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                     //处理人员
	ReceiveTime     string                 `protobuf:"bytes,18,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`               //收货时间
	ReceiveNote     string                 `protobuf:"bytes,19,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note,omitempty"`               //收货备注
	ReceiveMan      string                 `protobuf:"bytes,20,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man,omitempty"`                  //收货人
	RefundTime      string                 `protobuf:"bytes,21,opt,name=refund_time,json=refundTime,proto3" json:"refund_time,omitempty"`                  //退款时间
	CloseTime       string                 `protobuf:"bytes,22,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`                     //关闭时间
	Remark          string                 `protobuf:"bytes,23,opt,name=remark,proto3" json:"remark,omitempty"`                                            //备注
	OrderReturnItem []*OrderReturnItemData `protobuf:"bytes,24,rep,name=order_return_item,json=orderReturnItem,proto3" json:"order_return_item,omitempty"` //退货/售后明细
}

func (x *OrderReturnReq) Reset() {
	*x = OrderReturnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnReq) ProtoMessage() {}

func (x *OrderReturnReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnReq.ProtoReflect.Descriptor instead.
func (*OrderReturnReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{72}
}

func (x *OrderReturnReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderReturnReq) GetReturnNo() string {
	if x != nil {
		return x.ReturnNo
	}
	return ""
}

func (x *OrderReturnReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderReturnReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderReturnReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderReturnReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderReturnReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderReturnReq) GetProofPic() string {
	if x != nil {
		return x.ProofPic
	}
	return ""
}

func (x *OrderReturnReq) GetRefundAmount() float32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *OrderReturnReq) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *OrderReturnReq) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *OrderReturnReq) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *OrderReturnReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReturnReq) GetHandleTime() string {
	if x != nil {
		return x.HandleTime
	}
	return ""
}

func (x *OrderReturnReq) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

func (x *OrderReturnReq) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *OrderReturnReq) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderReturnReq) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

func (x *OrderReturnReq) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *OrderReturnReq) GetRefundTime() string {
	if x != nil {
		return x.RefundTime
	}
	return ""
}

func (x *OrderReturnReq) GetCloseTime() string {
	if x != nil {
		return x.CloseTime
	}
	return ""
}

func (x *OrderReturnReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OrderReturnReq) GetOrderReturnItem() []*OrderReturnItemData {
	if x != nil {
		return x.OrderReturnItem
	}
	return nil
}

type OrderReturnItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           //主键ID
	ReturnId     int64   `protobuf:"varint,2,opt,name=return_id,json=returnId,proto3" json:"return_id,omitempty"`               //退货单ID（关联oms_order_return.id）
	OrderId      int64   `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                  //订单ID
	OrderItemId  int64   `protobuf:"varint,4,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`    //订单明细ID
	SkuId        int64   `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                        //商品SKU ID
	SkuName      string  `protobuf:"bytes,6,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`                   //商品名称
	SkuPic       string  `protobuf:"bytes,7,opt,name=sku_pic,json=skuPic,proto3" json:"sku_pic,omitempty"`                      //商品图片
	SkuAttrs     string  `protobuf:"bytes,8,opt,name=sku_attrs,json=skuAttrs,proto3" json:"sku_attrs,omitempty"`                //商品销售属性
	Quantity     int32   `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`                               //退货数量
	ProductPrice float32 `protobuf:"fixed32,10,opt,name=product_price,json=productPrice,proto3" json:"product_price,omitempty"` //商品单价
	RealAmount   float32 `protobuf:"fixed32,11,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`       //实际退款金额
	Reason       string  `protobuf:"bytes,12,opt,name=reason,proto3" json:"reason,omitempty"`                                   //退货原因
	Remark       string  `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`                                   //备注
}

func (x *OrderReturnItemData) Reset() {
	*x = OrderReturnItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnItemData) ProtoMessage() {}

func (x *OrderReturnItemData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnItemData.ProtoReflect.Descriptor instead.
func (*OrderReturnItemData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{73}
}

func (x *OrderReturnItemData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnItemData) GetReturnId() int64 {
	if x != nil {
		return x.ReturnId
	}
	return 0
}

func (x *OrderReturnItemData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderReturnItemData) GetOrderItemId() int64 {
	if x != nil {
		return x.OrderItemId
	}
	return 0
}

func (x *OrderReturnItemData) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *OrderReturnItemData) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *OrderReturnItemData) GetSkuPic() string {
	if x != nil {
		return x.SkuPic
	}
	return ""
}

func (x *OrderReturnItemData) GetSkuAttrs() string {
	if x != nil {
		return x.SkuAttrs
	}
	return ""
}

func (x *OrderReturnItemData) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderReturnItemData) GetProductPrice() float32 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *OrderReturnItemData) GetRealAmount() float32 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

func (x *OrderReturnItemData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderReturnItemData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type OrderReturnResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OrderReturnResp) Reset() {
	*x = OrderReturnResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnResp) ProtoMessage() {}

func (x *OrderReturnResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnResp.ProtoReflect.Descriptor instead.
func (*OrderReturnResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{74}
}

func (x *OrderReturnResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除退货/售后
type DeleteOrderReturnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderReturnReq) Reset() {
	*x = DeleteOrderReturnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnReq) ProtoMessage() {}

func (x *DeleteOrderReturnReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{75}
}

func (x *DeleteOrderReturnReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 更新退货/售后状态
type UpdateOrderReturnStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              //键ID
	RefundAmount   float32 `protobuf:"fixed32,2,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`     //退款金额
	ReceiveMan     string  `protobuf:"bytes,3,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man,omitempty"`             //收货人
	HandleMan      string  `protobuf:"bytes,4,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                //处理人员
	Status         int32   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                      //退货状态（0待审核 1审核通过 2已收货 3已退款 4已拒绝 5已关闭）
	CompanyAddress string  `protobuf:"bytes,6,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"` //退货收货地址
	ReceiveNote    string  `protobuf:"bytes,7,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note,omitempty"`          //收货备注
	HandleNote     string  `protobuf:"bytes,8,opt,name=handle_note,json=handleNote,proto3" json:"handle_note,omitempty"`             //处理备注
}

func (x *UpdateOrderReturnStatusReq) Reset() {
	*x = UpdateOrderReturnStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnStatusReq) ProtoMessage() {}

func (x *UpdateOrderReturnStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateOrderReturnStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReturnStatusReq) GetRefundAmount() float32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *UpdateOrderReturnStatusReq) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *UpdateOrderReturnStatusReq) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *UpdateOrderReturnStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateOrderReturnStatusReq) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *UpdateOrderReturnStatusReq) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

func (x *UpdateOrderReturnStatusReq) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

// 查询退货/售后详情
type QueryOrderReturnDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderReturnDetailReq) Reset() {
	*x = QueryOrderReturnDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnDetailReq) ProtoMessage() {}

func (x *QueryOrderReturnDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{77}
}

func (x *QueryOrderReturnDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 分页查询退货/售后列表
type QueryOrderReturnListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`            //关联订单ID
	ReturnNo    string `protobuf:"bytes,2,opt,name=return_no,json=returnNo,proto3" json:"return_no,omitempty"`          //退货单号
	MemberId    int64  `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`         //会员ID
	Status      int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                             //退货状态（0待审核 1审核通过 2已收货 3已退款 4已拒绝 5已关闭）
	Type        int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                                 //售后类型（0退货退款 1仅退款 2换货）
	ReturnName  string `protobuf:"bytes,6,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`    //退货人姓名
	ReturnPhone string `protobuf:"bytes,7,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"` //退货人电话
	PageNum     int32  `protobuf:"varint,8,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`            //第几页
	PageSize    int32  `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`         //每页的数量
}

func (x *QueryOrderReturnListReq) Reset() {
	*x = QueryOrderReturnListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnListReq) ProtoMessage() {}

func (x *QueryOrderReturnListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{78}
}

func (x *QueryOrderReturnListReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *QueryOrderReturnListReq) GetReturnNo() string {
	if x != nil {
		return x.ReturnNo
	}
	return ""
}

func (x *QueryOrderReturnListReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QueryOrderReturnListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderReturnListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryOrderReturnListReq) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *QueryOrderReturnListReq) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *QueryOrderReturnListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderReturnListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderReturnData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    //主键ID
	OrderId         int64                  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                           //关联订单ID
	ReturnNo        string                 `protobuf:"bytes,3,opt,name=return_no,json=returnNo,proto3" json:"return_no,omitempty"`                         //退货单号
	MemberId        int64                  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                        //会员ID
	Status          int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                            //退货状态（0待审核 1审核通过 2已收货 3已退款 4已拒绝 5已关闭）
	Type            int32                  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                                //售后类型（0退货退款 1仅退款 2换货）
	Reason          string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`                                             //退货原因
	Description     string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`                                   //问题描述
	ProofPic        string                 `protobuf:"bytes,9,opt,name=proof_pic,json=proofPic,proto3" json:"proof_pic,omitempty"`                         //凭证图片，逗号分隔
	RefundAmount    float32                `protobuf:"fixed32,10,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`          //退款金额
	ReturnName      string                 `protobuf:"bytes,11,opt,name=return_name,json=returnName,proto3" json:"return_name,omitempty"`                  //退货人姓名
	ReturnPhone     string                 `protobuf:"bytes,12,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone,omitempty"`               //退货人电话
	CompanyAddress  string                 `protobuf:"bytes,13,opt,name=company_address,json=companyAddress,proto3" json:"company_address,omitempty"`      //退货收货地址
	CreateTime      string                 `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                  //申请时间
	HandleTime      string                 `protobuf:"bytes,15,opt,name=handle_time,json=handleTime,proto3" json:"handle_time,omitempty"`                  //处理时间
	HandleNote      string                 `protobuf:"bytes,16,opt,name=handle_note,json=handleNote,proto3" json:"handle_note,omitempty"`                  //处理备注
	HandleMan       string                 `protobuf:"bytes,17,opt,name=handle_man,json=handleMan,proto3" json:"handle_man,omitempty"`                     //处理人员
	ReceiveTime     string                 `protobuf:"bytes,18,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`               //收货时间
	ReceiveNote     string                 `protobuf:"bytes,19,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note,omitempty"`               //收货备注
	ReceiveMan      string                 `protobuf:"bytes,20,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man,omitempty"`                  //收货人
	RefundTime      string                 `protobuf:"bytes,21,opt,name=refund_time,json=refundTime,proto3" json:"refund_time,omitempty"`                  //退款时间
	CloseTime       string                 `protobuf:"bytes,22,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`                     //关闭时间
	Remark          string                 `protobuf:"bytes,23,opt,name=remark,proto3" json:"remark,omitempty"`                                            //备注
	OrderReturnItem []*OrderReturnItemData `protobuf:"bytes,24,rep,name=order_return_item,json=orderReturnItem,proto3" json:"order_return_item,omitempty"` //退货/售后明细
}

func (x *OrderReturnData) Reset() {
	*x = OrderReturnData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnData) ProtoMessage() {}

func (x *OrderReturnData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnData.ProtoReflect.Descriptor instead.
func (*OrderReturnData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{79}
}

func (x *OrderReturnData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderReturnData) GetReturnNo() string {
	if x != nil {
		return x.ReturnNo
	}
	return ""
}

func (x *OrderReturnData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderReturnData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderReturnData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderReturnData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderReturnData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderReturnData) GetProofPic() string {
	if x != nil {
		return x.ProofPic
	}
	return ""
}

func (x *OrderReturnData) GetRefundAmount() float32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *OrderReturnData) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *OrderReturnData) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *OrderReturnData) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *OrderReturnData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReturnData) GetHandleTime() string {
	if x != nil {
		return x.HandleTime
	}
	return ""
}

func (x *OrderReturnData) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

func (x *OrderReturnData) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *OrderReturnData) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderReturnData) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

func (x *OrderReturnData) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *OrderReturnData) GetRefundTime() string {
	if x != nil {
		return x.RefundTime
	}
	return ""
}

func (x *OrderReturnData) GetCloseTime() string {
	if x != nil {
		return x.CloseTime
	}
	return ""
}

func (x *OrderReturnData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OrderReturnData) GetOrderReturnItem() []*OrderReturnItemData {
	if x != nil {
		return x.OrderReturnItem
	}
	return nil
}

type QueryOrderReturnListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderReturnData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderReturnListResp) Reset() {
	*x = QueryOrderReturnListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnListResp) ProtoMessage() {}

func (x *QueryOrderReturnListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{80}
}

func (x *QueryOrderReturnListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderReturnListResp) GetList() []*OrderReturnData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加退货原因
type AddOrderReturnReasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //主键ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          //退货类型
	Sort     int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`                         //排序
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->不启用；1->启用
	CreateBy int64  `protobuf:"varint,5,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"` //创建人ID
}

func (x *AddOrderReturnReasonReq) Reset() {
	*x = AddOrderReturnReasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReturnReasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReturnReasonReq) ProtoMessage() {}

func (x *AddOrderReturnReasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReturnReasonReq.ProtoReflect.Descriptor instead.
func (*AddOrderReturnReasonReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{81}
}

func (x *AddOrderReturnReasonReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderReturnReasonReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddOrderReturnReasonReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddOrderReturnReasonReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddOrderReturnReasonReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type AddOrderReturnReasonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderReturnReasonResp) Reset() {
	*x = AddOrderReturnReasonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReturnReasonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReturnReasonResp) ProtoMessage() {}

func (x *AddOrderReturnReasonResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReturnReasonResp.ProtoReflect.Descriptor instead.
func (*AddOrderReturnReasonResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{82}
}

func (x *AddOrderReturnReasonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除退货原因
type DeleteOrderReturnReasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderReturnReasonReq) Reset() {
	*x = DeleteOrderReturnReasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnReasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnReasonReq) ProtoMessage() {}

func (x *DeleteOrderReturnReasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnReasonReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnReasonReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{83}
}

func (x *DeleteOrderReturnReasonReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderReturnReasonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderReturnReasonResp) Reset() {
	*x = DeleteOrderReturnReasonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReturnReasonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReturnReasonResp) ProtoMessage() {}

func (x *DeleteOrderReturnReasonResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReturnReasonResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderReturnReasonResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{84}
}

func (x *DeleteOrderReturnReasonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新退货原因
type UpdateOrderReturnReasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //主键ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          //退货类型
	Sort     int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`                         //排序
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->不启用；1->启用
	UpdateBy int64  `protobuf:"varint,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新人ID
}

func (x *UpdateOrderReturnReasonReq) Reset() {
	*x = UpdateOrderReturnReasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonReq) ProtoMessage() {}

func (x *UpdateOrderReturnReasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{85}
}

func (x *UpdateOrderReturnReasonReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReturnReasonReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOrderReturnReasonReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateOrderReturnReasonReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateOrderReturnReasonReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateOrderReturnReasonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderReturnReasonResp) Reset() {
	*x = UpdateOrderReturnReasonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonResp) ProtoMessage() {}

func (x *UpdateOrderReturnReasonResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{86}
}

func (x *UpdateOrderReturnReasonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新退货原因状态
type UpdateOrderReturnReasonStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`                    //主键ID
	Status   int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->不启用；1->启用
	UpdateBy int64   `protobuf:"varint,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新人ID
}

func (x *UpdateOrderReturnReasonStatusReq) Reset() {
	*x = UpdateOrderReturnReasonStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonStatusReq) ProtoMessage() {}

func (x *UpdateOrderReturnReasonStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateOrderReturnReasonStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateOrderReturnReasonStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateOrderReturnReasonStatusReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateOrderReturnReasonStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderReturnReasonStatusResp) Reset() {
	*x = UpdateOrderReturnReasonStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReturnReasonStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReturnReasonStatusResp) ProtoMessage() {}

func (x *UpdateOrderReturnReasonStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReturnReasonStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderReturnReasonStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateOrderReturnReasonStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询退货原因详情
type QueryOrderReturnReasonDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderReturnReasonDetailReq) Reset() {
	*x = QueryOrderReturnReasonDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonDetailReq) ProtoMessage() {}

func (x *QueryOrderReturnReasonDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{89}
}

func (x *QueryOrderReturnReasonDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderReturnReasonDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //主键ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                               //退货类型
	Sort       int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`                              //排序
	Status     int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                          //状态：0->不启用；1->启用
	CreateBy   int64  `protobuf:"varint,5,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`      //创建人ID
	CreateTime string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
	UpdateBy   int64  `protobuf:"varint,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`      //更新人ID
	UpdateTime string `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *QueryOrderReturnReasonDetailResp) Reset() {
	*x = QueryOrderReturnReasonDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonDetailResp) ProtoMessage() {}

func (x *QueryOrderReturnReasonDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{90}
}

func (x *QueryOrderReturnReasonDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryOrderReturnReasonDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryOrderReturnReasonDetailResp) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QueryOrderReturnReasonDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询退货原因列表
type QueryOrderReturnReasonListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                          //退货类型
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                     //状态：0->不启用；1->启用
	PageNum  int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //第几页
	PageSize int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页的数量
}

func (x *QueryOrderReturnReasonListReq) Reset() {
	*x = QueryOrderReturnReasonListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonListReq) ProtoMessage() {}

func (x *QueryOrderReturnReasonListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{91}
}

func (x *QueryOrderReturnReasonListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryOrderReturnReasonListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderReturnReasonListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderReturnReasonListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderReturnReasonListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  //主键ID
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                               //退货类型
	Sort       int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`                              //排序
	Status     int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                          //状态：0->不启用；1->启用
	CreateBy   int64  `protobuf:"varint,5,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`      //创建人ID
	CreateTime string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` //创建时间
	UpdateBy   int64  `protobuf:"varint,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`      //更新人ID
	UpdateTime string `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` //更新时间
}

func (x *OrderReturnReasonListData) Reset() {
	*x = OrderReturnReasonListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnReasonListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnReasonListData) ProtoMessage() {}

func (x *OrderReturnReasonListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnReasonListData.ProtoReflect.Descriptor instead.
func (*OrderReturnReasonListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{92}
}

func (x *OrderReturnReasonListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnReasonListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderReturnReasonListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *OrderReturnReasonListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderReturnReasonListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *OrderReturnReasonListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReturnReasonListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *OrderReturnReasonListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryOrderReturnReasonListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderReturnReasonListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderReturnReasonListResp) Reset() {
	*x = QueryOrderReturnReasonListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderReturnReasonListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderReturnReasonListResp) ProtoMessage() {}

func (x *QueryOrderReturnReasonListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderReturnReasonListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderReturnReasonListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{93}
}

func (x *QueryOrderReturnReasonListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderReturnReasonListResp) GetList() []*OrderReturnReasonListData {
	if x != nil {
		return x.List
	}
	return nil
}

// 添加订单设置
type AddOrderSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                //主键ID
	FlashOrderOvertime  int32 `protobuf:"varint,2,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	NormalOrderOvertime int32 `protobuf:"varint,3,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
	ConfirmOvertime     int32 `protobuf:"varint,4,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32 `protobuf:"varint,5,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	Status              int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
	IsDefault           int32 `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	CommentOvertime     int32 `protobuf:"varint,8,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	CreateBy            int64 `protobuf:"varint,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                                    //创建人ID
}

func (x *AddOrderSettingReq) Reset() {
	*x = AddOrderSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderSettingReq) ProtoMessage() {}

func (x *AddOrderSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderSettingReq.ProtoReflect.Descriptor instead.
func (*AddOrderSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{94}
}

func (x *AddOrderSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderSettingReq) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddOrderSettingReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *AddOrderSettingReq) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *AddOrderSettingReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type AddOrderSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddOrderSettingResp) Reset() {
	*x = AddOrderSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderSettingResp) ProtoMessage() {}

func (x *AddOrderSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderSettingResp.ProtoReflect.Descriptor instead.
func (*AddOrderSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{95}
}

func (x *AddOrderSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 删除订单设置
type DeleteOrderSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteOrderSettingReq) Reset() {
	*x = DeleteOrderSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderSettingReq) ProtoMessage() {}

func (x *DeleteOrderSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderSettingReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{96}
}

func (x *DeleteOrderSettingReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOrderSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *DeleteOrderSettingResp) Reset() {
	*x = DeleteOrderSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderSettingResp) ProtoMessage() {}

func (x *DeleteOrderSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderSettingResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{97}
}

func (x *DeleteOrderSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单设置
type UpdateOrderSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                //主键ID
	FlashOrderOvertime  int32 `protobuf:"varint,2,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	NormalOrderOvertime int32 `protobuf:"varint,3,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
	ConfirmOvertime     int32 `protobuf:"varint,4,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32 `protobuf:"varint,5,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	Status              int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
	IsDefault           int32 `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	CommentOvertime     int32 `protobuf:"varint,8,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	UpdateBy            int64 `protobuf:"varint,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                                   //更新人ID
}

func (x *UpdateOrderSettingReq) Reset() {
	*x = UpdateOrderSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingReq) ProtoMessage() {}

func (x *UpdateOrderSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{98}
}

func (x *UpdateOrderSettingReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *UpdateOrderSettingReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateOrderSettingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderSettingResp) Reset() {
	*x = UpdateOrderSettingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingResp) ProtoMessage() {}

func (x *UpdateOrderSettingResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{99}
}

func (x *UpdateOrderSettingResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 更新订单设置状态
type UpdateOrderSettingStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //主键ID
	Status   int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                     //状态
	UpdateBy int64 `protobuf:"varint,3,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"` //更新人ID
}

func (x *UpdateOrderSettingStatusReq) Reset() {
	*x = UpdateOrderSettingStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingStatusReq) ProtoMessage() {}

func (x *UpdateOrderSettingStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{100}
}

func (x *UpdateOrderSettingStatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderSettingStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateOrderSettingStatusReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UpdateOrderSettingStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateOrderSettingStatusResp) Reset() {
	*x = UpdateOrderSettingStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderSettingStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderSettingStatusResp) ProtoMessage() {}

func (x *UpdateOrderSettingStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderSettingStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderSettingStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{101}
}

func (x *UpdateOrderSettingStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 查询订单设置详情
type QueryOrderSettingDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryOrderSettingDetailReq) Reset() {
	*x = QueryOrderSettingDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingDetailReq) ProtoMessage() {}

func (x *QueryOrderSettingDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingDetailReq.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingDetailReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{102}
}

func (x *QueryOrderSettingDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryOrderSettingDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                //主键ID
	FlashOrderOvertime  int32  `protobuf:"varint,2,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	NormalOrderOvertime int32  `protobuf:"varint,3,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
	ConfirmOvertime     int32  `protobuf:"varint,4,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32  `protobuf:"varint,5,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	Status              int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
	IsDefault           int32  `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	CommentOvertime     int32  `protobuf:"varint,8,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	CreateBy            int64  `protobuf:"varint,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                                    //创建人ID
	CreateTime          string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                              //创建时间
	UpdateBy            int64  `protobuf:"varint,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                                   //更新人ID
	UpdateTime          string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                              //更新时间
}

func (x *QueryOrderSettingDetailResp) Reset() {
	*x = QueryOrderSettingDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingDetailResp) ProtoMessage() {}

func (x *QueryOrderSettingDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingDetailResp.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingDetailResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{103}
}

func (x *QueryOrderSettingDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryOrderSettingDetailResp) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QueryOrderSettingDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询订单设置列表
type QueryOrderSettingListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                        //状态：0->禁用；1->启用
	IsDefault int32 `protobuf:"varint,2,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` //是否默认：0->否；1->是
	PageNum   int32 `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`       //第几页
	PageSize  int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    //每页的数量
}

func (x *QueryOrderSettingListReq) Reset() {
	*x = QueryOrderSettingListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingListReq) ProtoMessage() {}

func (x *QueryOrderSettingListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingListReq.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingListReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{104}
}

func (x *QueryOrderSettingListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderSettingListReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *QueryOrderSettingListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryOrderSettingListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderSettingListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                //主键ID
	FlashOrderOvertime  int32  `protobuf:"varint,2,opt,name=flash_order_overtime,json=flashOrderOvertime,proto3" json:"flash_order_overtime,omitempty"`    //秒杀订单超时关闭时间(分)
	NormalOrderOvertime int32  `protobuf:"varint,3,opt,name=normal_order_overtime,json=normalOrderOvertime,proto3" json:"normal_order_overtime,omitempty"` //正常订单超时时间(分)
	ConfirmOvertime     int32  `protobuf:"varint,4,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`               //发货后自动确认收货时间（天）
	FinishOvertime      int32  `protobuf:"varint,5,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`                  //自动完成交易时间，不能申请售后（天）
	Status              int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                                        //状态：0->禁用；1->启用
	IsDefault           int32  `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`                                 //是否默认：0->否；1->是
	CommentOvertime     int32  `protobuf:"varint,8,opt,name=comment_overtime,json=commentOvertime,proto3" json:"comment_overtime,omitempty"`               //订单完成后自动好评时间（天）
	CreateBy            int64  `protobuf:"varint,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`                                    //创建人ID
	CreateTime          string `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                              //创建时间
	UpdateBy            int64  `protobuf:"varint,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`                                   //更新人ID
	UpdateTime          string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                              //更新时间
}

func (x *OrderSettingListData) Reset() {
	*x = OrderSettingListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSettingListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSettingListData) ProtoMessage() {}

func (x *OrderSettingListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSettingListData.ProtoReflect.Descriptor instead.
func (*OrderSettingListData) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{105}
}

func (x *OrderSettingListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderSettingListData) GetFlashOrderOvertime() int32 {
	if x != nil {
		return x.FlashOrderOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetNormalOrderOvertime() int32 {
	if x != nil {
		return x.NormalOrderOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderSettingListData) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *OrderSettingListData) GetCommentOvertime() int32 {
	if x != nil {
		return x.CommentOvertime
	}
	return 0
}

func (x *OrderSettingListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *OrderSettingListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderSettingListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *OrderSettingListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type QueryOrderSettingListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OrderSettingListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryOrderSettingListResp) Reset() {
	*x = QueryOrderSettingListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderSettingListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderSettingListResp) ProtoMessage() {}

func (x *QueryOrderSettingListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderSettingListResp.ProtoReflect.Descriptor instead.
func (*QueryOrderSettingListResp) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{106}
}

func (x *QueryOrderSettingListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryOrderSettingListResp) GetList() []*OrderSettingListData {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryDefaultSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryDefaultSettingReq) Reset() {
	*x = QueryDefaultSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_oms_oms_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDefaultSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDefaultSettingReq) ProtoMessage() {}

func (x *QueryDefaultSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_oms_oms_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDefaultSettingReq.ProtoReflect.Descriptor instead.
func (*QueryDefaultSettingReq) Descriptor() ([]byte, []int) {
	return file_rpc_oms_oms_proto_rawDescGZIP(), []int{107}
}

var File_rpc_oms_oms_proto protoreflect.FileDescriptor

var file_rpc_oms_oms_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x6d, 0x73, 0x2f, 0x6f, 0x6d, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xb2,
	0x04, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc5, 0x04, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69,
	0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xc8, 0x05, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70,
	0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x50, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x33,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc7, 0x02, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x2b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2e, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xca, 0x02,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2e, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x64, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x22, 0x34, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x6a, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9d, 0x03, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x22, 0x2a, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0xa0, 0x03, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4e, 0x6f, 0x22, 0x2d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xe8, 0x03, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcc,
	0x02, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x80, 0x04,
	0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x68, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x04, 0x0a, 0x0d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x50, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x6b,
	0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x75, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b,
	0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6b, 0x75, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x73, 0x6b, 0x75, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x95, 0x04, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xcf,
	0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x22, 0x25, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x72, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x3e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x90,
	0x02, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x8a, 0x02, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x91,
	0x07, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0c, 0x6f, 0x70, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x4c,
	0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x70, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x58, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x6f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0x24, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2c, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x46, 0x0a, 0x0e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x26, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x18, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x22, 0xf1, 0x01,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74,
	0x65, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x31, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x90, 0x02, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xb4, 0x02, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x4e, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xe9, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xf7, 0x02, 0x0a, 0x10,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x62, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x06, 0x0a, 0x0e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x4a, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x18, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0xfb, 0x02, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75,
	0x5f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x50,
	0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x25, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x17, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x98, 0x06, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x69, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x4a, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x60, 0x0a, 0x18,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x86,
	0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x31, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x69, 0x0a, 0x20, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x22, 0x37, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x31, 0x0a,
	0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xee, 0x01, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x19, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x70, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x29,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xe0, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x62, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x32, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x2c, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5,
	0x03, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xbe, 0x03, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x15, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x32, 0xf6, 0x03, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x8a,
	0x06, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x7a, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x85, 0x04, 0x0a, 0x14,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x32, 0xcb, 0x06, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1e, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x16, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x32, 0xe2, 0x02, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x28, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x8d, 0x03, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xa2, 0x04, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1f, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x19, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xc3, 0x05, 0x0a, 0x18,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x22, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x79, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2a, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x6f, 0x6d, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x32, 0xbe, 0x06, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x6f,
	0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x20, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x25, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x6f, 0x6d,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x6d, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6f, 0x6d, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_oms_oms_proto_rawDescOnce sync.Once
	file_rpc_oms_oms_proto_rawDescData = file_rpc_oms_oms_proto_rawDesc
)

func file_rpc_oms_oms_proto_rawDescGZIP() []byte {
	file_rpc_oms_oms_proto_rawDescOnce.Do(func() {
		file_rpc_oms_oms_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_oms_oms_proto_rawDescData)
	})
	return file_rpc_oms_oms_proto_rawDescData
}

var file_rpc_oms_oms_proto_msgTypes = make([]protoimpl.MessageInfo, 108)
var file_rpc_oms_oms_proto_goTypes = []interface{}{
	(*AddCartItemReq)(nil),                    // 0: omsclient.AddCartItemReq
	(*CartItemResp)(nil),                      // 1: omsclient.CartItemResp
	(*DeleteCartItemReq)(nil),                 // 2: omsclient.DeleteCartItemReq
	(*UpdateCartItemReq)(nil),                 // 3: omsclient.UpdateCartItemReq
	(*UpdateCartItemQuantityReq)(nil),         // 4: omsclient.UpdateCartItemQuantityReq
	(*QueryCartItemDetailReq)(nil),            // 5: omsclient.QueryCartItemDetailReq
	(*CartItemData)(nil),                      // 6: omsclient.CartItemData
	(*QueryCartItemListReq)(nil),              // 7: omsclient.QueryCartItemListReq
	(*QueryCartItemListResp)(nil),             // 8: omsclient.QueryCartItemListResp
	(*AddCompanyAddressReq)(nil),              // 9: omsclient.AddCompanyAddressReq
	(*AddCompanyAddressResp)(nil),             // 10: omsclient.AddCompanyAddressResp
	(*DeleteCompanyAddressReq)(nil),           // 11: omsclient.DeleteCompanyAddressReq
	(*DeleteCompanyAddressResp)(nil),          // 12: omsclient.DeleteCompanyAddressResp
	(*UpdateCompanyAddressReq)(nil),           // 13: omsclient.UpdateCompanyAddressReq
	(*UpdateCompanyAddressResp)(nil),          // 14: omsclient.UpdateCompanyAddressResp
	(*UpdateCompanyAddressStatusReq)(nil),     // 15: omsclient.UpdateCompanyAddressStatusReq
	(*UpdateCompanyAddressStatusResp)(nil),    // 16: omsclient.UpdateCompanyAddressStatusResp
	(*QueryCompanyAddressDetailReq)(nil),      // 17: omsclient.QueryCompanyAddressDetailReq
	(*QueryCompanyAddressDetailResp)(nil),     // 18: omsclient.QueryCompanyAddressDetailResp
	(*QueryCompanyAddressListReq)(nil),        // 19: omsclient.QueryCompanyAddressListReq
	(*CompanyAddressListData)(nil),            // 20: omsclient.CompanyAddressListData
	(*QueryCompanyAddressListResp)(nil),       // 21: omsclient.QueryCompanyAddressListResp
	(*AddOrderDeliveryReq)(nil),               // 22: omsclient.AddOrderDeliveryReq
	(*AddOrderDeliveryResp)(nil),              // 23: omsclient.AddOrderDeliveryResp
	(*DeleteOrderDeliveryReq)(nil),            // 24: omsclient.DeleteOrderDeliveryReq
	(*DeleteOrderDeliveryResp)(nil),           // 25: omsclient.DeleteOrderDeliveryResp
	(*UpdateOrderDeliveryReq)(nil),            // 26: omsclient.UpdateOrderDeliveryReq
	(*UpdateOrderDeliveryResp)(nil),           // 27: omsclient.UpdateOrderDeliveryResp
	(*QueryOrderDeliveryDetailReq)(nil),       // 28: omsclient.QueryOrderDeliveryDetailReq
	(*QueryOrderDeliveryDetailResp)(nil),      // 29: omsclient.QueryOrderDeliveryDetailResp
	(*QueryOrderDeliveryListReq)(nil),         // 30: omsclient.QueryOrderDeliveryListReq
	(*OrderDeliveryListData)(nil),             // 31: omsclient.OrderDeliveryListData
	(*QueryOrderDeliveryListResp)(nil),        // 32: omsclient.QueryOrderDeliveryListResp
	(*OrderItemData)(nil),                     // 33: omsclient.OrderItemData
	(*AddOrderReq)(nil),                       // 34: omsclient.AddOrderReq
	(*AddOrderResp)(nil),                      // 35: omsclient.AddOrderResp
	(*DeleteOrderReq)(nil),                    // 36: omsclient.DeleteOrderReq
	(*DeleteOrderResp)(nil),                   // 37: omsclient.DeleteOrderResp
	(*UpdateOrderReq)(nil),                    // 38: omsclient.UpdateOrderReq
	(*UpdateOrderResp)(nil),                   // 39: omsclient.UpdateOrderResp
	(*UpdateOrderStatusReq)(nil),              // 40: omsclient.UpdateOrderStatusReq
	(*UpdateOrderStatusResp)(nil),             // 41: omsclient.UpdateOrderStatusResp
	(*QueryOrderDetailReq)(nil),               // 42: omsclient.QueryOrderDetailReq
	(*QueryOrderDetailResp)(nil),              // 43: omsclient.QueryOrderDetailResp
	(*QueryOrderListReq)(nil),                 // 44: omsclient.QueryOrderListReq
	(*OrderOptLogData)(nil),                   // 45: omsclient.OrderOptLogData
	(*OrderListData)(nil),                     // 46: omsclient.OrderListData
	(*QueryOrderListResp)(nil),                // 47: omsclient.QueryOrderListResp
	(*DeliveryReq)(nil),                       // 48: omsclient.DeliveryReq
	(*DeliveryResp)(nil),                      // 49: omsclient.DeliveryResp
	(*CloseOrderReq)(nil),                     // 50: omsclient.CloseOrderReq
	(*CloseOrderResp)(nil),                    // 51: omsclient.CloseOrderResp
	(*UpdateReceiverInfoResp)(nil),            // 52: omsclient.UpdateReceiverInfoResp
	(*CancelOrderReq)(nil),                    // 53: omsclient.CancelOrderReq
	(*ReleaseSkuStockLockData)(nil),           // 54: omsclient.ReleaseSkuStockLockData
	(*CancelOrderResp)(nil),                   // 55: omsclient.CancelOrderResp
	(*ConfirmOrderReq)(nil),                   // 56: omsclient.ConfirmOrderReq
	(*ConfirmOrderResp)(nil),                  // 57: omsclient.ConfirmOrderResp
	(*QueryTimeOutOrderListReq)(nil),          // 58: omsclient.QueryTimeOutOrderListReq
	(*AddOrderOperationLogReq)(nil),           // 59: omsclient.AddOrderOperationLogReq
	(*AddOrderOperationLogResp)(nil),          // 60: omsclient.AddOrderOperationLogResp
	(*QueryOrderOperationLogDetailReq)(nil),   // 61: omsclient.QueryOrderOperationLogDetailReq
	(*QueryOrderOperationLogListReq)(nil),     // 62: omsclient.QueryOrderOperationLogListReq
	(*OrderOperationLogData)(nil),             // 63: omsclient.OrderOperationLogData
	(*QueryOrderOperationLogListResp)(nil),    // 64: omsclient.QueryOrderOperationLogListResp
	(*OrderPaymentReq)(nil),                   // 65: omsclient.OrderPaymentReq
	(*OrderPaymentResp)(nil),                  // 66: omsclient.OrderPaymentResp
	(*UpdateOrderPaymentStatusReq)(nil),       // 67: omsclient.UpdateOrderPaymentStatusReq
	(*QueryOrderPaymentDetailReq)(nil),        // 68: omsclient.QueryOrderPaymentDetailReq
	(*QueryOrderPaymentListReq)(nil),          // 69: omsclient.QueryOrderPaymentListReq
	(*OrderPaymentData)(nil),                  // 70: omsclient.OrderPaymentData
	(*QueryOrderPaymentListResp)(nil),         // 71: omsclient.QueryOrderPaymentListResp
	(*OrderReturnReq)(nil),                    // 72: omsclient.OrderReturnReq
	(*OrderReturnItemData)(nil),               // 73: omsclient.OrderReturnItemData
	(*OrderReturnResp)(nil),                   // 74: omsclient.OrderReturnResp
	(*DeleteOrderReturnReq)(nil),              // 75: omsclient.DeleteOrderReturnReq
	(*UpdateOrderReturnStatusReq)(nil),        // 76: omsclient.UpdateOrderReturnStatusReq
	(*QueryOrderReturnDetailReq)(nil),         // 77: omsclient.QueryOrderReturnDetailReq
	(*QueryOrderReturnListReq)(nil),           // 78: omsclient.QueryOrderReturnListReq
	(*OrderReturnData)(nil),                   // 79: omsclient.OrderReturnData
	(*QueryOrderReturnListResp)(nil),          // 80: omsclient.QueryOrderReturnListResp
	(*AddOrderReturnReasonReq)(nil),           // 81: omsclient.AddOrderReturnReasonReq
	(*AddOrderReturnReasonResp)(nil),          // 82: omsclient.AddOrderReturnReasonResp
	(*DeleteOrderReturnReasonReq)(nil),        // 83: omsclient.DeleteOrderReturnReasonReq
	(*DeleteOrderReturnReasonResp)(nil),       // 84: omsclient.DeleteOrderReturnReasonResp
	(*UpdateOrderReturnReasonReq)(nil),        // 85: omsclient.UpdateOrderReturnReasonReq
	(*UpdateOrderReturnReasonResp)(nil),       // 86: omsclient.UpdateOrderReturnReasonResp
	(*UpdateOrderReturnReasonStatusReq)(nil),  // 87: omsclient.UpdateOrderReturnReasonStatusReq
	(*UpdateOrderReturnReasonStatusResp)(nil), // 88: omsclient.UpdateOrderReturnReasonStatusResp
	(*QueryOrderReturnReasonDetailReq)(nil),   // 89: omsclient.QueryOrderReturnReasonDetailReq
	(*QueryOrderReturnReasonDetailResp)(nil),  // 90: omsclient.QueryOrderReturnReasonDetailResp
	(*QueryOrderReturnReasonListReq)(nil),     // 91: omsclient.QueryOrderReturnReasonListReq
	(*OrderReturnReasonListData)(nil),         // 92: omsclient.OrderReturnReasonListData
	(*QueryOrderReturnReasonListResp)(nil),    // 93: omsclient.QueryOrderReturnReasonListResp
	(*AddOrderSettingReq)(nil),                // 94: omsclient.AddOrderSettingReq
	(*AddOrderSettingResp)(nil),               // 95: omsclient.AddOrderSettingResp
	(*DeleteOrderSettingReq)(nil),             // 96: omsclient.DeleteOrderSettingReq
	(*DeleteOrderSettingResp)(nil),            // 97: omsclient.DeleteOrderSettingResp
	(*UpdateOrderSettingReq)(nil),             // 98: omsclient.UpdateOrderSettingReq
	(*UpdateOrderSettingResp)(nil),            // 99: omsclient.UpdateOrderSettingResp
	(*UpdateOrderSettingStatusReq)(nil),       // 100: omsclient.UpdateOrderSettingStatusReq
	(*UpdateOrderSettingStatusResp)(nil),      // 101: omsclient.UpdateOrderSettingStatusResp
	(*QueryOrderSettingDetailReq)(nil),        // 102: omsclient.QueryOrderSettingDetailReq
	(*QueryOrderSettingDetailResp)(nil),       // 103: omsclient.QueryOrderSettingDetailResp
	(*QueryOrderSettingListReq)(nil),          // 104: omsclient.QueryOrderSettingListReq
	(*OrderSettingListData)(nil),              // 105: omsclient.OrderSettingListData
	(*QueryOrderSettingListResp)(nil),         // 106: omsclient.QueryOrderSettingListResp
	(*QueryDefaultSettingReq)(nil),            // 107: omsclient.QueryDefaultSettingReq
}
var file_rpc_oms_oms_proto_depIdxs = []int32{
	6,   // 0: omsclient.QueryCartItemListResp.list:type_name -> omsclient.CartItemData
	20,  // 1: omsclient.QueryCompanyAddressListResp.list:type_name -> omsclient.CompanyAddressListData
	31,  // 2: omsclient.QueryOrderDeliveryListResp.list:type_name -> omsclient.OrderDeliveryListData
	33,  // 3: omsclient.AddOrderReq.order_item_data:type_name -> omsclient.OrderItemData
	46,  // 4: omsclient.QueryOrderDetailResp.data:type_name -> omsclient.OrderListData
	33,  // 5: omsclient.OrderListData.order_item_data:type_name -> omsclient.OrderItemData
	45,  // 6: omsclient.OrderListData.opt_log_data:type_name -> omsclient.OrderOptLogData
	46,  // 7: omsclient.QueryOrderListResp.list:type_name -> omsclient.OrderListData
	54,  // 8: omsclient.CancelOrderResp.data:type_name -> omsclient.ReleaseSkuStockLockData
	63,  // 9: omsclient.QueryOrderOperationLogListResp.list:type_name -> omsclient.OrderOperationLogData
	70,  // 10: omsclient.QueryOrderPaymentListResp.list:type_name -> omsclient.OrderPaymentData
	73,  // 11: omsclient.OrderReturnReq.order_return_item:type_name -> omsclient.OrderReturnItemData
	73,  // 12: omsclient.OrderReturnData.order_return_item:type_name -> omsclient.OrderReturnItemData
	79,  // 13: omsclient.QueryOrderReturnListResp.list:type_name -> omsclient.OrderReturnData
	92,  // 14: omsclient.QueryOrderReturnReasonListResp.list:type_name -> omsclient.OrderReturnReasonListData
	105, // 15: omsclient.QueryOrderSettingListResp.list:type_name -> omsclient.OrderSettingListData
	0,   // 16: omsclient.CartItemService.AddCartItem:input_type -> omsclient.AddCartItemReq
	2,   // 17: omsclient.CartItemService.DeleteCartItem:input_type -> omsclient.DeleteCartItemReq
	3,   // 18: omsclient.CartItemService.UpdateCartItem:input_type -> omsclient.UpdateCartItemReq
	4,   // 19: omsclient.CartItemService.UpdateCartItemQuantity:input_type -> omsclient.UpdateCartItemQuantityReq
	5,   // 20: omsclient.CartItemService.QueryCartItemDetail:input_type -> omsclient.QueryCartItemDetailReq
	7,   // 21: omsclient.CartItemService.QueryCartItemList:input_type -> omsclient.QueryCartItemListReq
	9,   // 22: omsclient.CompanyAddressService.AddCompanyAddress:input_type -> omsclient.AddCompanyAddressReq
	11,  // 23: omsclient.CompanyAddressService.DeleteCompanyAddress:input_type -> omsclient.DeleteCompanyAddressReq
	13,  // 24: omsclient.CompanyAddressService.UpdateCompanyAddress:input_type -> omsclient.UpdateCompanyAddressReq
	17,  // 25: omsclient.CompanyAddressService.QueryCompanyAddressDetail:input_type -> omsclient.QueryCompanyAddressDetailReq
	19,  // 26: omsclient.CompanyAddressService.QueryCompanyAddressList:input_type -> omsclient.QueryCompanyAddressListReq
	15,  // 27: omsclient.CompanyAddressService.UpdateCompanyAddressSendStatus:input_type -> omsclient.UpdateCompanyAddressStatusReq
	15,  // 28: omsclient.CompanyAddressService.UpdateCompanyAddressReceiveStatus:input_type -> omsclient.UpdateCompanyAddressStatusReq
	22,  // 29: omsclient.OrderDeliveryService.AddOrderDelivery:input_type -> omsclient.AddOrderDeliveryReq
	24,  // 30: omsclient.OrderDeliveryService.DeleteOrderDelivery:input_type -> omsclient.DeleteOrderDeliveryReq
	26,  // 31: omsclient.OrderDeliveryService.UpdateOrderDelivery:input_type -> omsclient.UpdateOrderDeliveryReq
	28,  // 32: omsclient.OrderDeliveryService.QueryOrderDeliveryDetail:input_type -> omsclient.QueryOrderDeliveryDetailReq
	30,  // 33: omsclient.OrderDeliveryService.QueryOrderDeliveryList:input_type -> omsclient.QueryOrderDeliveryListReq
	34,  // 34: omsclient.OrderService.AddOrder:input_type -> omsclient.AddOrderReq
	36,  // 35: omsclient.OrderService.DeleteOrder:input_type -> omsclient.DeleteOrderReq
	38,  // 36: omsclient.OrderService.UpdateOrder:input_type -> omsclient.UpdateOrderReq
	40,  // 37: omsclient.OrderService.UpdateOrderStatus:input_type -> omsclient.UpdateOrderStatusReq
	42,  // 38: omsclient.OrderService.QueryOrderDetail:input_type -> omsclient.QueryOrderDetailReq
	44,  // 39: omsclient.OrderService.QueryOrderList:input_type -> omsclient.QueryOrderListReq
	48,  // 40: omsclient.OrderService.Delivery:input_type -> omsclient.DeliveryReq
	50,  // 41: omsclient.OrderService.CloseOrder:input_type -> omsclient.CloseOrderReq
	53,  // 42: omsclient.OrderService.CancelOrder:input_type -> omsclient.CancelOrderReq
	56,  // 43: omsclient.OrderService.ConfirmOrder:input_type -> omsclient.ConfirmOrderReq
	58,  // 44: omsclient.OrderService.QueryTimeOutOrderList:input_type -> omsclient.QueryTimeOutOrderListReq
	59,  // 45: omsclient.OrderOperationLogService.AddOrderOperationLog:input_type -> omsclient.AddOrderOperationLogReq
	61,  // 46: omsclient.OrderOperationLogService.QueryOrderOperationLogDetail:input_type -> omsclient.QueryOrderOperationLogDetailReq
	62,  // 47: omsclient.OrderOperationLogService.QueryOrderOperationLogList:input_type -> omsclient.QueryOrderOperationLogListReq
	65,  // 48: omsclient.OrderPaymentService.AddOrderPayment:input_type -> omsclient.OrderPaymentReq
	67,  // 49: omsclient.OrderPaymentService.UpdateOrderPaymentStatus:input_type -> omsclient.UpdateOrderPaymentStatusReq
	68,  // 50: omsclient.OrderPaymentService.QueryOrderPaymentDetail:input_type -> omsclient.QueryOrderPaymentDetailReq
	69,  // 51: omsclient.OrderPaymentService.QueryOrderPaymentList:input_type -> omsclient.QueryOrderPaymentListReq
	72,  // 52: omsclient.OrderReturnService.AddOrderReturn:input_type -> omsclient.OrderReturnReq
	75,  // 53: omsclient.OrderReturnService.DeleteOrderReturn:input_type -> omsclient.DeleteOrderReturnReq
	72,  // 54: omsclient.OrderReturnService.UpdateOrderReturn:input_type -> omsclient.OrderReturnReq
	76,  // 55: omsclient.OrderReturnService.UpdateOrderReturnStatus:input_type -> omsclient.UpdateOrderReturnStatusReq
	77,  // 56: omsclient.OrderReturnService.QueryOrderReturnDetail:input_type -> omsclient.QueryOrderReturnDetailReq
	78,  // 57: omsclient.OrderReturnService.QueryOrderReturnList:input_type -> omsclient.QueryOrderReturnListReq
	81,  // 58: omsclient.OrderReturnReasonService.AddOrderReturnReason:input_type -> omsclient.AddOrderReturnReasonReq
	83,  // 59: omsclient.OrderReturnReasonService.DeleteOrderReturnReason:input_type -> omsclient.DeleteOrderReturnReasonReq
	85,  // 60: omsclient.OrderReturnReasonService.UpdateOrderReturnReason:input_type -> omsclient.UpdateOrderReturnReasonReq
	87,  // 61: omsclient.OrderReturnReasonService.UpdateOrderReturnReasonStatus:input_type -> omsclient.UpdateOrderReturnReasonStatusReq
	89,  // 62: omsclient.OrderReturnReasonService.QueryOrderReturnReasonDetail:input_type -> omsclient.QueryOrderReturnReasonDetailReq
	91,  // 63: omsclient.OrderReturnReasonService.QueryOrderReturnReasonList:input_type -> omsclient.QueryOrderReturnReasonListReq
	94,  // 64: omsclient.OrderSettingService.AddOrderSetting:input_type -> omsclient.AddOrderSettingReq
	96,  // 65: omsclient.OrderSettingService.DeleteOrderSetting:input_type -> omsclient.DeleteOrderSettingReq
	98,  // 66: omsclient.OrderSettingService.UpdateOrderSetting:input_type -> omsclient.UpdateOrderSettingReq
	100, // 67: omsclient.OrderSettingService.UpdateOrderSettingStatus:input_type -> omsclient.UpdateOrderSettingStatusReq
	102, // 68: omsclient.OrderSettingService.QueryOrderSettingDetail:input_type -> omsclient.QueryOrderSettingDetailReq
	104, // 69: omsclient.OrderSettingService.QueryOrderSettingList:input_type -> omsclient.QueryOrderSettingListReq
	100, // 70: omsclient.OrderSettingService.UpdateOrderSettingDefaultStatus:input_type -> omsclient.UpdateOrderSettingStatusReq
	107, // 71: omsclient.OrderSettingService.QueryDefaultSetting:input_type -> omsclient.QueryDefaultSettingReq
	1,   // 72: omsclient.CartItemService.AddCartItem:output_type -> omsclient.CartItemResp
	1,   // 73: omsclient.CartItemService.DeleteCartItem:output_type -> omsclient.CartItemResp
	1,   // 74: omsclient.CartItemService.UpdateCartItem:output_type -> omsclient.CartItemResp
	1,   // 75: omsclient.CartItemService.UpdateCartItemQuantity:output_type -> omsclient.CartItemResp
	6,   // 76: omsclient.CartItemService.QueryCartItemDetail:output_type -> omsclient.CartItemData
	8,   // 77: omsclient.CartItemService.QueryCartItemList:output_type -> omsclient.QueryCartItemListResp
	10,  // 78: omsclient.CompanyAddressService.AddCompanyAddress:output_type -> omsclient.AddCompanyAddressResp
	12,  // 79: omsclient.CompanyAddressService.DeleteCompanyAddress:output_type -> omsclient.DeleteCompanyAddressResp
	14,  // 80: omsclient.CompanyAddressService.UpdateCompanyAddress:output_type -> omsclient.UpdateCompanyAddressResp
	18,  // 81: omsclient.CompanyAddressService.QueryCompanyAddressDetail:output_type -> omsclient.QueryCompanyAddressDetailResp
	21,  // 82: omsclient.CompanyAddressService.QueryCompanyAddressList:output_type -> omsclient.QueryCompanyAddressListResp
	16,  // 83: omsclient.CompanyAddressService.UpdateCompanyAddressSendStatus:output_type -> omsclient.UpdateCompanyAddressStatusResp
	16,  // 84: omsclient.CompanyAddressService.UpdateCompanyAddressReceiveStatus:output_type -> omsclient.UpdateCompanyAddressStatusResp
	23,  // 85: omsclient.OrderDeliveryService.AddOrderDelivery:output_type -> omsclient.AddOrderDeliveryResp
	25,  // 86: omsclient.OrderDeliveryService.DeleteOrderDelivery:output_type -> omsclient.DeleteOrderDeliveryResp
	27,  // 87: omsclient.OrderDeliveryService.UpdateOrderDelivery:output_type -> omsclient.UpdateOrderDeliveryResp
	29,  // 88: omsclient.OrderDeliveryService.QueryOrderDeliveryDetail:output_type -> omsclient.QueryOrderDeliveryDetailResp
	32,  // 89: omsclient.OrderDeliveryService.QueryOrderDeliveryList:output_type -> omsclient.QueryOrderDeliveryListResp
	35,  // 90: omsclient.OrderService.AddOrder:output_type -> omsclient.AddOrderResp
	37,  // 91: omsclient.OrderService.DeleteOrder:output_type -> omsclient.DeleteOrderResp
	39,  // 92: omsclient.OrderService.UpdateOrder:output_type -> omsclient.UpdateOrderResp
	41,  // 93: omsclient.OrderService.UpdateOrderStatus:output_type -> omsclient.UpdateOrderStatusResp
	43,  // 94: omsclient.OrderService.QueryOrderDetail:output_type -> omsclient.QueryOrderDetailResp
	47,  // 95: omsclient.OrderService.QueryOrderList:output_type -> omsclient.QueryOrderListResp
	49,  // 96: omsclient.OrderService.Delivery:output_type -> omsclient.DeliveryResp
	51,  // 97: omsclient.OrderService.CloseOrder:output_type -> omsclient.CloseOrderResp
	55,  // 98: omsclient.OrderService.CancelOrder:output_type -> omsclient.CancelOrderResp
	57,  // 99: omsclient.OrderService.ConfirmOrder:output_type -> omsclient.ConfirmOrderResp
	47,  // 100: omsclient.OrderService.QueryTimeOutOrderList:output_type -> omsclient.QueryOrderListResp
	60,  // 101: omsclient.OrderOperationLogService.AddOrderOperationLog:output_type -> omsclient.AddOrderOperationLogResp
	63,  // 102: omsclient.OrderOperationLogService.QueryOrderOperationLogDetail:output_type -> omsclient.OrderOperationLogData
	64,  // 103: omsclient.OrderOperationLogService.QueryOrderOperationLogList:output_type -> omsclient.QueryOrderOperationLogListResp
	66,  // 104: omsclient.OrderPaymentService.AddOrderPayment:output_type -> omsclient.OrderPaymentResp
	66,  // 105: omsclient.OrderPaymentService.UpdateOrderPaymentStatus:output_type -> omsclient.OrderPaymentResp
	70,  // 106: omsclient.OrderPaymentService.QueryOrderPaymentDetail:output_type -> omsclient.OrderPaymentData
	71,  // 107: omsclient.OrderPaymentService.QueryOrderPaymentList:output_type -> omsclient.QueryOrderPaymentListResp
	74,  // 108: omsclient.OrderReturnService.AddOrderReturn:output_type -> omsclient.OrderReturnResp
	74,  // 109: omsclient.OrderReturnService.DeleteOrderReturn:output_type -> omsclient.OrderReturnResp
	74,  // 110: omsclient.OrderReturnService.UpdateOrderReturn:output_type -> omsclient.OrderReturnResp
	74,  // 111: omsclient.OrderReturnService.UpdateOrderReturnStatus:output_type -> omsclient.OrderReturnResp
	79,  // 112: omsclient.OrderReturnService.QueryOrderReturnDetail:output_type -> omsclient.OrderReturnData
	80,  // 113: omsclient.OrderReturnService.QueryOrderReturnList:output_type -> omsclient.QueryOrderReturnListResp
	82,  // 114: omsclient.OrderReturnReasonService.AddOrderReturnReason:output_type -> omsclient.AddOrderReturnReasonResp
	84,  // 115: omsclient.OrderReturnReasonService.DeleteOrderReturnReason:output_type -> omsclient.DeleteOrderReturnReasonResp
	86,  // 116: omsclient.OrderReturnReasonService.UpdateOrderReturnReason:output_type -> omsclient.UpdateOrderReturnReasonResp
	88,  // 117: omsclient.OrderReturnReasonService.UpdateOrderReturnReasonStatus:output_type -> omsclient.UpdateOrderReturnReasonStatusResp
	90,  // 118: omsclient.OrderReturnReasonService.QueryOrderReturnReasonDetail:output_type -> omsclient.QueryOrderReturnReasonDetailResp
	93,  // 119: omsclient.OrderReturnReasonService.QueryOrderReturnReasonList:output_type -> omsclient.QueryOrderReturnReasonListResp
	95,  // 120: omsclient.OrderSettingService.AddOrderSetting:output_type -> omsclient.AddOrderSettingResp
	97,  // 121: omsclient.OrderSettingService.DeleteOrderSetting:output_type -> omsclient.DeleteOrderSettingResp
	99,  // 122: omsclient.OrderSettingService.UpdateOrderSetting:output_type -> omsclient.UpdateOrderSettingResp
	101, // 123: omsclient.OrderSettingService.UpdateOrderSettingStatus:output_type -> omsclient.UpdateOrderSettingStatusResp
	103, // 124: omsclient.OrderSettingService.QueryOrderSettingDetail:output_type -> omsclient.QueryOrderSettingDetailResp
	106, // 125: omsclient.OrderSettingService.QueryOrderSettingList:output_type -> omsclient.QueryOrderSettingListResp
	101, // 126: omsclient.OrderSettingService.UpdateOrderSettingDefaultStatus:output_type -> omsclient.UpdateOrderSettingStatusResp
	103, // 127: omsclient.OrderSettingService.QueryDefaultSetting:output_type -> omsclient.QueryOrderSettingDetailResp
	72,  // [72:128] is the sub-list for method output_type
	16,  // [16:72] is the sub-list for method input_type
	16,  // [16:16] is the sub-list for extension type_name
	16,  // [16:16] is the sub-list for extension extendee
	0,   // [0:16] is the sub-list for field type_name
}

func init() { file_rpc_oms_oms_proto_init() }
func file_rpc_oms_oms_proto_init() {
	if File_rpc_oms_oms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_oms_oms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCartItemQuantityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCartItemListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyAddressStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyAddressListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCompanyAddressListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderDeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderDeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderDeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderDeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderDeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderDeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderDeliveryDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderDeliveryDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderDeliveryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDeliveryListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderDeliveryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOptLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReceiverInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseSkuStockLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTimeOutOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderOperationLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderOperationLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderOperationLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderOperationLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOperationLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderOperationLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPaymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPaymentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderPaymentStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderPaymentDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderPaymentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPaymentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderPaymentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReturnReasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReturnReasonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnReasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReturnReasonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReturnReasonStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnReasonListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderReturnReasonListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderSettingStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSettingListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderSettingListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_oms_oms_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDefaultSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_oms_oms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   108,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_rpc_oms_oms_proto_goTypes,
		DependencyIndexes: file_rpc_oms_oms_proto_depIdxs,
		MessageInfos:      file_rpc_oms_oms_proto_msgTypes,
	}.Build()
	File_rpc_oms_oms_proto = out.File
	file_rpc_oms_oms_proto_rawDesc = nil
	file_rpc_oms_oms_proto_goTypes = nil
	file_rpc_oms_oms_proto_depIdxs = nil
}

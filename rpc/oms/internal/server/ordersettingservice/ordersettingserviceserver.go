// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/oms/internal/logic/ordersettingservice"
	"github.com/feihua/zero-admin/rpc/oms/internal/svc"
	"github.com/feihua/zero-admin/rpc/oms/omsclient"
)

type OrderSettingServiceServer struct {
	svcCtx *svc.ServiceContext
	omsclient.UnimplementedOrderSettingServiceServer
}

func NewOrderSettingServiceServer(svcCtx *svc.ServiceContext) *OrderSettingServiceServer {
	return &OrderSettingServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加订单设置
func (s *OrderSettingServiceServer) AddOrderSetting(ctx context.Context, in *omsclient.AddOrderSettingReq) (*omsclient.AddOrderSettingResp, error) {
	l := ordersettingservicelogic.NewAddOrderSettingLogic(ctx, s.svcCtx)
	return l.AddOrderSetting(in)
}

// 删除订单设置
func (s *OrderSettingServiceServer) DeleteOrderSetting(ctx context.Context, in *omsclient.DeleteOrderSettingReq) (*omsclient.DeleteOrderSettingResp, error) {
	l := ordersettingservicelogic.NewDeleteOrderSettingLogic(ctx, s.svcCtx)
	return l.DeleteOrderSetting(in)
}

// 更新订单设置
func (s *OrderSettingServiceServer) UpdateOrderSetting(ctx context.Context, in *omsclient.UpdateOrderSettingReq) (*omsclient.UpdateOrderSettingResp, error) {
	l := ordersettingservicelogic.NewUpdateOrderSettingLogic(ctx, s.svcCtx)
	return l.UpdateOrderSetting(in)
}

// 更新订单设置状态
func (s *OrderSettingServiceServer) UpdateOrderSettingStatus(ctx context.Context, in *omsclient.UpdateOrderSettingStatusReq) (*omsclient.UpdateOrderSettingStatusResp, error) {
	l := ordersettingservicelogic.NewUpdateOrderSettingStatusLogic(ctx, s.svcCtx)
	return l.UpdateOrderSettingStatus(in)
}

// 查询订单设置详情
func (s *OrderSettingServiceServer) QueryOrderSettingDetail(ctx context.Context, in *omsclient.QueryOrderSettingDetailReq) (*omsclient.QueryOrderSettingDetailResp, error) {
	l := ordersettingservicelogic.NewQueryOrderSettingDetailLogic(ctx, s.svcCtx)
	return l.QueryOrderSettingDetail(in)
}

// 查询订单设置列表
func (s *OrderSettingServiceServer) QueryOrderSettingList(ctx context.Context, in *omsclient.QueryOrderSettingListReq) (*omsclient.QueryOrderSettingListResp, error) {
	l := ordersettingservicelogic.NewQueryOrderSettingListLogic(ctx, s.svcCtx)
	return l.QueryOrderSettingList(in)
}

// 更新订单设置默认状态
func (s *OrderSettingServiceServer) UpdateOrderSettingDefaultStatus(ctx context.Context, in *omsclient.UpdateOrderSettingStatusReq) (*omsclient.UpdateOrderSettingStatusResp, error) {
	l := ordersettingservicelogic.NewUpdateOrderSettingDefaultStatusLogic(ctx, s.svcCtx)
	return l.UpdateOrderSettingDefaultStatus(in)
}

// 查询默认的订单设置
func (s *OrderSettingServiceServer) QueryDefaultSetting(ctx context.Context, in *omsclient.QueryDefaultSettingReq) (*omsclient.QueryOrderSettingDetailResp, error) {
	l := ordersettingservicelogic.NewQueryDefaultSettingLogic(ctx, s.svcCtx)
	return l.QueryDefaultSetting(in)
}

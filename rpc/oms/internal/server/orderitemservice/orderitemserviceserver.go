// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/oms/internal/logic/orderitemservice"
	"github.com/feihua/zero-admin/rpc/oms/internal/svc"
	"github.com/feihua/zero-admin/rpc/oms/omsclient"
)

type OrderItemServiceServer struct {
	svcCtx *svc.ServiceContext
	omsclient.UnimplementedOrderItemServiceServer
}

func NewOrderItemServiceServer(svcCtx *svc.ServiceContext) *OrderItemServiceServer {
	return &OrderItemServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加订单中所包含的商品
func (s *OrderItemServiceServer) AddOrderItem(ctx context.Context, in *omsclient.AddOrderItemReq) (*omsclient.AddOrderItemResp, error) {
	l := orderitemservicelogic.NewAddOrderItemLogic(ctx, s.svcCtx)
	return l.AddOrderItem(in)
}

// 查询订单中所包含的商品详情
func (s *OrderItemServiceServer) QueryOrderItemDetail(ctx context.Context, in *omsclient.QueryOrderItemDetailReq) (*omsclient.QueryOrderItemDetailResp, error) {
	l := orderitemservicelogic.NewQueryOrderItemDetailLogic(ctx, s.svcCtx)
	return l.QueryOrderItemDetail(in)
}

// 查询订单中所包含的商品列表
func (s *OrderItemServiceServer) QueryOrderItemList(ctx context.Context, in *omsclient.QueryOrderItemListReq) (*omsclient.QueryOrderItemListResp, error) {
	l := orderitemservicelogic.NewQueryOrderItemListLogic(ctx, s.svcCtx)
	return l.QueryOrderItemList(in)
}

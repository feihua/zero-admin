// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/oms/internal/logic/orderpaymentservice"
	"github.com/feihua/zero-admin/rpc/oms/internal/svc"
	"github.com/feihua/zero-admin/rpc/oms/omsclient"
)

type OrderPaymentServiceServer struct {
	svcCtx *svc.ServiceContext
	omsclient.UnimplementedOrderPaymentServiceServer
}

func NewOrderPaymentServiceServer(svcCtx *svc.ServiceContext) *OrderPaymentServiceServer {
	return &OrderPaymentServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加订单支付
func (s *OrderPaymentServiceServer) AddOrderPayment(ctx context.Context, in *omsclient.OrderPaymentReq) (*omsclient.OrderPaymentResp, error) {
	l := orderpaymentservicelogic.NewAddOrderPaymentLogic(ctx, s.svcCtx)
	return l.AddOrderPayment(in)
}

// 更新订单支付状态
func (s *OrderPaymentServiceServer) UpdateOrderPaymentStatus(ctx context.Context, in *omsclient.UpdateOrderPaymentStatusReq) (*omsclient.OrderPaymentResp, error) {
	l := orderpaymentservicelogic.NewUpdateOrderPaymentStatusLogic(ctx, s.svcCtx)
	return l.UpdateOrderPaymentStatus(in)
}

// 查询订单支付详情
func (s *OrderPaymentServiceServer) QueryOrderPaymentDetail(ctx context.Context, in *omsclient.QueryOrderPaymentDetailReq) (*omsclient.OrderPaymentData, error) {
	l := orderpaymentservicelogic.NewQueryOrderPaymentDetailLogic(ctx, s.svcCtx)
	return l.QueryOrderPaymentDetail(in)
}

// 查询订单支付列表
func (s *OrderPaymentServiceServer) QueryOrderPaymentList(ctx context.Context, in *omsclient.QueryOrderPaymentListReq) (*omsclient.QueryOrderPaymentListResp, error) {
	l := orderpaymentservicelogic.NewQueryOrderPaymentListLogic(ctx, s.svcCtx)
	return l.QueryOrderPaymentList(in)
}

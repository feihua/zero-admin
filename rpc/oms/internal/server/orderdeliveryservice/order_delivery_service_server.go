// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: oms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/oms/internal/logic/orderdeliveryservice"
	"github.com/feihua/zero-admin/rpc/oms/internal/svc"
	"github.com/feihua/zero-admin/rpc/oms/omsclient"
)

type OrderDeliveryServiceServer struct {
	svcCtx *svc.ServiceContext
	omsclient.UnimplementedOrderDeliveryServiceServer
}

func NewOrderDeliveryServiceServer(svcCtx *svc.ServiceContext) *OrderDeliveryServiceServer {
	return &OrderDeliveryServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加订单收货地址
func (s *OrderDeliveryServiceServer) AddOrderDelivery(ctx context.Context, in *omsclient.AddOrderDeliveryReq) (*omsclient.AddOrderDeliveryResp, error) {
	l := orderdeliveryservicelogic.NewAddOrderDeliveryLogic(ctx, s.svcCtx)
	return l.AddOrderDelivery(in)
}

// 删除订单收货地址
func (s *OrderDeliveryServiceServer) DeleteOrderDelivery(ctx context.Context, in *omsclient.DeleteOrderDeliveryReq) (*omsclient.DeleteOrderDeliveryResp, error) {
	l := orderdeliveryservicelogic.NewDeleteOrderDeliveryLogic(ctx, s.svcCtx)
	return l.DeleteOrderDelivery(in)
}

// 更新订单收货地址
func (s *OrderDeliveryServiceServer) UpdateOrderDelivery(ctx context.Context, in *omsclient.UpdateOrderDeliveryReq) (*omsclient.UpdateOrderDeliveryResp, error) {
	l := orderdeliveryservicelogic.NewUpdateOrderDeliveryLogic(ctx, s.svcCtx)
	return l.UpdateOrderDelivery(in)
}

// 查询订单收货地址详情
func (s *OrderDeliveryServiceServer) QueryOrderDeliveryDetail(ctx context.Context, in *omsclient.QueryOrderDeliveryDetailReq) (*omsclient.QueryOrderDeliveryDetailResp, error) {
	l := orderdeliveryservicelogic.NewQueryOrderDeliveryDetailLogic(ctx, s.svcCtx)
	return l.QueryOrderDeliveryDetail(in)
}

// 查询订单收货地址列表
func (s *OrderDeliveryServiceServer) QueryOrderDeliveryList(ctx context.Context, in *omsclient.QueryOrderDeliveryListReq) (*omsclient.QueryOrderDeliveryListResp, error) {
	l := orderdeliveryservicelogic.NewQueryOrderDeliveryListLogic(ctx, s.svcCtx)
	return l.QueryOrderDeliveryList(in)
}

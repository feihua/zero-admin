// Code generated by goctl. DO NOT EDIT!
// Source: us.proto

package server

import (
	"context"

	"go-zero-admin/rpc/us/internal/logic"
	"go-zero-admin/rpc/us/internal/svc"
	"go-zero-admin/rpc/us/us"
)

type UsServer struct {
	svcCtx *svc.ServiceContext
}

func NewUsServer(svcCtx *svc.ServiceContext) *UsServer {
	return &UsServer{
		svcCtx: svcCtx,
	}
}

func (s *UsServer) PersionAdd(ctx context.Context, in *us.PersionAddReq) (*us.PersionAddResp, error) {
	l := logic.NewPersionAddLogic(ctx, s.svcCtx)
	return l.PersionAdd(in)
}

func (s *UsServer) PersionList(ctx context.Context, in *us.PersionListReq) (*us.PersionListResp, error) {
	l := logic.NewPersionListLogic(ctx, s.svcCtx)
	return l.PersionList(in)
}

func (s *UsServer) PersionUpdate(ctx context.Context, in *us.PersionUpdateReq) (*us.PersionUpdateResp, error) {
	l := logic.NewPersionUpdateLogic(ctx, s.svcCtx)
	return l.PersionUpdate(in)
}

func (s *UsServer) PersionDelete(ctx context.Context, in *us.PersionDeleteReq) (*us.PersionDeleteResp, error) {
	l := logic.NewPersionDeleteLogic(ctx, s.svcCtx)
	return l.PersionDelete(in)
}

func (s *UsServer) RoleAdd(ctx context.Context, in *us.RoleAddReq) (*us.RoleAddResp, error) {
	l := logic.NewRoleAddLogic(ctx, s.svcCtx)
	return l.RoleAdd(in)
}

func (s *UsServer) RoleList(ctx context.Context, in *us.RoleListReq) (*us.RoleListResp, error) {
	l := logic.NewRoleListLogic(ctx, s.svcCtx)
	return l.RoleList(in)
}

func (s *UsServer) RoleUpdate(ctx context.Context, in *us.RoleUpdateReq) (*us.RoleUpdateResp, error) {
	l := logic.NewRoleUpdateLogic(ctx, s.svcCtx)
	return l.RoleUpdate(in)
}

func (s *UsServer) RoleDelete(ctx context.Context, in *us.RoleDeleteReq) (*us.RoleDeleteResp, error) {
	l := logic.NewRoleDeleteLogic(ctx, s.svcCtx)
	return l.RoleDelete(in)
}

func (s *UsServer) PersionLogin(ctx context.Context, in *us.PersionLoginReq) (*us.PersionLoginResp, error) {
	l := logic.NewPersionLoginLogic(ctx, s.svcCtx)
	return l.PersionLogin(in)
}

func (s *UsServer) PersionRegister(ctx context.Context, in *us.PersionRegisterReq) (*us.PersionRegisterResp, error) {
	l := logic.NewPersionRegisterLogic(ctx, s.svcCtx)
	return l.PersionRegister(in)
}

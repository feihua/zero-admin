syntax = "proto3";

package smsclient;

option go_package = "./smsclient";

// 添加优惠券
message AddCouponReq {
  int64 id = 1; //优惠券ID
  int64 type_id = 2; //优惠券类型ID
  string name = 3; //优惠券名称
  string code = 4; //优惠券码
  float amount = 5; //优惠金额/折扣率
  float min_amount = 6; //最低使用金额
  string start_time = 7; //生效时间
  string end_time = 8; //失效时间
  int32 total_count = 9; //发放总量
  int32 per_limit = 10; //每人限领数量
  int32 status = 11; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  int32 is_enabled = 12; //是否启用
  string description = 13; //使用说明
  int64 create_by = 14; //创建人ID
}

message AddCouponResp {
  string pong = 1;
}

// 删除优惠券
message DeleteCouponReq {
  repeated int64 ids = 1;
}

message DeleteCouponResp {
  string pong = 1;
}

// 更新优惠券
message UpdateCouponReq {
  int64 id = 1; //优惠券ID
  int64 type_id = 2; //优惠券类型ID
  string name = 3; //优惠券名称
  string code = 4; //优惠券码
  float amount = 5; //优惠金额/折扣率
  float min_amount = 6; //最低使用金额
  string start_time = 7; //生效时间
  string end_time = 8; //失效时间
  int32 total_count = 9; //发放总量
  int32 received_count = 10; //已领取数量
  int32 used_count = 11; //已使用数量
  int32 per_limit = 12; //每人限领数量
  int32 status = 13; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  int32 is_enabled = 14; //是否启用
  string description = 15; //使用说明
  int64 update_by = 18; //更新人ID
}

message UpdateCouponResp {
  string pong = 1;
}

// 更新优惠券状态
message UpdateCouponStatusReq {
  repeated int64 ids = 1; //优惠券ID
  int32 status = 13; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  int64 update_by = 18; //更新人ID
}

message UpdateCouponStatusResp {
  string pong = 1;
}

// 查询优惠券详情
message QueryCouponDetailReq {
    int64 id = 1;
}

message QueryCouponDetailResp {
  int64 id = 1; //优惠券ID
  int64 type_id = 2; //优惠券类型ID
  string name = 3; //优惠券名称
  string code = 4; //优惠券码
  float amount = 5; //优惠金额/折扣率
  float min_amount = 6; //最低使用金额
  string start_time = 7; //生效时间
  string end_time = 8; //失效时间
  int32 total_count = 9; //发放总量
  int32 received_count = 10; //已领取数量
  int32 used_count = 11; //已使用数量
  int32 per_limit = 12; //每人限领数量
  int32 status = 13; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  int32 is_enabled = 14; //是否启用
  string description = 15; //使用说明
  int64 create_by = 16; //创建人ID
  string create_time = 17; //创建时间
  int64 update_by = 18; //更新人ID
  string update_time = 19; //更新时间
  int32 is_deleted = 20; //是否删除

}

// 分页查询优惠券列表
message QueryCouponListReq {
  int64 type_id = 1; //优惠券类型ID
  string name = 2; //优惠券名称
  string code = 3; //优惠券码
  string start_time = 4; //生效时间
  string end_time = 5; //失效时间
  int32 status = 6; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  int32 is_enabled = 7; //是否启用
  int32 page_num = 8; //第几页
  int32 page_size = 9; //每页的数量
}

message CouponListData {
  int64 id = 1; //优惠券ID
  int64 type_id = 2; //优惠券类型ID
  string name = 3; //优惠券名称
  string code = 4; //优惠券码
  float amount = 5; //优惠金额/折扣率
  float min_amount = 6; //最低使用金额
  string start_time = 7; //生效时间
  string end_time = 8; //失效时间
  int32 total_count = 9; //发放总量
  int32 received_count = 10; //已领取数量
  int32 used_count = 11; //已使用数量
  int32 per_limit = 12; //每人限领数量
  int32 status = 13; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  int32 is_enabled = 14; //是否启用
  string description = 15; //使用说明
  int64 create_by = 16; //创建人ID
  string create_time = 17; //创建时间
  int64 update_by = 18; //更新人ID
  string update_time = 19; //更新时间

}

message QueryCouponListResp {
  int64 total = 1;
  repeated  CouponListData list = 2;
}

message QueryCouponByScopeIdReq {
  repeated int64 scope_ids = 1;
}

message QueryCouponByScopeIdResp {
  repeated  CouponListData list = 1;
}

message QueryCouponByCodeReq {
  string code = 1; //优惠券类型编码
}
message QueryCouponByCodeResp {
  repeated  CouponListData list = 1;
}
// 优惠券
service CouponService {
  // 添加优惠券
  rpc AddCoupon(AddCouponReq) returns (AddCouponResp){}
  // 删除优惠券
  rpc DeleteCoupon(DeleteCouponReq) returns (DeleteCouponResp){}
  // 更新优惠券
  rpc UpdateCoupon(UpdateCouponReq) returns (UpdateCouponResp ){}
  // 更新优惠券状态
  rpc UpdateCouponStatus(UpdateCouponStatusReq) returns (UpdateCouponStatusResp ){}
  // 查询优惠券详情
   rpc QueryCouponDetail(QueryCouponDetailReq) returns (QueryCouponDetailResp){}
  // 查询优惠券列表
  rpc QueryCouponList(QueryCouponListReq) returns (QueryCouponListResp){}

  //根据商品Id和分类id查询可用的优惠券
  rpc QueryCouponByScopeId(QueryCouponByScopeIdReq) returns(QueryCouponByScopeIdResp);

  //根据优惠券类型的code查询优惠券
  rpc QueryCouponByCode(QueryCouponByCodeReq) returns(QueryCouponByCodeResp);

}


// 添加优惠券领取记录
message AddCouponRecordReq {
  int64 coupon_id = 1; //优惠券ID
  int64 member_id = 2; //用户ID
  int32 get_type = 4; //获取类型：0->后台赠送；1->主动获取


}

message AddCouponRecordResp {
  string pong = 1;
}

// 删除优惠券领取记录
message DeleteCouponRecordReq {
  repeated int64 ids = 1;
}

message DeleteCouponRecordResp {
  string pong = 1;
}

// 更新优惠券领取记录
message UpdateCouponRecordReq {
  int64 coupon_id = 1; //优惠券ID
  int64 member_id = 2; //用户ID
  int64 order_id = 3; //使用订单ID
  float order_amount = 4; //订单金额
  float discount_amount = 5; //优惠金额
  int32 status = 6; //状态：0-未使用，1-已使用，2-已过期，3-已失效
  string invalid_time = 7; //失效时间
  string invalid_reason = 8; //失效原因
}

message UpdateCouponRecordResp {
  string pong = 1;
}


// 查询优惠券领取记录详情
message QueryCouponRecordDetailReq {
    int64 id = 1;
}

message QueryCouponRecordDetailResp {
  int64 id = 1; //
  int64 coupon_id = 2; //优惠券ID
  int64 member_id = 3; //用户ID
  string get_time = 4; //领取时间
  int32 get_type = 5; //获取类型：0->后台赠送；1->主动获取
  string use_time = 6; //使用时间
  int64 order_id = 7; //使用订单ID
  float order_amount = 8; //订单金额
  float discount_amount = 9; //优惠金额
  int32 status = 10; //状态：0-未使用，1-已使用，2-已过期，3-已失效
  string invalid_time = 11; //失效时间
  string invalid_reason = 12; //失效原因
  string create_time = 13; //

}

// 分页查询优惠券领取记录列表
message QueryCouponRecordListReq {
  int64 coupon_id = 1; //优惠券ID
  int64 member_id = 2; //用户ID
  int32 get_type = 3; //获取类型：0->后台赠送；1->主动获取
  int64 order_id = 4; //使用订单ID
  int32 status = 5; //状态：0-未使用，1-已使用，2-已过期，3-已失效
  int32 page_num = 6; //第几页
  int32 page_size = 7; //每页的数量
}

message CouponRecordListData {
  int64 id = 1; //
  int64 coupon_id = 2; //优惠券ID
  int64 member_id = 3; //用户ID
  string get_time = 4; //领取时间
  int32 get_type = 5; //获取类型：0->后台赠送；1->主动获取
  string use_time = 6; //使用时间
  int64 order_id = 7; //使用订单ID
  float order_amount = 8; //订单金额
  float discount_amount = 9; //优惠金额
  int32 status = 10; //状态：0-未使用，1-已使用，2-已过期，3-已失效
  string invalid_time = 11; //失效时间
  string invalid_reason = 12; //失效原因
  string create_time = 13; //

}

message QueryCouponRecordListResp {
  int64 total = 1;
  repeated  CouponRecordListData list = 2;
}

message QueryMemberCouponListReq {
  int64 memberId = 1;
  int32  Status = 2;
}
message QueryCouponData {
  int64 id = 1; //优惠券ID
  int64 type_id = 2; //优惠券类型ID
  string name = 3; //优惠券名称
  string code = 4; //优惠券码
  float amount = 5; //优惠金额/折扣率
  float min_amount = 6; //最低使用金额
  string start_time = 7; //生效时间
  string end_time = 8; //失效时间
  int32 per_limit = 12; //每人限领数量
  int32 status = 13; //状态：0-未开始，1-进行中，2-已结束，3-已取消
  string description = 15; //使用说明

}
message QueryMemberCouponListResp {
  repeated  QueryCouponData list = 1;
}

// 优惠券领取记录
service CouponRecordService {
  // 添加优惠券领取记录
  rpc AddCouponRecord(AddCouponRecordReq) returns (AddCouponRecordResp){}
  // 删除优惠券领取记录
  rpc DeleteCouponRecord(DeleteCouponRecordReq) returns (DeleteCouponRecordResp){}
  // 更新优惠券领取记录
  rpc UpdateCouponRecord(UpdateCouponRecordReq) returns (UpdateCouponRecordResp ){}
  // 查询优惠券领取记录详情
   rpc QueryCouponRecordDetail(QueryCouponRecordDetailReq) returns (QueryCouponRecordDetailResp){}
  // 查询优惠券领取记录列表
  rpc QueryCouponRecordList(QueryCouponRecordListReq) returns (QueryCouponRecordListResp){}

  //获取会员优惠券
  rpc QueryMemberCouponList(QueryMemberCouponListReq) returns(QueryMemberCouponListResp);

}


// 添加优惠券使用范围
message AddCouponScopeReq {
  repeated AddCouponScopeData data = 1; //

}

message AddCouponScopeData {
  int64 id = 1; //
  int64 coupon_id = 2; //优惠券ID
  int32 scope_type = 3; //范围类型：0-全场，1-分类，2-商品
  int64 scope_id = 4; //范围ID（分类ID或商品ID）
}

message AddCouponScopeResp {
  string pong = 1;
}

// 删除优惠券使用范围
message DeleteCouponScopeReq {
  repeated int64 ids = 1;
}

message DeleteCouponScopeResp {
  string pong = 1;
}

// 更新优惠券使用范围
message UpdateCouponScopeReq {
  int64 id = 1; //
  int64 coupon_id = 2; //优惠券ID
  int32 scope_type = 3; //范围类型：0-全场，1-分类，2-商品
  int64 scope_id = 4; //范围ID（分类ID或商品ID）
}

message UpdateCouponScopeResp {
  string pong = 1;
}


// 查询优惠券使用范围详情
message QueryCouponScopeDetailReq {
    int64 id = 1;
}

message QueryCouponScopeDetailResp {
  int64 id = 1; //
  int64 coupon_id = 2; //优惠券ID
  int32 scope_type = 3; //范围类型：0-全场，1-分类，2-商品
  int64 scope_id = 4; //范围ID（分类ID或商品ID）
  string create_time = 5; //创建时间

}

// 分页查询优惠券使用范围列表
message QueryCouponScopeListReq {
  int64 coupon_id = 1; //优惠券ID
  int32 scope_type = 2; //范围类型：0-全场，1-分类，2-商品
  int64 scope_id = 3; //范围ID（分类ID或商品ID）
  int32 page_num = 4; //第几页
  int32 page_size = 5; //每页的数量
}

message CouponScopeListData {
  int64 id = 1; //
  int64 coupon_id = 2; //优惠券ID
  int32 scope_type = 3; //范围类型：0-全场，1-分类，2-商品
  int64 scope_id = 4; //范围ID（分类ID或商品ID）
  string create_time = 5; //创建时间

}

message QueryCouponScopeListResp {
  int64 total = 1;
  repeated  CouponScopeListData list = 2;
}

// 优惠券使用范围
service CouponScopeService {
  // 添加优惠券使用范围
  rpc AddCouponScope(AddCouponScopeReq) returns (AddCouponScopeResp){}
  // 删除优惠券使用范围
  rpc DeleteCouponScope(DeleteCouponScopeReq) returns (DeleteCouponScopeResp){}
  // 更新优惠券使用范围
  rpc UpdateCouponScope(UpdateCouponScopeReq) returns (UpdateCouponScopeResp ){}

  // 查询优惠券使用范围详情
   rpc QueryCouponScopeDetail(QueryCouponScopeDetailReq) returns (QueryCouponScopeDetailResp){}
  // 查询优惠券使用范围列表
  rpc QueryCouponScopeList(QueryCouponScopeListReq) returns (QueryCouponScopeListResp){}


}


// 添加优惠券类型
message AddCouponTypeReq {
  int64 id = 1; //主键ID
  string name = 2; //类型名称
  string code = 3; //类型编码
  string description = 4; //描述
  int32 discount_type = 5; //优惠方式：1-固定金额，2-折扣率，3-第N件特惠，4-买赠，5-特价，6-套装优惠，7-搭配优惠，8-积分抵现，9-积分倍率，10-免运费，11-运费减免，12-限时特权，13-会员特权
  int32 status = 6; //是否启用
  int32 sort = 7; //排序
  int64 create_by = 8; //创建人ID
}

message AddCouponTypeResp {
  string pong = 1;
}

// 删除优惠券类型
message DeleteCouponTypeReq {
  repeated int64 ids = 1;
}

message DeleteCouponTypeResp {
  string pong = 1;
}

// 更新优惠券类型
message UpdateCouponTypeReq {
  int64 id = 1; //主键ID
  string name = 2; //类型名称
  string code = 3; //类型编码
  string description = 4; //描述
  int32 discount_type = 5; //优惠方式：1-固定金额，2-折扣率，3-第N件特惠，4-买赠，5-特价，6-套装优惠，7-搭配优惠，8-积分抵现，9-积分倍率，10-免运费，11-运费减免，12-限时特权，13-会员特权
  int32 status = 6; //是否启用
  int32 sort = 7; //排序
  int64 update_by = 10; //更新人ID
}

message UpdateCouponTypeResp {
  string pong = 1;
}

// 更新优惠券类型状态
message UpdateCouponTypeStatusReq {
  repeated int64 ids = 1; //主键ID
  int32 status = 6; //是否启用
  int64 update_by = 10; //更新人ID
}

message UpdateCouponTypeStatusResp {
  string pong = 1;
}

// 查询优惠券类型详情
message QueryCouponTypeDetailReq {
    int64 id = 1;
}

message QueryCouponTypeDetailResp {
  int64 id = 1; //主键ID
  string name = 2; //类型名称
  string code = 3; //类型编码
  string description = 4; //描述
  int32 discount_type = 5; //优惠方式：1-固定金额，2-折扣率，3-第N件特惠，4-买赠，5-特价，6-套装优惠，7-搭配优惠，8-积分抵现，9-积分倍率，10-免运费，11-运费减免，12-限时特权，13-会员特权
  int32 status = 6; //是否启用
  int32 sort = 7; //排序
  int64 create_by = 8; //创建人ID
  string create_time = 9; //创建时间
  int64 update_by = 10; //更新人ID
  string update_time = 11; //更新时间

}

// 分页查询优惠券类型列表
message QueryCouponTypeListReq {
  string name = 1; //类型名称
  string code = 2; //类型编码
  int32 discount_type = 3; //优惠方式：1-固定金额，2-折扣率，3-第N件特惠，4-买赠，5-特价，6-套装优惠，7-搭配优惠，8-积分抵现，9-积分倍率，10-免运费，11-运费减免，12-限时特权，13-会员特权
  int32 status = 4; //是否启用
  int32 page_num = 5; //第几页
  int32 page_size = 6; //每页的数量
}

message CouponTypeListData {
  int64 id = 1; //主键ID
  string name = 2; //类型名称
  string code = 3; //类型编码
  string description = 4; //描述
  int32 discount_type = 5; //优惠方式：1-固定金额，2-折扣率，3-第N件特惠，4-买赠，5-特价，6-套装优惠，7-搭配优惠，8-积分抵现，9-积分倍率，10-免运费，11-运费减免，12-限时特权，13-会员特权
  int32 status = 6; //是否启用
  int32 sort = 7; //排序
  int64 create_by = 8; //创建人ID
  string create_time = 9; //创建时间
  int64 update_by = 10; //更新人ID
  string update_time = 11; //更新时间

}

message QueryCouponTypeListResp {
  int64 total = 1;
  repeated  CouponTypeListData list = 2;
}

// 优惠券类型
service CouponTypeService {
  // 添加优惠券类型
  rpc AddCouponType(AddCouponTypeReq) returns (AddCouponTypeResp){}
  // 删除优惠券类型
  rpc DeleteCouponType(DeleteCouponTypeReq) returns (DeleteCouponTypeResp){}
  // 更新优惠券类型
  rpc UpdateCouponType(UpdateCouponTypeReq) returns (UpdateCouponTypeResp ){}
  // 更新优惠券类型状态
  rpc UpdateCouponTypeStatus(UpdateCouponTypeStatusReq) returns (UpdateCouponTypeStatusResp ){}
  // 查询优惠券类型详情
   rpc QueryCouponTypeDetail(QueryCouponTypeDetailReq) returns (QueryCouponTypeDetailResp){}
  // 查询优惠券类型列表
  rpc QueryCouponTypeList(QueryCouponTypeListReq) returns (QueryCouponTypeListResp){}


}


// 添加首页轮播广告
message AddHomeAdvertiseReq {
  int64 id = 1; //编号
  string name = 2; //名称
  int32 type = 3; //轮播位置：0->PC首页轮播；1->app首页轮播
  string pic = 4; //图片地址
  string start_time = 5; //开始时间
  string end_time = 6; //结束时间
  int32 status = 7; //上下线状态：0->下线；1->上线
  string url = 8; //链接地址
  string remark = 9; //备注
  int32 sort = 10; //排序
}

message AddHomeAdvertiseResp {
  string pong = 1;
}

// 删除首页轮播广告
message DeleteHomeAdvertiseReq {
  repeated int64 ids = 1;
}

message DeleteHomeAdvertiseResp {
  string pong = 1;
}

// 更新首页轮播广告
message UpdateHomeAdvertiseReq {
  int64 id = 1; //编号
  string name = 2; //名称
  int32 type = 3; //轮播位置：0->PC首页轮播；1->app首页轮播
  string pic = 4; //图片地址
  string start_time = 5; //开始时间
  string end_time = 6; //结束时间
  int32 status = 7; //上下线状态：0->下线；1->上线
  string url = 10; //链接地址
  string remark = 11; //备注
  int32 sort = 12; //排序
}

message UpdateHomeAdvertiseResp {
  string pong = 1;
}

// 更新首页轮播广告状态
message UpdateHomeAdvertiseStatusReq {
  repeated int64 ids = 1; //编号
  int32 status = 2; //上下线状态：0->下线；1->上线
}

message UpdateHomeAdvertiseStatusResp {
  string pong = 1;
}

// 查询首页轮播广告详情
message QueryHomeAdvertiseDetailReq {
    int64 id = 1;
}

message QueryHomeAdvertiseDetailResp {
  int64 id = 1; //编号
  string name = 2; //名称
  int32 type = 3; //轮播位置：0->PC首页轮播；1->app首页轮播
  string pic = 4; //图片地址
  string start_time = 5; //开始时间
  string end_time = 6; //结束时间
  int32 status = 7; //上下线状态：0->下线；1->上线
  int32 click_count = 8; //点击数
  int32 order_count = 9; //下单数
  string url = 10; //链接地址
  string remark = 11; //备注
  int32 sort = 12; //排序
  string create_time = 13; //创建时间
  string update_time = 14; //更新时间

}

// 分页查询首页轮播广告列表
message QueryHomeAdvertiseListReq {
  string name = 1; //名称
  int32 type = 2; //轮播位置：0->PC首页轮播；1->app首页轮播
  string start_time = 3; //开始时间
  string end_time = 4; //结束时间
  int32 status = 5; //上下线状态：0->下线；1->上线
  int32 page_num = 6; //第几页
  int32 page_size = 7; //每页的数量
}

message HomeAdvertiseListData {
  int64 id = 1; //编号
  string name = 2; //名称
  int32 type = 3; //轮播位置：0->PC首页轮播；1->app首页轮播
  string pic = 4; //图片地址
  string start_time = 5; //开始时间
  string end_time = 6; //结束时间
  int32 status = 7; //上下线状态：0->下线；1->上线
  int32 click_count = 8; //点击数
  int32 order_count = 9; //下单数
  string url = 10; //链接地址
  string remark = 11; //备注
  int32 sort = 12; //排序
  string create_time = 13; //创建时间
  string update_time = 14; //更新时间

}

message QueryHomeAdvertiseListResp {
  int64 total = 1;
  repeated  HomeAdvertiseListData list = 2;
}

// 首页轮播广告
service HomeAdvertiseService {
  // 添加首页轮播广告
  rpc AddHomeAdvertise(AddHomeAdvertiseReq) returns (AddHomeAdvertiseResp){}
  // 删除首页轮播广告
  rpc DeleteHomeAdvertise(DeleteHomeAdvertiseReq) returns (DeleteHomeAdvertiseResp){}
  // 更新首页轮播广告
  rpc UpdateHomeAdvertise(UpdateHomeAdvertiseReq) returns (UpdateHomeAdvertiseResp ){}
  // 更新首页轮播广告状态
  rpc UpdateHomeAdvertiseStatus(UpdateHomeAdvertiseStatusReq) returns (UpdateHomeAdvertiseStatusResp ){}
  // 查询首页轮播广告详情
   rpc QueryHomeAdvertiseDetail(QueryHomeAdvertiseDetailReq) returns (QueryHomeAdvertiseDetailResp){}
  // 查询首页轮播广告列表
  rpc QueryHomeAdvertiseList(QueryHomeAdvertiseListReq) returns (QueryHomeAdvertiseListResp){}


}


// 添加秒杀活动
message AddSeckillActivityReq {
  int64 id = 1; //编号
  string name = 2; //活动名称
  string description = 3; //活动描述
  string start_time = 4; //开始时间
  string end_time = 5; //结束时间
  int32 status = 6; //活动状态：状态:0-上线,1-下线
  int32 is_enabled = 7; //是否启用
  int64 create_by = 8; //创建人ID
}

message AddSeckillActivityResp {
  string pong = 1;
}

// 删除秒杀活动
message DeleteSeckillActivityReq {
  repeated int64 ids = 1;
}

message DeleteSeckillActivityResp {
  string pong = 1;
}

// 更新秒杀活动
message UpdateSeckillActivityReq {
  int64 id = 1; //编号
  string name = 2; //活动名称
  string description = 3; //活动描述
  string start_time = 4; //开始时间
  string end_time = 5; //结束时间
  int32 status = 6; //活动状态：状态:0-上线,1-下线
  int32 is_enabled = 7; //是否启用
  int64 update_by = 10; //更新人ID
}

message UpdateSeckillActivityResp {
  string pong = 1;
}

// 更新秒杀活动状态
message UpdateSeckillActivityStatusReq {
  repeated int64 ids = 1; //编号
  int32 status = 6; //活动状态：状态:0-上线,1-下线
  int64 update_by = 10; //更新人ID
}

message UpdateSeckillActivityStatusResp {
  string pong = 1;
}

// 查询秒杀活动详情
message QuerySeckillActivityDetailReq {
  int64 id = 1;
}

message QuerySeckillActivityDetailResp {
  int64 id = 1; //编号
  string name = 2; //活动名称
  string description = 3; //活动描述
  string start_time = 4; //开始时间
  string end_time = 5; //结束时间
  int32 status = 6; //活动状态：状态:0-上线,1-下线
  int32 is_enabled = 7; //是否启用
  int64 create_by = 8; //创建人ID
  string create_time = 9; //创建时间
  int64 update_by = 10; //更新人ID
  string update_time = 11; //更新时间

}

// 分页查询秒杀活动列表
message QuerySeckillActivityListReq {
  string name = 1; //活动名称
  string start_time = 2; //开始时间
  string end_time = 3; //结束时间
  int32 status = 4; //活动状态：状态:0-上线,1-下线
  int32 is_enabled = 5; //是否启用
  int32 page_num = 6; //第几页
  int32 page_size = 7; //每页的数量
}

message SeckillActivityListData {
  int64 id = 1; //编号
  string name = 2; //活动名称
  string description = 3; //活动描述
  string start_time = 4; //开始时间
  string end_time = 5; //结束时间
  int32 status = 6; //活动状态：状态:0-上线,1-下线
  int32 is_enabled = 7; //是否启用
  int64 create_by = 8; //创建人ID
  string create_time = 9; //创建时间
  int64 update_by = 10; //更新人ID
  string update_time = 11; //更新时间

}

message QuerySeckillActivityListResp {
  int64 total = 1;
  repeated  SeckillActivityListData list = 2;
}

message QuerySeckillActivityListByDateReq {
  string currentDate = 1;
}

message QueryFlashPromotionListByDateResp {
  repeated  SeckillActivityListData list = 1;
}

// 秒杀活动
service SeckillActivityService {
  // 添加秒杀活动
  rpc AddSeckillActivity(AddSeckillActivityReq) returns (AddSeckillActivityResp){}
  // 删除秒杀活动
  rpc DeleteSeckillActivity(DeleteSeckillActivityReq) returns (DeleteSeckillActivityResp){}
  // 更新秒杀活动
  rpc UpdateSeckillActivity(UpdateSeckillActivityReq) returns (UpdateSeckillActivityResp){}
  // 更新秒杀活动状态
  rpc UpdateSeckillActivityStatus(UpdateSeckillActivityStatusReq) returns (UpdateSeckillActivityStatusResp){}
  // 查询秒杀活动详情
  rpc QuerySeckillActivityDetail(QuerySeckillActivityDetailReq) returns (QuerySeckillActivityDetailResp){}
  // 查询秒杀活动列表
  rpc QuerySeckillActivityList(QuerySeckillActivityListReq) returns (QuerySeckillActivityListResp){}

  //查询当前时间是否有秒杀活动
  rpc QuerySeckillActivityListByDate(QuerySeckillActivityListByDateReq) returns(QueryFlashPromotionListByDateResp);

}


// 添加秒杀商品
message AddSeckillProductReq {
  repeated AddSeckillProductData data= 1;

}

message AddSeckillProductData {
  int64 id = 1; //ID
  int64 activity_id = 2; //活动ID
  int64 session_id = 3; //秒杀场次ID
  int64 sku_id = 4; //商品SKU ID
  float seckill_price = 5; //秒杀价格
  int32 seckill_stock = 6; //秒杀库存
  int32 stock_locked = 7; //锁定库存
  int32 per_limit = 8; //每人限购数量
  int32 sort = 9; //排序
  int32 status = 10; //状态：0-未上架，1-已上架
  int64 create_by = 11; //创建人ID
  string sku_name = 12; //商品名称
}

message AddSeckillProductResp {
  string pong = 1;
}

// 删除秒杀商品
message DeleteSeckillProductReq {
  repeated int64 ids = 1;
}

message DeleteSeckillProductResp {
  string pong = 1;
}

// 更新秒杀商品
message UpdateSeckillProductReq {
  int64 id = 1; //ID
  int64 activity_id = 2; //活动ID
  int64 session_id = 3; //秒杀场次ID
  int64 sku_id = 4; //商品SKU ID
  float seckill_price = 5; //秒杀价格
  int32 seckill_stock = 6; //秒杀库存
  int32 stock_locked = 7; //锁定库存
  int32 per_limit = 8; //每人限购数量
  int32 sort = 9; //排序
  int32 status = 10; //状态：0-未上架，1-已上架
  int64 update_by = 13; //更新人ID
  string sku_name = 14; //商品名称
}

message UpdateSeckillProductResp {
  string pong = 1;
}

// 更新秒杀商品状态
message UpdateSeckillProductStatusReq {
  repeated int64 ids = 1; //ID
  int32 status = 10; //状态：0-未上架，1-已上架
  int64 update_by = 13; //更新人ID
}

message UpdateSeckillProductStatusResp {
  string pong = 1;
}

// 查询秒杀商品详情
message QuerySeckillProductDetailReq {
    int64 id = 1;
}

message QuerySeckillProductDetailResp {
  int64 id = 1; //ID
  int64 activity_id = 2; //活动ID
  int64 session_id = 3; //秒杀场次ID
  int64 sku_id = 4; //商品SKU ID
  float seckill_price = 5; //秒杀价格
  int32 seckill_stock = 6; //秒杀库存
  int32 stock_locked = 7; //锁定库存
  int32 per_limit = 8; //每人限购数量
  int32 sort = 9; //排序
  int32 status = 10; //状态：0-未上架，1-已上架
  int64 create_by = 11; //创建人ID
  string create_time = 12; //创建时间
  int64 update_by = 13; //更新人ID
  string update_time = 14; //更新时间
  string sku_name = 15; //商品名称

}

// 分页查询秒杀商品列表
message QuerySeckillProductListReq {
  int64 activity_id = 1; //活动ID
  int64 session_id = 2; //秒杀场次ID
  int32 status = 8; //状态：0-未上架，1-已上架
  int32 page_num = 10; //第几页
  int32 page_size = 11; //每页的数量
}

message SeckillProductListData {
  int64 id = 1; //ID
  int64 activity_id = 2; //活动ID
  int64 session_id = 3; //秒杀场次ID
  int64 sku_id = 4; //商品SKU ID
  float seckill_price = 5; //秒杀价格
  int32 seckill_stock = 6; //秒杀库存
  int32 stock_locked = 7; //锁定库存
  int32 per_limit = 8; //每人限购数量
  int32 sort = 9; //排序
  int32 status = 10; //状态：0-未上架，1-已上架
  int64 create_by = 11; //创建人ID
  string create_time = 12; //创建时间
  int64 update_by = 13; //更新人ID
  string update_time = 14; //更新时间
  string sku_name = 15; //商品名称
}

message QuerySeckillProductListResp {
  int64 total = 1;
  repeated  SeckillProductListData list = 2;
}

// 查询秒杀商品详情
message QuerySeckillProductBySkuIdReq {
  int64 sku_id = 1;
}
// 秒杀商品
service SeckillProductService {
  // 添加秒杀商品
  rpc AddSeckillProduct(AddSeckillProductReq) returns (AddSeckillProductResp){}
  // 删除秒杀商品
  rpc DeleteSeckillProduct(DeleteSeckillProductReq) returns (DeleteSeckillProductResp){}
  // 更新秒杀商品
  rpc UpdateSeckillProduct(UpdateSeckillProductReq) returns (UpdateSeckillProductResp ){}
  // 更新秒杀商品状态
  rpc UpdateSeckillProductStatus(UpdateSeckillProductStatusReq) returns (UpdateSeckillProductStatusResp ){}
  // 查询秒杀商品详情
   rpc QuerySeckillProductDetail(QuerySeckillProductDetailReq) returns (QuerySeckillProductDetailResp){}
  // 查询秒杀商品列表
  rpc QuerySeckillProductList(QuerySeckillProductListReq) returns (QuerySeckillProductListResp){}

  // 查询秒杀商品详情(app)
  rpc QuerySeckillProductBySkuId(QuerySeckillProductBySkuIdReq) returns (QuerySeckillProductDetailResp){}
}


// 添加秒杀预约
message AddSeckillReservationReq {
  int64 id = 1; //ID
  int64 user_id = 2; //用户ID
  int64 activity_id = 3; //活动ID
  int64 product_id = 4; //秒杀商品ID
  int32 status = 5; //状态：0-已预约，1-已参与，2-已取消
}

message AddSeckillReservationResp {
  string pong = 1;
}

// 删除秒杀预约
message DeleteSeckillReservationReq {
  repeated int64 ids = 1;
}

message DeleteSeckillReservationResp {
  string pong = 1;
}

// 更新秒杀预约
message UpdateSeckillReservationReq {
  int64 id = 1; //ID
  int64 user_id = 2; //用户ID
  int64 activity_id = 3; //活动ID
  int64 product_id = 4; //秒杀商品ID
  int32 status = 5; //状态：0-已预约，1-已参与，2-已取消
}

message UpdateSeckillReservationResp {
  string pong = 1;
}

// 更新秒杀预约状态
message UpdateSeckillReservationStatusReq {
  repeated int64 ids = 1; //ID
  int32 status = 5; //状态：0-已预约，1-已参与，2-已取消
}

message UpdateSeckillReservationStatusResp {
  string pong = 1;
}

// 查询秒杀预约详情
message QuerySeckillReservationDetailReq {
    int64 id = 1;
}

message QuerySeckillReservationDetailResp {
  int64 id = 1; //ID
  int64 user_id = 2; //用户ID
  int64 activity_id = 3; //活动ID
  int64 product_id = 4; //秒杀商品ID
  int32 status = 5; //状态：0-已预约，1-已参与，2-已取消
  string create_time = 6; //
  string update_time = 7; //

}

// 分页查询秒杀预约列表
message QuerySeckillReservationListReq {
  int64 user_id = 1; //用户ID
  int64 activity_id = 2; //活动ID
  int64 product_id = 3; //秒杀商品ID
  int32 status = 4; //状态：0-已预约，1-已参与，2-已取消
  int32 page_num = 5; //第几页
  int32 page_size = 7; //每页的数量
}

message SeckillReservationListData {
  int64 id = 1; //ID
  int64 user_id = 2; //用户ID
  int64 activity_id = 3; //活动ID
  int64 product_id = 4; //秒杀商品ID
  int32 status = 5; //状态：0-已预约，1-已参与，2-已取消
  string create_time = 6; //
  string update_time = 7; //

}

message QuerySeckillReservationListResp {
  int64 total = 1;
  repeated  SeckillReservationListData list = 2;
}

// 秒杀预约
service SeckillReservationService {
  // 添加秒杀预约
  rpc AddSeckillReservation(AddSeckillReservationReq) returns (AddSeckillReservationResp){}
  // 删除秒杀预约
  rpc DeleteSeckillReservation(DeleteSeckillReservationReq) returns (DeleteSeckillReservationResp){}
  // 更新秒杀预约
  rpc UpdateSeckillReservation(UpdateSeckillReservationReq) returns (UpdateSeckillReservationResp ){}
  // 更新秒杀预约状态
  rpc UpdateSeckillReservationStatus(UpdateSeckillReservationStatusReq) returns (UpdateSeckillReservationStatusResp ){}
  // 查询秒杀预约详情
   rpc QuerySeckillReservationDetail(QuerySeckillReservationDetailReq) returns (QuerySeckillReservationDetailResp){}
  // 查询秒杀预约列表
  rpc QuerySeckillReservationList(QuerySeckillReservationListReq) returns (QuerySeckillReservationListResp){}


}


// 添加秒杀场次
message AddSeckillSessionReq {
  int64 id = 1; //秒杀场次ID
  string name = 2; //场次名称
  string start_time = 3; //开始时间
  string end_time = 4; //结束时间
  int32 status = 5; //状态：0-禁用，1-启用
  int32 sort = 6; //排序
  int64 create_by = 7; //创建人ID
}

message AddSeckillSessionResp {
  string pong = 1;
}

// 删除秒杀场次
message DeleteSeckillSessionReq {
  repeated int64 ids = 1;
}

message DeleteSeckillSessionResp {
  string pong = 1;
}

// 更新秒杀场次
message UpdateSeckillSessionReq {
  int64 id = 1; //秒杀场次ID
  string name = 2; //场次名称
  string start_time = 3; //开始时间
  string end_time = 4; //结束时间
  int32 status = 5; //状态：0-禁用，1-启用
  int32 sort = 6; //排序
  int64 update_by = 9; //更新人ID
}

message UpdateSeckillSessionResp {
  string pong = 1;
}

// 更新秒杀场次状态
message UpdateSeckillSessionStatusReq {
  repeated int64 ids = 1; //秒杀场次ID
  int32 status = 5; //状态：0-禁用，1-启用
  int64 update_by = 9; //更新人ID
}

message UpdateSeckillSessionStatusResp {
  string pong = 1;
}

// 查询秒杀场次详情
message QuerySeckillSessionDetailReq {
    int64 id = 1;
}

message QuerySeckillSessionDetailResp {
  int64 id = 1; //秒杀场次ID
  string name = 2; //场次名称
  string start_time = 3; //开始时间
  string end_time = 4; //结束时间
  int32 status = 5; //状态：0-禁用，1-启用
  int32 sort = 6; //排序
  int64 create_by = 7; //创建人ID
  string create_time = 8; //创建时间
  int64 update_by = 9; //更新人ID
  string update_time = 10; //更新时间
  int32 is_deleted = 11; //是否删除

}

// 分页查询秒杀场次列表
message QuerySeckillSessionListReq {
  string name = 1; //场次名称
  string start_time = 2; //开始时间
  string end_time = 3; //结束时间
  int32 status = 4; //状态：0-禁用，1-启用
  int32 page_num = 5; //第几页
  int32 page_size = 6; //每页的数量
}

message SeckillSessionListData {
  int64 id = 1; //秒杀场次ID
  string name = 2; //场次名称
  string start_time = 3; //开始时间
  string end_time = 4; //结束时间
  int32 status = 5; //状态：0-禁用，1-启用
  int32 sort = 6; //排序
  int64 create_by = 7; //创建人ID
  string create_time = 8; //创建时间
  int64 update_by = 9; //更新人ID
  string update_time = 10; //更新时间

}

message QuerySeckillSessionListResp {
  int64 total = 1;
  repeated  SeckillSessionListData list = 2;
}

message QuerySeckillSessionListByTimeReq {
  string currentTIme = 1;
}

message QuerySeckillSessionListByTimeResp {
  repeated  SeckillSessionListData list = 1;
}

// 秒杀场次
service SeckillSessionService {
  // 添加秒杀场次
  rpc AddSeckillSession(AddSeckillSessionReq) returns (AddSeckillSessionResp){}
  // 删除秒杀场次
  rpc DeleteSeckillSession(DeleteSeckillSessionReq) returns (DeleteSeckillSessionResp){}
  // 更新秒杀场次
  rpc UpdateSeckillSession(UpdateSeckillSessionReq) returns (UpdateSeckillSessionResp ){}
  // 更新秒杀场次状态
  rpc UpdateSeckillSessionStatus(UpdateSeckillSessionStatusReq) returns (UpdateSeckillSessionStatusResp ){}
  // 查询秒杀场次详情
   rpc QuerySeckillSessionDetail(QuerySeckillSessionDetailReq) returns (QuerySeckillSessionDetailResp){}
  // 查询秒杀场次列表
  rpc QuerySeckillSessionList(QuerySeckillSessionListReq) returns (QuerySeckillSessionListResp){}

  //根据时间查询限时购场次
  rpc QuerySeckillSessionListByTime(QuerySeckillSessionListByTimeReq) returns(QuerySeckillSessionListByTimeResp);

}

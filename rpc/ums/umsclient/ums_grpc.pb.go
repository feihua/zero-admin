// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.3
// source: ums.proto

package umsclient

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Ums_MemberAdd_FullMethodName                           = "/umsclient.Ums/MemberAdd"
	Ums_MemberLogin_FullMethodName                         = "/umsclient.Ums/MemberLogin"
	Ums_MemberList_FullMethodName                          = "/umsclient.Ums/MemberList"
	Ums_MemberUpdate_FullMethodName                        = "/umsclient.Ums/MemberUpdate"
	Ums_MemberDelete_FullMethodName                        = "/umsclient.Ums/MemberDelete"
	Ums_Login_FullMethodName                               = "/umsclient.Ums/login"
	Ums_Register_FullMethodName                            = "/umsclient.Ums/register"
	Ums_MemberInfo_FullMethodName                          = "/umsclient.Ums/MemberInfo"
	Ums_MemberAuthByAuthKey_FullMethodName                 = "/umsclient.Ums/MemberAuthByAuthKey"
	Ums_MemberAuthByMemberId_FullMethodName                = "/umsclient.Ums/MemberAuthByMemberId"
	Ums_GenerateToken_FullMethodName                       = "/umsclient.Ums/GenerateToken"
	Ums_GrowthChangeHistoryAdd_FullMethodName              = "/umsclient.Ums/GrowthChangeHistoryAdd"
	Ums_GrowthChangeHistoryList_FullMethodName             = "/umsclient.Ums/GrowthChangeHistoryList"
	Ums_GrowthChangeHistoryUpdate_FullMethodName           = "/umsclient.Ums/GrowthChangeHistoryUpdate"
	Ums_GrowthChangeHistoryDelete_FullMethodName           = "/umsclient.Ums/GrowthChangeHistoryDelete"
	Ums_IntegrationChangeHistoryAdd_FullMethodName         = "/umsclient.Ums/IntegrationChangeHistoryAdd"
	Ums_IntegrationChangeHistoryList_FullMethodName        = "/umsclient.Ums/IntegrationChangeHistoryList"
	Ums_IntegrationChangeHistoryUpdate_FullMethodName      = "/umsclient.Ums/IntegrationChangeHistoryUpdate"
	Ums_IntegrationChangeHistoryDelete_FullMethodName      = "/umsclient.Ums/IntegrationChangeHistoryDelete"
	Ums_IntegrationConsumeSettingAdd_FullMethodName        = "/umsclient.Ums/IntegrationConsumeSettingAdd"
	Ums_IntegrationConsumeSettingList_FullMethodName       = "/umsclient.Ums/IntegrationConsumeSettingList"
	Ums_IntegrationConsumeSettingUpdate_FullMethodName     = "/umsclient.Ums/IntegrationConsumeSettingUpdate"
	Ums_IntegrationConsumeSettingDelete_FullMethodName     = "/umsclient.Ums/IntegrationConsumeSettingDelete"
	Ums_MemberLevelAdd_FullMethodName                      = "/umsclient.Ums/MemberLevelAdd"
	Ums_MemberLevelInfo_FullMethodName                     = "/umsclient.Ums/MemberLevelInfo"
	Ums_MemberLevelList_FullMethodName                     = "/umsclient.Ums/MemberLevelList"
	Ums_MemberLevelUpdate_FullMethodName                   = "/umsclient.Ums/MemberLevelUpdate"
	Ums_MemberLevelDelete_FullMethodName                   = "/umsclient.Ums/MemberLevelDelete"
	Ums_MemberLoginLogAdd_FullMethodName                   = "/umsclient.Ums/MemberLoginLogAdd"
	Ums_MemberLoginLogList_FullMethodName                  = "/umsclient.Ums/MemberLoginLogList"
	Ums_MemberLoginLogUpdate_FullMethodName                = "/umsclient.Ums/MemberLoginLogUpdate"
	Ums_MemberLoginLogDelete_FullMethodName                = "/umsclient.Ums/MemberLoginLogDelete"
	Ums_MemberMemberTagRelationAdd_FullMethodName          = "/umsclient.Ums/MemberMemberTagRelationAdd"
	Ums_MemberMemberTagRelationList_FullMethodName         = "/umsclient.Ums/MemberMemberTagRelationList"
	Ums_MemberMemberTagRelationUpdate_FullMethodName       = "/umsclient.Ums/MemberMemberTagRelationUpdate"
	Ums_MemberMemberTagRelationDelete_FullMethodName       = "/umsclient.Ums/MemberMemberTagRelationDelete"
	Ums_MemberPrepaidCardList_FullMethodName               = "/umsclient.Ums/MemberPrepaidCardList"
	Ums_MemberPrepaidCardLogAdd_FullMethodName             = "/umsclient.Ums/MemberPrepaidCardLogAdd"
	Ums_MemberPrepaidCardLogList_FullMethodName            = "/umsclient.Ums/MemberPrepaidCardLogList"
	Ums_MemberPrepaidCardRelationAdd_FullMethodName        = "/umsclient.Ums/MemberPrepaidCardRelationAdd"
	Ums_MemberPrepaidCardRelationList_FullMethodName       = "/umsclient.Ums/MemberPrepaidCardRelationList"
	Ums_MemberPrepaidCardRelationUpdate_FullMethodName     = "/umsclient.Ums/MemberPrepaidCardRelationUpdate"
	Ums_MemberPrepaidCardRelationDelete_FullMethodName     = "/umsclient.Ums/MemberPrepaidCardRelationDelete"
	Ums_MemberProductCategoryRelationAdd_FullMethodName    = "/umsclient.Ums/MemberProductCategoryRelationAdd"
	Ums_MemberProductCategoryRelationList_FullMethodName   = "/umsclient.Ums/MemberProductCategoryRelationList"
	Ums_MemberProductCategoryRelationUpdate_FullMethodName = "/umsclient.Ums/MemberProductCategoryRelationUpdate"
	Ums_MemberProductCategoryRelationDelete_FullMethodName = "/umsclient.Ums/MemberProductCategoryRelationDelete"
	Ums_MemberReceiveAddressAdd_FullMethodName             = "/umsclient.Ums/MemberReceiveAddressAdd"
	Ums_MemberReceiveAddressList_FullMethodName            = "/umsclient.Ums/MemberReceiveAddressList"
	Ums_MemberReceiveAddressUpdate_FullMethodName          = "/umsclient.Ums/MemberReceiveAddressUpdate"
	Ums_MemberReceiveAddressDelete_FullMethodName          = "/umsclient.Ums/MemberReceiveAddressDelete"
	Ums_MemberReceiveAddressQueryDetail_FullMethodName     = "/umsclient.Ums/MemberReceiveAddressQueryDetail"
	Ums_MemberRuleSettingAdd_FullMethodName                = "/umsclient.Ums/MemberRuleSettingAdd"
	Ums_MemberRuleSettingList_FullMethodName               = "/umsclient.Ums/MemberRuleSettingList"
	Ums_MemberRuleSettingUpdate_FullMethodName             = "/umsclient.Ums/MemberRuleSettingUpdate"
	Ums_MemberRuleSettingDelete_FullMethodName             = "/umsclient.Ums/MemberRuleSettingDelete"
	Ums_MemberStatisticsInfoAdd_FullMethodName             = "/umsclient.Ums/MemberStatisticsInfoAdd"
	Ums_MemberStatisticsInfoList_FullMethodName            = "/umsclient.Ums/MemberStatisticsInfoList"
	Ums_MemberStatisticsInfoUpdate_FullMethodName          = "/umsclient.Ums/MemberStatisticsInfoUpdate"
	Ums_MemberStatisticsInfoDelete_FullMethodName          = "/umsclient.Ums/MemberStatisticsInfoDelete"
	Ums_MemberTagAdd_FullMethodName                        = "/umsclient.Ums/MemberTagAdd"
	Ums_MemberTagList_FullMethodName                       = "/umsclient.Ums/MemberTagList"
	Ums_MemberTagUpdate_FullMethodName                     = "/umsclient.Ums/MemberTagUpdate"
	Ums_MemberTagDelete_FullMethodName                     = "/umsclient.Ums/MemberTagDelete"
	Ums_MemberTaskAdd_FullMethodName                       = "/umsclient.Ums/MemberTaskAdd"
	Ums_MemberTaskList_FullMethodName                      = "/umsclient.Ums/MemberTaskList"
	Ums_MemberTaskUpdate_FullMethodName                    = "/umsclient.Ums/MemberTaskUpdate"
	Ums_MemberTaskDelete_FullMethodName                    = "/umsclient.Ums/MemberTaskDelete"
)

// UmsClient is the client API for Ums service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UmsClient interface {
	MemberAdd(ctx context.Context, in *MemberAddReq, opts ...grpc.CallOption) (*MemberAddResp, error)
	MemberLogin(ctx context.Context, in *MemberLoginReq, opts ...grpc.CallOption) (*MemberLoginResp, error)
	MemberList(ctx context.Context, in *MemberListReq, opts ...grpc.CallOption) (*MemberListResp, error)
	MemberUpdate(ctx context.Context, in *MemberUpdateReq, opts ...grpc.CallOption) (*MemberUpdateResp, error)
	MemberDelete(ctx context.Context, in *MemberDeleteReq, opts ...grpc.CallOption) (*MemberDeleteResp, error)
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	MemberInfo(ctx context.Context, in *MemberInfoReq, opts ...grpc.CallOption) (*MemberInfoResp, error)
	MemberAuthByAuthKey(ctx context.Context, in *MemberAuthByAuthKeyReq, opts ...grpc.CallOption) (*MemberAuthByAuthKeyResp, error)
	MemberAuthByMemberId(ctx context.Context, in *MemberAuthByMemberIdReq, opts ...grpc.CallOption) (*MemberAuthyMemberIdResp, error)
	GenerateToken(ctx context.Context, in *GenerateTokenReq, opts ...grpc.CallOption) (*GenerateTokenResp, error)
	GrowthChangeHistoryAdd(ctx context.Context, in *GrowthChangeHistoryAddReq, opts ...grpc.CallOption) (*GrowthChangeHistoryAddResp, error)
	GrowthChangeHistoryList(ctx context.Context, in *GrowthChangeHistoryListReq, opts ...grpc.CallOption) (*GrowthChangeHistoryListResp, error)
	GrowthChangeHistoryUpdate(ctx context.Context, in *GrowthChangeHistoryUpdateReq, opts ...grpc.CallOption) (*GrowthChangeHistoryUpdateResp, error)
	GrowthChangeHistoryDelete(ctx context.Context, in *GrowthChangeHistoryDeleteReq, opts ...grpc.CallOption) (*GrowthChangeHistoryDeleteResp, error)
	IntegrationChangeHistoryAdd(ctx context.Context, in *IntegrationChangeHistoryAddReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryAddResp, error)
	IntegrationChangeHistoryList(ctx context.Context, in *IntegrationChangeHistoryListReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryListResp, error)
	IntegrationChangeHistoryUpdate(ctx context.Context, in *IntegrationChangeHistoryUpdateReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryUpdateResp, error)
	IntegrationChangeHistoryDelete(ctx context.Context, in *IntegrationChangeHistoryDeleteReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryDeleteResp, error)
	IntegrationConsumeSettingAdd(ctx context.Context, in *IntegrationConsumeSettingAddReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingAddResp, error)
	IntegrationConsumeSettingList(ctx context.Context, in *IntegrationConsumeSettingListReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingListResp, error)
	IntegrationConsumeSettingUpdate(ctx context.Context, in *IntegrationConsumeSettingUpdateReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingUpdateResp, error)
	IntegrationConsumeSettingDelete(ctx context.Context, in *IntegrationConsumeSettingDeleteReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingDeleteResp, error)
	MemberLevelAdd(ctx context.Context, in *MemberLevelAddReq, opts ...grpc.CallOption) (*MemberLevelAddResp, error)
	MemberLevelInfo(ctx context.Context, in *MemberLevelInfoReq, opts ...grpc.CallOption) (*MemberLevelInfoResp, error)
	MemberLevelList(ctx context.Context, in *MemberLevelListReq, opts ...grpc.CallOption) (*MemberLevelListResp, error)
	MemberLevelUpdate(ctx context.Context, in *MemberLevelUpdateReq, opts ...grpc.CallOption) (*MemberLevelUpdateResp, error)
	MemberLevelDelete(ctx context.Context, in *MemberLevelDeleteReq, opts ...grpc.CallOption) (*MemberLevelDeleteResp, error)
	MemberLoginLogAdd(ctx context.Context, in *MemberLoginLogAddReq, opts ...grpc.CallOption) (*MemberLoginLogAddResp, error)
	MemberLoginLogList(ctx context.Context, in *MemberLoginLogListReq, opts ...grpc.CallOption) (*MemberLoginLogListResp, error)
	MemberLoginLogUpdate(ctx context.Context, in *MemberLoginLogUpdateReq, opts ...grpc.CallOption) (*MemberLoginLogUpdateResp, error)
	MemberLoginLogDelete(ctx context.Context, in *MemberLoginLogDeleteReq, opts ...grpc.CallOption) (*MemberLoginLogDeleteResp, error)
	MemberMemberTagRelationAdd(ctx context.Context, in *MemberMemberTagRelationAddReq, opts ...grpc.CallOption) (*MemberMemberTagRelationAddResp, error)
	MemberMemberTagRelationList(ctx context.Context, in *MemberMemberTagRelationListReq, opts ...grpc.CallOption) (*MemberMemberTagRelationListResp, error)
	MemberMemberTagRelationUpdate(ctx context.Context, in *MemberMemberTagRelationUpdateReq, opts ...grpc.CallOption) (*MemberMemberTagRelationUpdateResp, error)
	MemberMemberTagRelationDelete(ctx context.Context, in *MemberMemberTagRelationDeleteReq, opts ...grpc.CallOption) (*MemberMemberTagRelationDeleteResp, error)
	MemberPrepaidCardList(ctx context.Context, in *MemberPrepaidCardListReq, opts ...grpc.CallOption) (*MemberPrepaidCardListResp, error)
	MemberPrepaidCardLogAdd(ctx context.Context, in *MemberPrepaidCardLogAddReq, opts ...grpc.CallOption) (*MemberPrepaidCardLogAddResp, error)
	MemberPrepaidCardLogList(ctx context.Context, in *MemberPrepaidCardLogListReq, opts ...grpc.CallOption) (*MemberPrepaidCardLogListResp, error)
	MemberPrepaidCardRelationAdd(ctx context.Context, in *MemberPrepaidCardRelationAddReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationAddResp, error)
	MemberPrepaidCardRelationList(ctx context.Context, in *MemberPrepaidCardRelationListReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationListResp, error)
	MemberPrepaidCardRelationUpdate(ctx context.Context, in *MemberPrepaidCardRelationUpdateReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationUpdateResp, error)
	MemberPrepaidCardRelationDelete(ctx context.Context, in *MemberPrepaidCardRelationDeleteReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationDeleteResp, error)
	MemberProductCategoryRelationAdd(ctx context.Context, in *MemberProductCategoryRelationAddReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationAddResp, error)
	MemberProductCategoryRelationList(ctx context.Context, in *MemberProductCategoryRelationListReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationListResp, error)
	MemberProductCategoryRelationUpdate(ctx context.Context, in *MemberProductCategoryRelationUpdateReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationUpdateResp, error)
	MemberProductCategoryRelationDelete(ctx context.Context, in *MemberProductCategoryRelationDeleteReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationDeleteResp, error)
	MemberReceiveAddressAdd(ctx context.Context, in *MemberReceiveAddressAddReq, opts ...grpc.CallOption) (*MemberReceiveAddressAddResp, error)
	MemberReceiveAddressList(ctx context.Context, in *MemberReceiveAddressListReq, opts ...grpc.CallOption) (*MemberReceiveAddressListResp, error)
	MemberReceiveAddressUpdate(ctx context.Context, in *MemberReceiveAddressUpdateReq, opts ...grpc.CallOption) (*MemberReceiveAddressUpdateResp, error)
	MemberReceiveAddressDelete(ctx context.Context, in *MemberReceiveAddressDeleteReq, opts ...grpc.CallOption) (*MemberReceiveAddressDeleteResp, error)
	MemberReceiveAddressQueryDetail(ctx context.Context, in *MemberReceiveAddressQueryDetailReq, opts ...grpc.CallOption) (*MemberReceiveAddressQueryDetailResp, error)
	MemberRuleSettingAdd(ctx context.Context, in *MemberRuleSettingAddReq, opts ...grpc.CallOption) (*MemberRuleSettingAddResp, error)
	MemberRuleSettingList(ctx context.Context, in *MemberRuleSettingListReq, opts ...grpc.CallOption) (*MemberRuleSettingListResp, error)
	MemberRuleSettingUpdate(ctx context.Context, in *MemberRuleSettingUpdateReq, opts ...grpc.CallOption) (*MemberRuleSettingUpdateResp, error)
	MemberRuleSettingDelete(ctx context.Context, in *MemberRuleSettingDeleteReq, opts ...grpc.CallOption) (*MemberRuleSettingDeleteResp, error)
	MemberStatisticsInfoAdd(ctx context.Context, in *MemberStatisticsInfoAddReq, opts ...grpc.CallOption) (*MemberStatisticsInfoAddResp, error)
	MemberStatisticsInfoList(ctx context.Context, in *MemberStatisticsInfoListReq, opts ...grpc.CallOption) (*MemberStatisticsInfoListResp, error)
	MemberStatisticsInfoUpdate(ctx context.Context, in *MemberStatisticsInfoUpdateReq, opts ...grpc.CallOption) (*MemberStatisticsInfoUpdateResp, error)
	MemberStatisticsInfoDelete(ctx context.Context, in *MemberStatisticsInfoDeleteReq, opts ...grpc.CallOption) (*MemberStatisticsInfoDeleteResp, error)
	MemberTagAdd(ctx context.Context, in *MemberTagAddReq, opts ...grpc.CallOption) (*MemberTagAddResp, error)
	MemberTagList(ctx context.Context, in *MemberTagListReq, opts ...grpc.CallOption) (*MemberTagListResp, error)
	MemberTagUpdate(ctx context.Context, in *MemberTagUpdateReq, opts ...grpc.CallOption) (*MemberTagUpdateResp, error)
	MemberTagDelete(ctx context.Context, in *MemberTagDeleteReq, opts ...grpc.CallOption) (*MemberTagDeleteResp, error)
	MemberTaskAdd(ctx context.Context, in *MemberTaskAddReq, opts ...grpc.CallOption) (*MemberTaskAddResp, error)
	MemberTaskList(ctx context.Context, in *MemberTaskListReq, opts ...grpc.CallOption) (*MemberTaskListResp, error)
	MemberTaskUpdate(ctx context.Context, in *MemberTaskUpdateReq, opts ...grpc.CallOption) (*MemberTaskUpdateResp, error)
	MemberTaskDelete(ctx context.Context, in *MemberTaskDeleteReq, opts ...grpc.CallOption) (*MemberTaskDeleteResp, error)
}

type umsClient struct {
	cc grpc.ClientConnInterface
}

func NewUmsClient(cc grpc.ClientConnInterface) UmsClient {
	return &umsClient{cc}
}

func (c *umsClient) MemberAdd(ctx context.Context, in *MemberAddReq, opts ...grpc.CallOption) (*MemberAddResp, error) {
	out := new(MemberAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLogin(ctx context.Context, in *MemberLoginReq, opts ...grpc.CallOption) (*MemberLoginResp, error) {
	out := new(MemberLoginResp)
	err := c.cc.Invoke(ctx, Ums_MemberLogin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberList(ctx context.Context, in *MemberListReq, opts ...grpc.CallOption) (*MemberListResp, error) {
	out := new(MemberListResp)
	err := c.cc.Invoke(ctx, Ums_MemberList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberUpdate(ctx context.Context, in *MemberUpdateReq, opts ...grpc.CallOption) (*MemberUpdateResp, error) {
	out := new(MemberUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberDelete(ctx context.Context, in *MemberDeleteReq, opts ...grpc.CallOption) (*MemberDeleteResp, error) {
	out := new(MemberDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, Ums_Login_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	out := new(RegisterResp)
	err := c.cc.Invoke(ctx, Ums_Register_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberInfo(ctx context.Context, in *MemberInfoReq, opts ...grpc.CallOption) (*MemberInfoResp, error) {
	out := new(MemberInfoResp)
	err := c.cc.Invoke(ctx, Ums_MemberInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberAuthByAuthKey(ctx context.Context, in *MemberAuthByAuthKeyReq, opts ...grpc.CallOption) (*MemberAuthByAuthKeyResp, error) {
	out := new(MemberAuthByAuthKeyResp)
	err := c.cc.Invoke(ctx, Ums_MemberAuthByAuthKey_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberAuthByMemberId(ctx context.Context, in *MemberAuthByMemberIdReq, opts ...grpc.CallOption) (*MemberAuthyMemberIdResp, error) {
	out := new(MemberAuthyMemberIdResp)
	err := c.cc.Invoke(ctx, Ums_MemberAuthByMemberId_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) GenerateToken(ctx context.Context, in *GenerateTokenReq, opts ...grpc.CallOption) (*GenerateTokenResp, error) {
	out := new(GenerateTokenResp)
	err := c.cc.Invoke(ctx, Ums_GenerateToken_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) GrowthChangeHistoryAdd(ctx context.Context, in *GrowthChangeHistoryAddReq, opts ...grpc.CallOption) (*GrowthChangeHistoryAddResp, error) {
	out := new(GrowthChangeHistoryAddResp)
	err := c.cc.Invoke(ctx, Ums_GrowthChangeHistoryAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) GrowthChangeHistoryList(ctx context.Context, in *GrowthChangeHistoryListReq, opts ...grpc.CallOption) (*GrowthChangeHistoryListResp, error) {
	out := new(GrowthChangeHistoryListResp)
	err := c.cc.Invoke(ctx, Ums_GrowthChangeHistoryList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) GrowthChangeHistoryUpdate(ctx context.Context, in *GrowthChangeHistoryUpdateReq, opts ...grpc.CallOption) (*GrowthChangeHistoryUpdateResp, error) {
	out := new(GrowthChangeHistoryUpdateResp)
	err := c.cc.Invoke(ctx, Ums_GrowthChangeHistoryUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) GrowthChangeHistoryDelete(ctx context.Context, in *GrowthChangeHistoryDeleteReq, opts ...grpc.CallOption) (*GrowthChangeHistoryDeleteResp, error) {
	out := new(GrowthChangeHistoryDeleteResp)
	err := c.cc.Invoke(ctx, Ums_GrowthChangeHistoryDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationChangeHistoryAdd(ctx context.Context, in *IntegrationChangeHistoryAddReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryAddResp, error) {
	out := new(IntegrationChangeHistoryAddResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationChangeHistoryAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationChangeHistoryList(ctx context.Context, in *IntegrationChangeHistoryListReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryListResp, error) {
	out := new(IntegrationChangeHistoryListResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationChangeHistoryList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationChangeHistoryUpdate(ctx context.Context, in *IntegrationChangeHistoryUpdateReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryUpdateResp, error) {
	out := new(IntegrationChangeHistoryUpdateResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationChangeHistoryUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationChangeHistoryDelete(ctx context.Context, in *IntegrationChangeHistoryDeleteReq, opts ...grpc.CallOption) (*IntegrationChangeHistoryDeleteResp, error) {
	out := new(IntegrationChangeHistoryDeleteResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationChangeHistoryDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationConsumeSettingAdd(ctx context.Context, in *IntegrationConsumeSettingAddReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingAddResp, error) {
	out := new(IntegrationConsumeSettingAddResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationConsumeSettingAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationConsumeSettingList(ctx context.Context, in *IntegrationConsumeSettingListReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingListResp, error) {
	out := new(IntegrationConsumeSettingListResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationConsumeSettingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationConsumeSettingUpdate(ctx context.Context, in *IntegrationConsumeSettingUpdateReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingUpdateResp, error) {
	out := new(IntegrationConsumeSettingUpdateResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationConsumeSettingUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) IntegrationConsumeSettingDelete(ctx context.Context, in *IntegrationConsumeSettingDeleteReq, opts ...grpc.CallOption) (*IntegrationConsumeSettingDeleteResp, error) {
	out := new(IntegrationConsumeSettingDeleteResp)
	err := c.cc.Invoke(ctx, Ums_IntegrationConsumeSettingDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLevelAdd(ctx context.Context, in *MemberLevelAddReq, opts ...grpc.CallOption) (*MemberLevelAddResp, error) {
	out := new(MemberLevelAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberLevelAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLevelInfo(ctx context.Context, in *MemberLevelInfoReq, opts ...grpc.CallOption) (*MemberLevelInfoResp, error) {
	out := new(MemberLevelInfoResp)
	err := c.cc.Invoke(ctx, Ums_MemberLevelInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLevelList(ctx context.Context, in *MemberLevelListReq, opts ...grpc.CallOption) (*MemberLevelListResp, error) {
	out := new(MemberLevelListResp)
	err := c.cc.Invoke(ctx, Ums_MemberLevelList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLevelUpdate(ctx context.Context, in *MemberLevelUpdateReq, opts ...grpc.CallOption) (*MemberLevelUpdateResp, error) {
	out := new(MemberLevelUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberLevelUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLevelDelete(ctx context.Context, in *MemberLevelDeleteReq, opts ...grpc.CallOption) (*MemberLevelDeleteResp, error) {
	out := new(MemberLevelDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberLevelDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLoginLogAdd(ctx context.Context, in *MemberLoginLogAddReq, opts ...grpc.CallOption) (*MemberLoginLogAddResp, error) {
	out := new(MemberLoginLogAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberLoginLogAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLoginLogList(ctx context.Context, in *MemberLoginLogListReq, opts ...grpc.CallOption) (*MemberLoginLogListResp, error) {
	out := new(MemberLoginLogListResp)
	err := c.cc.Invoke(ctx, Ums_MemberLoginLogList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLoginLogUpdate(ctx context.Context, in *MemberLoginLogUpdateReq, opts ...grpc.CallOption) (*MemberLoginLogUpdateResp, error) {
	out := new(MemberLoginLogUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberLoginLogUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberLoginLogDelete(ctx context.Context, in *MemberLoginLogDeleteReq, opts ...grpc.CallOption) (*MemberLoginLogDeleteResp, error) {
	out := new(MemberLoginLogDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberLoginLogDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberMemberTagRelationAdd(ctx context.Context, in *MemberMemberTagRelationAddReq, opts ...grpc.CallOption) (*MemberMemberTagRelationAddResp, error) {
	out := new(MemberMemberTagRelationAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberMemberTagRelationAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberMemberTagRelationList(ctx context.Context, in *MemberMemberTagRelationListReq, opts ...grpc.CallOption) (*MemberMemberTagRelationListResp, error) {
	out := new(MemberMemberTagRelationListResp)
	err := c.cc.Invoke(ctx, Ums_MemberMemberTagRelationList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberMemberTagRelationUpdate(ctx context.Context, in *MemberMemberTagRelationUpdateReq, opts ...grpc.CallOption) (*MemberMemberTagRelationUpdateResp, error) {
	out := new(MemberMemberTagRelationUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberMemberTagRelationUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberMemberTagRelationDelete(ctx context.Context, in *MemberMemberTagRelationDeleteReq, opts ...grpc.CallOption) (*MemberMemberTagRelationDeleteResp, error) {
	out := new(MemberMemberTagRelationDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberMemberTagRelationDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardList(ctx context.Context, in *MemberPrepaidCardListReq, opts ...grpc.CallOption) (*MemberPrepaidCardListResp, error) {
	out := new(MemberPrepaidCardListResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardLogAdd(ctx context.Context, in *MemberPrepaidCardLogAddReq, opts ...grpc.CallOption) (*MemberPrepaidCardLogAddResp, error) {
	out := new(MemberPrepaidCardLogAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardLogAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardLogList(ctx context.Context, in *MemberPrepaidCardLogListReq, opts ...grpc.CallOption) (*MemberPrepaidCardLogListResp, error) {
	out := new(MemberPrepaidCardLogListResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardLogList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardRelationAdd(ctx context.Context, in *MemberPrepaidCardRelationAddReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationAddResp, error) {
	out := new(MemberPrepaidCardRelationAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardRelationAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardRelationList(ctx context.Context, in *MemberPrepaidCardRelationListReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationListResp, error) {
	out := new(MemberPrepaidCardRelationListResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardRelationList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardRelationUpdate(ctx context.Context, in *MemberPrepaidCardRelationUpdateReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationUpdateResp, error) {
	out := new(MemberPrepaidCardRelationUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardRelationUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberPrepaidCardRelationDelete(ctx context.Context, in *MemberPrepaidCardRelationDeleteReq, opts ...grpc.CallOption) (*MemberPrepaidCardRelationDeleteResp, error) {
	out := new(MemberPrepaidCardRelationDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberPrepaidCardRelationDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberProductCategoryRelationAdd(ctx context.Context, in *MemberProductCategoryRelationAddReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationAddResp, error) {
	out := new(MemberProductCategoryRelationAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberProductCategoryRelationAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberProductCategoryRelationList(ctx context.Context, in *MemberProductCategoryRelationListReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationListResp, error) {
	out := new(MemberProductCategoryRelationListResp)
	err := c.cc.Invoke(ctx, Ums_MemberProductCategoryRelationList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberProductCategoryRelationUpdate(ctx context.Context, in *MemberProductCategoryRelationUpdateReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationUpdateResp, error) {
	out := new(MemberProductCategoryRelationUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberProductCategoryRelationUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberProductCategoryRelationDelete(ctx context.Context, in *MemberProductCategoryRelationDeleteReq, opts ...grpc.CallOption) (*MemberProductCategoryRelationDeleteResp, error) {
	out := new(MemberProductCategoryRelationDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberProductCategoryRelationDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberReceiveAddressAdd(ctx context.Context, in *MemberReceiveAddressAddReq, opts ...grpc.CallOption) (*MemberReceiveAddressAddResp, error) {
	out := new(MemberReceiveAddressAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberReceiveAddressAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberReceiveAddressList(ctx context.Context, in *MemberReceiveAddressListReq, opts ...grpc.CallOption) (*MemberReceiveAddressListResp, error) {
	out := new(MemberReceiveAddressListResp)
	err := c.cc.Invoke(ctx, Ums_MemberReceiveAddressList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberReceiveAddressUpdate(ctx context.Context, in *MemberReceiveAddressUpdateReq, opts ...grpc.CallOption) (*MemberReceiveAddressUpdateResp, error) {
	out := new(MemberReceiveAddressUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberReceiveAddressUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberReceiveAddressDelete(ctx context.Context, in *MemberReceiveAddressDeleteReq, opts ...grpc.CallOption) (*MemberReceiveAddressDeleteResp, error) {
	out := new(MemberReceiveAddressDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberReceiveAddressDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberReceiveAddressQueryDetail(ctx context.Context, in *MemberReceiveAddressQueryDetailReq, opts ...grpc.CallOption) (*MemberReceiveAddressQueryDetailResp, error) {
	out := new(MemberReceiveAddressQueryDetailResp)
	err := c.cc.Invoke(ctx, Ums_MemberReceiveAddressQueryDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberRuleSettingAdd(ctx context.Context, in *MemberRuleSettingAddReq, opts ...grpc.CallOption) (*MemberRuleSettingAddResp, error) {
	out := new(MemberRuleSettingAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberRuleSettingAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberRuleSettingList(ctx context.Context, in *MemberRuleSettingListReq, opts ...grpc.CallOption) (*MemberRuleSettingListResp, error) {
	out := new(MemberRuleSettingListResp)
	err := c.cc.Invoke(ctx, Ums_MemberRuleSettingList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberRuleSettingUpdate(ctx context.Context, in *MemberRuleSettingUpdateReq, opts ...grpc.CallOption) (*MemberRuleSettingUpdateResp, error) {
	out := new(MemberRuleSettingUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberRuleSettingUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberRuleSettingDelete(ctx context.Context, in *MemberRuleSettingDeleteReq, opts ...grpc.CallOption) (*MemberRuleSettingDeleteResp, error) {
	out := new(MemberRuleSettingDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberRuleSettingDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberStatisticsInfoAdd(ctx context.Context, in *MemberStatisticsInfoAddReq, opts ...grpc.CallOption) (*MemberStatisticsInfoAddResp, error) {
	out := new(MemberStatisticsInfoAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberStatisticsInfoAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberStatisticsInfoList(ctx context.Context, in *MemberStatisticsInfoListReq, opts ...grpc.CallOption) (*MemberStatisticsInfoListResp, error) {
	out := new(MemberStatisticsInfoListResp)
	err := c.cc.Invoke(ctx, Ums_MemberStatisticsInfoList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberStatisticsInfoUpdate(ctx context.Context, in *MemberStatisticsInfoUpdateReq, opts ...grpc.CallOption) (*MemberStatisticsInfoUpdateResp, error) {
	out := new(MemberStatisticsInfoUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberStatisticsInfoUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberStatisticsInfoDelete(ctx context.Context, in *MemberStatisticsInfoDeleteReq, opts ...grpc.CallOption) (*MemberStatisticsInfoDeleteResp, error) {
	out := new(MemberStatisticsInfoDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberStatisticsInfoDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTagAdd(ctx context.Context, in *MemberTagAddReq, opts ...grpc.CallOption) (*MemberTagAddResp, error) {
	out := new(MemberTagAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberTagAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTagList(ctx context.Context, in *MemberTagListReq, opts ...grpc.CallOption) (*MemberTagListResp, error) {
	out := new(MemberTagListResp)
	err := c.cc.Invoke(ctx, Ums_MemberTagList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTagUpdate(ctx context.Context, in *MemberTagUpdateReq, opts ...grpc.CallOption) (*MemberTagUpdateResp, error) {
	out := new(MemberTagUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberTagUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTagDelete(ctx context.Context, in *MemberTagDeleteReq, opts ...grpc.CallOption) (*MemberTagDeleteResp, error) {
	out := new(MemberTagDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberTagDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTaskAdd(ctx context.Context, in *MemberTaskAddReq, opts ...grpc.CallOption) (*MemberTaskAddResp, error) {
	out := new(MemberTaskAddResp)
	err := c.cc.Invoke(ctx, Ums_MemberTaskAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTaskList(ctx context.Context, in *MemberTaskListReq, opts ...grpc.CallOption) (*MemberTaskListResp, error) {
	out := new(MemberTaskListResp)
	err := c.cc.Invoke(ctx, Ums_MemberTaskList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTaskUpdate(ctx context.Context, in *MemberTaskUpdateReq, opts ...grpc.CallOption) (*MemberTaskUpdateResp, error) {
	out := new(MemberTaskUpdateResp)
	err := c.cc.Invoke(ctx, Ums_MemberTaskUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umsClient) MemberTaskDelete(ctx context.Context, in *MemberTaskDeleteReq, opts ...grpc.CallOption) (*MemberTaskDeleteResp, error) {
	out := new(MemberTaskDeleteResp)
	err := c.cc.Invoke(ctx, Ums_MemberTaskDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UmsServer is the server API for Ums service.
// All implementations must embed UnimplementedUmsServer
// for forward compatibility
type UmsServer interface {
	MemberAdd(context.Context, *MemberAddReq) (*MemberAddResp, error)
	MemberLogin(context.Context, *MemberLoginReq) (*MemberLoginResp, error)
	MemberList(context.Context, *MemberListReq) (*MemberListResp, error)
	MemberUpdate(context.Context, *MemberUpdateReq) (*MemberUpdateResp, error)
	MemberDelete(context.Context, *MemberDeleteReq) (*MemberDeleteResp, error)
	Login(context.Context, *LoginReq) (*LoginResp, error)
	Register(context.Context, *RegisterReq) (*RegisterResp, error)
	MemberInfo(context.Context, *MemberInfoReq) (*MemberInfoResp, error)
	MemberAuthByAuthKey(context.Context, *MemberAuthByAuthKeyReq) (*MemberAuthByAuthKeyResp, error)
	MemberAuthByMemberId(context.Context, *MemberAuthByMemberIdReq) (*MemberAuthyMemberIdResp, error)
	GenerateToken(context.Context, *GenerateTokenReq) (*GenerateTokenResp, error)
	GrowthChangeHistoryAdd(context.Context, *GrowthChangeHistoryAddReq) (*GrowthChangeHistoryAddResp, error)
	GrowthChangeHistoryList(context.Context, *GrowthChangeHistoryListReq) (*GrowthChangeHistoryListResp, error)
	GrowthChangeHistoryUpdate(context.Context, *GrowthChangeHistoryUpdateReq) (*GrowthChangeHistoryUpdateResp, error)
	GrowthChangeHistoryDelete(context.Context, *GrowthChangeHistoryDeleteReq) (*GrowthChangeHistoryDeleteResp, error)
	IntegrationChangeHistoryAdd(context.Context, *IntegrationChangeHistoryAddReq) (*IntegrationChangeHistoryAddResp, error)
	IntegrationChangeHistoryList(context.Context, *IntegrationChangeHistoryListReq) (*IntegrationChangeHistoryListResp, error)
	IntegrationChangeHistoryUpdate(context.Context, *IntegrationChangeHistoryUpdateReq) (*IntegrationChangeHistoryUpdateResp, error)
	IntegrationChangeHistoryDelete(context.Context, *IntegrationChangeHistoryDeleteReq) (*IntegrationChangeHistoryDeleteResp, error)
	IntegrationConsumeSettingAdd(context.Context, *IntegrationConsumeSettingAddReq) (*IntegrationConsumeSettingAddResp, error)
	IntegrationConsumeSettingList(context.Context, *IntegrationConsumeSettingListReq) (*IntegrationConsumeSettingListResp, error)
	IntegrationConsumeSettingUpdate(context.Context, *IntegrationConsumeSettingUpdateReq) (*IntegrationConsumeSettingUpdateResp, error)
	IntegrationConsumeSettingDelete(context.Context, *IntegrationConsumeSettingDeleteReq) (*IntegrationConsumeSettingDeleteResp, error)
	MemberLevelAdd(context.Context, *MemberLevelAddReq) (*MemberLevelAddResp, error)
	MemberLevelInfo(context.Context, *MemberLevelInfoReq) (*MemberLevelInfoResp, error)
	MemberLevelList(context.Context, *MemberLevelListReq) (*MemberLevelListResp, error)
	MemberLevelUpdate(context.Context, *MemberLevelUpdateReq) (*MemberLevelUpdateResp, error)
	MemberLevelDelete(context.Context, *MemberLevelDeleteReq) (*MemberLevelDeleteResp, error)
	MemberLoginLogAdd(context.Context, *MemberLoginLogAddReq) (*MemberLoginLogAddResp, error)
	MemberLoginLogList(context.Context, *MemberLoginLogListReq) (*MemberLoginLogListResp, error)
	MemberLoginLogUpdate(context.Context, *MemberLoginLogUpdateReq) (*MemberLoginLogUpdateResp, error)
	MemberLoginLogDelete(context.Context, *MemberLoginLogDeleteReq) (*MemberLoginLogDeleteResp, error)
	MemberMemberTagRelationAdd(context.Context, *MemberMemberTagRelationAddReq) (*MemberMemberTagRelationAddResp, error)
	MemberMemberTagRelationList(context.Context, *MemberMemberTagRelationListReq) (*MemberMemberTagRelationListResp, error)
	MemberMemberTagRelationUpdate(context.Context, *MemberMemberTagRelationUpdateReq) (*MemberMemberTagRelationUpdateResp, error)
	MemberMemberTagRelationDelete(context.Context, *MemberMemberTagRelationDeleteReq) (*MemberMemberTagRelationDeleteResp, error)
	MemberPrepaidCardList(context.Context, *MemberPrepaidCardListReq) (*MemberPrepaidCardListResp, error)
	MemberPrepaidCardLogAdd(context.Context, *MemberPrepaidCardLogAddReq) (*MemberPrepaidCardLogAddResp, error)
	MemberPrepaidCardLogList(context.Context, *MemberPrepaidCardLogListReq) (*MemberPrepaidCardLogListResp, error)
	MemberPrepaidCardRelationAdd(context.Context, *MemberPrepaidCardRelationAddReq) (*MemberPrepaidCardRelationAddResp, error)
	MemberPrepaidCardRelationList(context.Context, *MemberPrepaidCardRelationListReq) (*MemberPrepaidCardRelationListResp, error)
	MemberPrepaidCardRelationUpdate(context.Context, *MemberPrepaidCardRelationUpdateReq) (*MemberPrepaidCardRelationUpdateResp, error)
	MemberPrepaidCardRelationDelete(context.Context, *MemberPrepaidCardRelationDeleteReq) (*MemberPrepaidCardRelationDeleteResp, error)
	MemberProductCategoryRelationAdd(context.Context, *MemberProductCategoryRelationAddReq) (*MemberProductCategoryRelationAddResp, error)
	MemberProductCategoryRelationList(context.Context, *MemberProductCategoryRelationListReq) (*MemberProductCategoryRelationListResp, error)
	MemberProductCategoryRelationUpdate(context.Context, *MemberProductCategoryRelationUpdateReq) (*MemberProductCategoryRelationUpdateResp, error)
	MemberProductCategoryRelationDelete(context.Context, *MemberProductCategoryRelationDeleteReq) (*MemberProductCategoryRelationDeleteResp, error)
	MemberReceiveAddressAdd(context.Context, *MemberReceiveAddressAddReq) (*MemberReceiveAddressAddResp, error)
	MemberReceiveAddressList(context.Context, *MemberReceiveAddressListReq) (*MemberReceiveAddressListResp, error)
	MemberReceiveAddressUpdate(context.Context, *MemberReceiveAddressUpdateReq) (*MemberReceiveAddressUpdateResp, error)
	MemberReceiveAddressDelete(context.Context, *MemberReceiveAddressDeleteReq) (*MemberReceiveAddressDeleteResp, error)
	MemberReceiveAddressQueryDetail(context.Context, *MemberReceiveAddressQueryDetailReq) (*MemberReceiveAddressQueryDetailResp, error)
	MemberRuleSettingAdd(context.Context, *MemberRuleSettingAddReq) (*MemberRuleSettingAddResp, error)
	MemberRuleSettingList(context.Context, *MemberRuleSettingListReq) (*MemberRuleSettingListResp, error)
	MemberRuleSettingUpdate(context.Context, *MemberRuleSettingUpdateReq) (*MemberRuleSettingUpdateResp, error)
	MemberRuleSettingDelete(context.Context, *MemberRuleSettingDeleteReq) (*MemberRuleSettingDeleteResp, error)
	MemberStatisticsInfoAdd(context.Context, *MemberStatisticsInfoAddReq) (*MemberStatisticsInfoAddResp, error)
	MemberStatisticsInfoList(context.Context, *MemberStatisticsInfoListReq) (*MemberStatisticsInfoListResp, error)
	MemberStatisticsInfoUpdate(context.Context, *MemberStatisticsInfoUpdateReq) (*MemberStatisticsInfoUpdateResp, error)
	MemberStatisticsInfoDelete(context.Context, *MemberStatisticsInfoDeleteReq) (*MemberStatisticsInfoDeleteResp, error)
	MemberTagAdd(context.Context, *MemberTagAddReq) (*MemberTagAddResp, error)
	MemberTagList(context.Context, *MemberTagListReq) (*MemberTagListResp, error)
	MemberTagUpdate(context.Context, *MemberTagUpdateReq) (*MemberTagUpdateResp, error)
	MemberTagDelete(context.Context, *MemberTagDeleteReq) (*MemberTagDeleteResp, error)
	MemberTaskAdd(context.Context, *MemberTaskAddReq) (*MemberTaskAddResp, error)
	MemberTaskList(context.Context, *MemberTaskListReq) (*MemberTaskListResp, error)
	MemberTaskUpdate(context.Context, *MemberTaskUpdateReq) (*MemberTaskUpdateResp, error)
	MemberTaskDelete(context.Context, *MemberTaskDeleteReq) (*MemberTaskDeleteResp, error)
	mustEmbedUnimplementedUmsServer()
}

// UnimplementedUmsServer must be embedded to have forward compatible implementations.
type UnimplementedUmsServer struct {
}

func (UnimplementedUmsServer) MemberAdd(context.Context, *MemberAddReq) (*MemberAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberAdd not implemented")
}
func (UnimplementedUmsServer) MemberLogin(context.Context, *MemberLoginReq) (*MemberLoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLogin not implemented")
}
func (UnimplementedUmsServer) MemberList(context.Context, *MemberListReq) (*MemberListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberList not implemented")
}
func (UnimplementedUmsServer) MemberUpdate(context.Context, *MemberUpdateReq) (*MemberUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberUpdate not implemented")
}
func (UnimplementedUmsServer) MemberDelete(context.Context, *MemberDeleteReq) (*MemberDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberDelete not implemented")
}
func (UnimplementedUmsServer) Login(context.Context, *LoginReq) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedUmsServer) Register(context.Context, *RegisterReq) (*RegisterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (UnimplementedUmsServer) MemberInfo(context.Context, *MemberInfoReq) (*MemberInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberInfo not implemented")
}
func (UnimplementedUmsServer) MemberAuthByAuthKey(context.Context, *MemberAuthByAuthKeyReq) (*MemberAuthByAuthKeyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberAuthByAuthKey not implemented")
}
func (UnimplementedUmsServer) MemberAuthByMemberId(context.Context, *MemberAuthByMemberIdReq) (*MemberAuthyMemberIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberAuthByMemberId not implemented")
}
func (UnimplementedUmsServer) GenerateToken(context.Context, *GenerateTokenReq) (*GenerateTokenResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateToken not implemented")
}
func (UnimplementedUmsServer) GrowthChangeHistoryAdd(context.Context, *GrowthChangeHistoryAddReq) (*GrowthChangeHistoryAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrowthChangeHistoryAdd not implemented")
}
func (UnimplementedUmsServer) GrowthChangeHistoryList(context.Context, *GrowthChangeHistoryListReq) (*GrowthChangeHistoryListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrowthChangeHistoryList not implemented")
}
func (UnimplementedUmsServer) GrowthChangeHistoryUpdate(context.Context, *GrowthChangeHistoryUpdateReq) (*GrowthChangeHistoryUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrowthChangeHistoryUpdate not implemented")
}
func (UnimplementedUmsServer) GrowthChangeHistoryDelete(context.Context, *GrowthChangeHistoryDeleteReq) (*GrowthChangeHistoryDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrowthChangeHistoryDelete not implemented")
}
func (UnimplementedUmsServer) IntegrationChangeHistoryAdd(context.Context, *IntegrationChangeHistoryAddReq) (*IntegrationChangeHistoryAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationChangeHistoryAdd not implemented")
}
func (UnimplementedUmsServer) IntegrationChangeHistoryList(context.Context, *IntegrationChangeHistoryListReq) (*IntegrationChangeHistoryListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationChangeHistoryList not implemented")
}
func (UnimplementedUmsServer) IntegrationChangeHistoryUpdate(context.Context, *IntegrationChangeHistoryUpdateReq) (*IntegrationChangeHistoryUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationChangeHistoryUpdate not implemented")
}
func (UnimplementedUmsServer) IntegrationChangeHistoryDelete(context.Context, *IntegrationChangeHistoryDeleteReq) (*IntegrationChangeHistoryDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationChangeHistoryDelete not implemented")
}
func (UnimplementedUmsServer) IntegrationConsumeSettingAdd(context.Context, *IntegrationConsumeSettingAddReq) (*IntegrationConsumeSettingAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationConsumeSettingAdd not implemented")
}
func (UnimplementedUmsServer) IntegrationConsumeSettingList(context.Context, *IntegrationConsumeSettingListReq) (*IntegrationConsumeSettingListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationConsumeSettingList not implemented")
}
func (UnimplementedUmsServer) IntegrationConsumeSettingUpdate(context.Context, *IntegrationConsumeSettingUpdateReq) (*IntegrationConsumeSettingUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationConsumeSettingUpdate not implemented")
}
func (UnimplementedUmsServer) IntegrationConsumeSettingDelete(context.Context, *IntegrationConsumeSettingDeleteReq) (*IntegrationConsumeSettingDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IntegrationConsumeSettingDelete not implemented")
}
func (UnimplementedUmsServer) MemberLevelAdd(context.Context, *MemberLevelAddReq) (*MemberLevelAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLevelAdd not implemented")
}
func (UnimplementedUmsServer) MemberLevelInfo(context.Context, *MemberLevelInfoReq) (*MemberLevelInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLevelInfo not implemented")
}
func (UnimplementedUmsServer) MemberLevelList(context.Context, *MemberLevelListReq) (*MemberLevelListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLevelList not implemented")
}
func (UnimplementedUmsServer) MemberLevelUpdate(context.Context, *MemberLevelUpdateReq) (*MemberLevelUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLevelUpdate not implemented")
}
func (UnimplementedUmsServer) MemberLevelDelete(context.Context, *MemberLevelDeleteReq) (*MemberLevelDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLevelDelete not implemented")
}
func (UnimplementedUmsServer) MemberLoginLogAdd(context.Context, *MemberLoginLogAddReq) (*MemberLoginLogAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLoginLogAdd not implemented")
}
func (UnimplementedUmsServer) MemberLoginLogList(context.Context, *MemberLoginLogListReq) (*MemberLoginLogListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLoginLogList not implemented")
}
func (UnimplementedUmsServer) MemberLoginLogUpdate(context.Context, *MemberLoginLogUpdateReq) (*MemberLoginLogUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLoginLogUpdate not implemented")
}
func (UnimplementedUmsServer) MemberLoginLogDelete(context.Context, *MemberLoginLogDeleteReq) (*MemberLoginLogDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberLoginLogDelete not implemented")
}
func (UnimplementedUmsServer) MemberMemberTagRelationAdd(context.Context, *MemberMemberTagRelationAddReq) (*MemberMemberTagRelationAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberMemberTagRelationAdd not implemented")
}
func (UnimplementedUmsServer) MemberMemberTagRelationList(context.Context, *MemberMemberTagRelationListReq) (*MemberMemberTagRelationListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberMemberTagRelationList not implemented")
}
func (UnimplementedUmsServer) MemberMemberTagRelationUpdate(context.Context, *MemberMemberTagRelationUpdateReq) (*MemberMemberTagRelationUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberMemberTagRelationUpdate not implemented")
}
func (UnimplementedUmsServer) MemberMemberTagRelationDelete(context.Context, *MemberMemberTagRelationDeleteReq) (*MemberMemberTagRelationDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberMemberTagRelationDelete not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardList(context.Context, *MemberPrepaidCardListReq) (*MemberPrepaidCardListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardList not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardLogAdd(context.Context, *MemberPrepaidCardLogAddReq) (*MemberPrepaidCardLogAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardLogAdd not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardLogList(context.Context, *MemberPrepaidCardLogListReq) (*MemberPrepaidCardLogListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardLogList not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardRelationAdd(context.Context, *MemberPrepaidCardRelationAddReq) (*MemberPrepaidCardRelationAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardRelationAdd not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardRelationList(context.Context, *MemberPrepaidCardRelationListReq) (*MemberPrepaidCardRelationListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardRelationList not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardRelationUpdate(context.Context, *MemberPrepaidCardRelationUpdateReq) (*MemberPrepaidCardRelationUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardRelationUpdate not implemented")
}
func (UnimplementedUmsServer) MemberPrepaidCardRelationDelete(context.Context, *MemberPrepaidCardRelationDeleteReq) (*MemberPrepaidCardRelationDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberPrepaidCardRelationDelete not implemented")
}
func (UnimplementedUmsServer) MemberProductCategoryRelationAdd(context.Context, *MemberProductCategoryRelationAddReq) (*MemberProductCategoryRelationAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberProductCategoryRelationAdd not implemented")
}
func (UnimplementedUmsServer) MemberProductCategoryRelationList(context.Context, *MemberProductCategoryRelationListReq) (*MemberProductCategoryRelationListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberProductCategoryRelationList not implemented")
}
func (UnimplementedUmsServer) MemberProductCategoryRelationUpdate(context.Context, *MemberProductCategoryRelationUpdateReq) (*MemberProductCategoryRelationUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberProductCategoryRelationUpdate not implemented")
}
func (UnimplementedUmsServer) MemberProductCategoryRelationDelete(context.Context, *MemberProductCategoryRelationDeleteReq) (*MemberProductCategoryRelationDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberProductCategoryRelationDelete not implemented")
}
func (UnimplementedUmsServer) MemberReceiveAddressAdd(context.Context, *MemberReceiveAddressAddReq) (*MemberReceiveAddressAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberReceiveAddressAdd not implemented")
}
func (UnimplementedUmsServer) MemberReceiveAddressList(context.Context, *MemberReceiveAddressListReq) (*MemberReceiveAddressListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberReceiveAddressList not implemented")
}
func (UnimplementedUmsServer) MemberReceiveAddressUpdate(context.Context, *MemberReceiveAddressUpdateReq) (*MemberReceiveAddressUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberReceiveAddressUpdate not implemented")
}
func (UnimplementedUmsServer) MemberReceiveAddressDelete(context.Context, *MemberReceiveAddressDeleteReq) (*MemberReceiveAddressDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberReceiveAddressDelete not implemented")
}
func (UnimplementedUmsServer) MemberReceiveAddressQueryDetail(context.Context, *MemberReceiveAddressQueryDetailReq) (*MemberReceiveAddressQueryDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberReceiveAddressQueryDetail not implemented")
}
func (UnimplementedUmsServer) MemberRuleSettingAdd(context.Context, *MemberRuleSettingAddReq) (*MemberRuleSettingAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberRuleSettingAdd not implemented")
}
func (UnimplementedUmsServer) MemberRuleSettingList(context.Context, *MemberRuleSettingListReq) (*MemberRuleSettingListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberRuleSettingList not implemented")
}
func (UnimplementedUmsServer) MemberRuleSettingUpdate(context.Context, *MemberRuleSettingUpdateReq) (*MemberRuleSettingUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberRuleSettingUpdate not implemented")
}
func (UnimplementedUmsServer) MemberRuleSettingDelete(context.Context, *MemberRuleSettingDeleteReq) (*MemberRuleSettingDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberRuleSettingDelete not implemented")
}
func (UnimplementedUmsServer) MemberStatisticsInfoAdd(context.Context, *MemberStatisticsInfoAddReq) (*MemberStatisticsInfoAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberStatisticsInfoAdd not implemented")
}
func (UnimplementedUmsServer) MemberStatisticsInfoList(context.Context, *MemberStatisticsInfoListReq) (*MemberStatisticsInfoListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberStatisticsInfoList not implemented")
}
func (UnimplementedUmsServer) MemberStatisticsInfoUpdate(context.Context, *MemberStatisticsInfoUpdateReq) (*MemberStatisticsInfoUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberStatisticsInfoUpdate not implemented")
}
func (UnimplementedUmsServer) MemberStatisticsInfoDelete(context.Context, *MemberStatisticsInfoDeleteReq) (*MemberStatisticsInfoDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberStatisticsInfoDelete not implemented")
}
func (UnimplementedUmsServer) MemberTagAdd(context.Context, *MemberTagAddReq) (*MemberTagAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTagAdd not implemented")
}
func (UnimplementedUmsServer) MemberTagList(context.Context, *MemberTagListReq) (*MemberTagListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTagList not implemented")
}
func (UnimplementedUmsServer) MemberTagUpdate(context.Context, *MemberTagUpdateReq) (*MemberTagUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTagUpdate not implemented")
}
func (UnimplementedUmsServer) MemberTagDelete(context.Context, *MemberTagDeleteReq) (*MemberTagDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTagDelete not implemented")
}
func (UnimplementedUmsServer) MemberTaskAdd(context.Context, *MemberTaskAddReq) (*MemberTaskAddResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTaskAdd not implemented")
}
func (UnimplementedUmsServer) MemberTaskList(context.Context, *MemberTaskListReq) (*MemberTaskListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTaskList not implemented")
}
func (UnimplementedUmsServer) MemberTaskUpdate(context.Context, *MemberTaskUpdateReq) (*MemberTaskUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTaskUpdate not implemented")
}
func (UnimplementedUmsServer) MemberTaskDelete(context.Context, *MemberTaskDeleteReq) (*MemberTaskDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberTaskDelete not implemented")
}
func (UnimplementedUmsServer) mustEmbedUnimplementedUmsServer() {}

// UnsafeUmsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UmsServer will
// result in compilation errors.
type UnsafeUmsServer interface {
	mustEmbedUnimplementedUmsServer()
}

func RegisterUmsServer(s grpc.ServiceRegistrar, srv UmsServer) {
	s.RegisterService(&Ums_ServiceDesc, srv)
}

func _Ums_MemberAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberAdd(ctx, req.(*MemberAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLogin(ctx, req.(*MemberLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberList(ctx, req.(*MemberListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberUpdate(ctx, req.(*MemberUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberDelete(ctx, req.(*MemberDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_Login_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_Register_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberInfo(ctx, req.(*MemberInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberAuthByAuthKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberAuthByAuthKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberAuthByAuthKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberAuthByAuthKey_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberAuthByAuthKey(ctx, req.(*MemberAuthByAuthKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberAuthByMemberId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberAuthByMemberIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberAuthByMemberId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberAuthByMemberId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberAuthByMemberId(ctx, req.(*MemberAuthByMemberIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_GenerateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).GenerateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_GenerateToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).GenerateToken(ctx, req.(*GenerateTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_GrowthChangeHistoryAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrowthChangeHistoryAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).GrowthChangeHistoryAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_GrowthChangeHistoryAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).GrowthChangeHistoryAdd(ctx, req.(*GrowthChangeHistoryAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_GrowthChangeHistoryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrowthChangeHistoryListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).GrowthChangeHistoryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_GrowthChangeHistoryList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).GrowthChangeHistoryList(ctx, req.(*GrowthChangeHistoryListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_GrowthChangeHistoryUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrowthChangeHistoryUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).GrowthChangeHistoryUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_GrowthChangeHistoryUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).GrowthChangeHistoryUpdate(ctx, req.(*GrowthChangeHistoryUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_GrowthChangeHistoryDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrowthChangeHistoryDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).GrowthChangeHistoryDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_GrowthChangeHistoryDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).GrowthChangeHistoryDelete(ctx, req.(*GrowthChangeHistoryDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationChangeHistoryAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationChangeHistoryAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationChangeHistoryAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationChangeHistoryAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationChangeHistoryAdd(ctx, req.(*IntegrationChangeHistoryAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationChangeHistoryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationChangeHistoryListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationChangeHistoryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationChangeHistoryList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationChangeHistoryList(ctx, req.(*IntegrationChangeHistoryListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationChangeHistoryUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationChangeHistoryUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationChangeHistoryUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationChangeHistoryUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationChangeHistoryUpdate(ctx, req.(*IntegrationChangeHistoryUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationChangeHistoryDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationChangeHistoryDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationChangeHistoryDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationChangeHistoryDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationChangeHistoryDelete(ctx, req.(*IntegrationChangeHistoryDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationConsumeSettingAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationConsumeSettingAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationConsumeSettingAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationConsumeSettingAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationConsumeSettingAdd(ctx, req.(*IntegrationConsumeSettingAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationConsumeSettingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationConsumeSettingListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationConsumeSettingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationConsumeSettingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationConsumeSettingList(ctx, req.(*IntegrationConsumeSettingListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationConsumeSettingUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationConsumeSettingUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationConsumeSettingUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationConsumeSettingUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationConsumeSettingUpdate(ctx, req.(*IntegrationConsumeSettingUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_IntegrationConsumeSettingDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegrationConsumeSettingDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).IntegrationConsumeSettingDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_IntegrationConsumeSettingDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).IntegrationConsumeSettingDelete(ctx, req.(*IntegrationConsumeSettingDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLevelAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLevelAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLevelAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLevelAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLevelAdd(ctx, req.(*MemberLevelAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLevelInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLevelInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLevelInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLevelInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLevelInfo(ctx, req.(*MemberLevelInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLevelList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLevelListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLevelList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLevelList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLevelList(ctx, req.(*MemberLevelListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLevelUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLevelUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLevelUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLevelUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLevelUpdate(ctx, req.(*MemberLevelUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLevelDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLevelDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLevelDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLevelDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLevelDelete(ctx, req.(*MemberLevelDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLoginLogAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLoginLogAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLoginLogAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLoginLogAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLoginLogAdd(ctx, req.(*MemberLoginLogAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLoginLogList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLoginLogListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLoginLogList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLoginLogList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLoginLogList(ctx, req.(*MemberLoginLogListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLoginLogUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLoginLogUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLoginLogUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLoginLogUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLoginLogUpdate(ctx, req.(*MemberLoginLogUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberLoginLogDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberLoginLogDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberLoginLogDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberLoginLogDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberLoginLogDelete(ctx, req.(*MemberLoginLogDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberMemberTagRelationAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberMemberTagRelationAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberMemberTagRelationAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberMemberTagRelationAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberMemberTagRelationAdd(ctx, req.(*MemberMemberTagRelationAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberMemberTagRelationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberMemberTagRelationListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberMemberTagRelationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberMemberTagRelationList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberMemberTagRelationList(ctx, req.(*MemberMemberTagRelationListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberMemberTagRelationUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberMemberTagRelationUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberMemberTagRelationUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberMemberTagRelationUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberMemberTagRelationUpdate(ctx, req.(*MemberMemberTagRelationUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberMemberTagRelationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberMemberTagRelationDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberMemberTagRelationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberMemberTagRelationDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberMemberTagRelationDelete(ctx, req.(*MemberMemberTagRelationDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardList(ctx, req.(*MemberPrepaidCardListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardLogAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardLogAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardLogAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardLogAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardLogAdd(ctx, req.(*MemberPrepaidCardLogAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardLogList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardLogListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardLogList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardLogList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardLogList(ctx, req.(*MemberPrepaidCardLogListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardRelationAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardRelationAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardRelationAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardRelationAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardRelationAdd(ctx, req.(*MemberPrepaidCardRelationAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardRelationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardRelationListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardRelationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardRelationList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardRelationList(ctx, req.(*MemberPrepaidCardRelationListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardRelationUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardRelationUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardRelationUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardRelationUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardRelationUpdate(ctx, req.(*MemberPrepaidCardRelationUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberPrepaidCardRelationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberPrepaidCardRelationDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberPrepaidCardRelationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberPrepaidCardRelationDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberPrepaidCardRelationDelete(ctx, req.(*MemberPrepaidCardRelationDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberProductCategoryRelationAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberProductCategoryRelationAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberProductCategoryRelationAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberProductCategoryRelationAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberProductCategoryRelationAdd(ctx, req.(*MemberProductCategoryRelationAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberProductCategoryRelationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberProductCategoryRelationListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberProductCategoryRelationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberProductCategoryRelationList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberProductCategoryRelationList(ctx, req.(*MemberProductCategoryRelationListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberProductCategoryRelationUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberProductCategoryRelationUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberProductCategoryRelationUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberProductCategoryRelationUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberProductCategoryRelationUpdate(ctx, req.(*MemberProductCategoryRelationUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberProductCategoryRelationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberProductCategoryRelationDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberProductCategoryRelationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberProductCategoryRelationDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberProductCategoryRelationDelete(ctx, req.(*MemberProductCategoryRelationDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberReceiveAddressAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberReceiveAddressAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberReceiveAddressAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberReceiveAddressAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberReceiveAddressAdd(ctx, req.(*MemberReceiveAddressAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberReceiveAddressList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberReceiveAddressListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberReceiveAddressList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberReceiveAddressList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberReceiveAddressList(ctx, req.(*MemberReceiveAddressListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberReceiveAddressUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberReceiveAddressUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberReceiveAddressUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberReceiveAddressUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberReceiveAddressUpdate(ctx, req.(*MemberReceiveAddressUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberReceiveAddressDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberReceiveAddressDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberReceiveAddressDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberReceiveAddressDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberReceiveAddressDelete(ctx, req.(*MemberReceiveAddressDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberReceiveAddressQueryDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberReceiveAddressQueryDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberReceiveAddressQueryDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberReceiveAddressQueryDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberReceiveAddressQueryDetail(ctx, req.(*MemberReceiveAddressQueryDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberRuleSettingAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberRuleSettingAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberRuleSettingAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberRuleSettingAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberRuleSettingAdd(ctx, req.(*MemberRuleSettingAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberRuleSettingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberRuleSettingListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberRuleSettingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberRuleSettingList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberRuleSettingList(ctx, req.(*MemberRuleSettingListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberRuleSettingUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberRuleSettingUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberRuleSettingUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberRuleSettingUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberRuleSettingUpdate(ctx, req.(*MemberRuleSettingUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberRuleSettingDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberRuleSettingDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberRuleSettingDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberRuleSettingDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberRuleSettingDelete(ctx, req.(*MemberRuleSettingDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberStatisticsInfoAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberStatisticsInfoAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberStatisticsInfoAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberStatisticsInfoAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberStatisticsInfoAdd(ctx, req.(*MemberStatisticsInfoAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberStatisticsInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberStatisticsInfoListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberStatisticsInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberStatisticsInfoList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberStatisticsInfoList(ctx, req.(*MemberStatisticsInfoListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberStatisticsInfoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberStatisticsInfoUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberStatisticsInfoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberStatisticsInfoUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberStatisticsInfoUpdate(ctx, req.(*MemberStatisticsInfoUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberStatisticsInfoDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberStatisticsInfoDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberStatisticsInfoDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberStatisticsInfoDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberStatisticsInfoDelete(ctx, req.(*MemberStatisticsInfoDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTagAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTagAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTagAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTagAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTagAdd(ctx, req.(*MemberTagAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTagList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTagListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTagList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTagList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTagList(ctx, req.(*MemberTagListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTagUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTagUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTagUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTagUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTagUpdate(ctx, req.(*MemberTagUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTagDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTagDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTagDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTagDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTagDelete(ctx, req.(*MemberTagDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTaskAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTaskAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTaskAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTaskAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTaskAdd(ctx, req.(*MemberTaskAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTaskList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTaskListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTaskList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTaskList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTaskList(ctx, req.(*MemberTaskListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTaskUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTaskUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTaskUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTaskUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTaskUpdate(ctx, req.(*MemberTaskUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ums_MemberTaskDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberTaskDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmsServer).MemberTaskDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Ums_MemberTaskDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmsServer).MemberTaskDelete(ctx, req.(*MemberTaskDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Ums_ServiceDesc is the grpc.ServiceDesc for Ums service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Ums_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "umsclient.Ums",
	HandlerType: (*UmsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MemberAdd",
			Handler:    _Ums_MemberAdd_Handler,
		},
		{
			MethodName: "MemberLogin",
			Handler:    _Ums_MemberLogin_Handler,
		},
		{
			MethodName: "MemberList",
			Handler:    _Ums_MemberList_Handler,
		},
		{
			MethodName: "MemberUpdate",
			Handler:    _Ums_MemberUpdate_Handler,
		},
		{
			MethodName: "MemberDelete",
			Handler:    _Ums_MemberDelete_Handler,
		},
		{
			MethodName: "login",
			Handler:    _Ums_Login_Handler,
		},
		{
			MethodName: "register",
			Handler:    _Ums_Register_Handler,
		},
		{
			MethodName: "MemberInfo",
			Handler:    _Ums_MemberInfo_Handler,
		},
		{
			MethodName: "MemberAuthByAuthKey",
			Handler:    _Ums_MemberAuthByAuthKey_Handler,
		},
		{
			MethodName: "MemberAuthByMemberId",
			Handler:    _Ums_MemberAuthByMemberId_Handler,
		},
		{
			MethodName: "GenerateToken",
			Handler:    _Ums_GenerateToken_Handler,
		},
		{
			MethodName: "GrowthChangeHistoryAdd",
			Handler:    _Ums_GrowthChangeHistoryAdd_Handler,
		},
		{
			MethodName: "GrowthChangeHistoryList",
			Handler:    _Ums_GrowthChangeHistoryList_Handler,
		},
		{
			MethodName: "GrowthChangeHistoryUpdate",
			Handler:    _Ums_GrowthChangeHistoryUpdate_Handler,
		},
		{
			MethodName: "GrowthChangeHistoryDelete",
			Handler:    _Ums_GrowthChangeHistoryDelete_Handler,
		},
		{
			MethodName: "IntegrationChangeHistoryAdd",
			Handler:    _Ums_IntegrationChangeHistoryAdd_Handler,
		},
		{
			MethodName: "IntegrationChangeHistoryList",
			Handler:    _Ums_IntegrationChangeHistoryList_Handler,
		},
		{
			MethodName: "IntegrationChangeHistoryUpdate",
			Handler:    _Ums_IntegrationChangeHistoryUpdate_Handler,
		},
		{
			MethodName: "IntegrationChangeHistoryDelete",
			Handler:    _Ums_IntegrationChangeHistoryDelete_Handler,
		},
		{
			MethodName: "IntegrationConsumeSettingAdd",
			Handler:    _Ums_IntegrationConsumeSettingAdd_Handler,
		},
		{
			MethodName: "IntegrationConsumeSettingList",
			Handler:    _Ums_IntegrationConsumeSettingList_Handler,
		},
		{
			MethodName: "IntegrationConsumeSettingUpdate",
			Handler:    _Ums_IntegrationConsumeSettingUpdate_Handler,
		},
		{
			MethodName: "IntegrationConsumeSettingDelete",
			Handler:    _Ums_IntegrationConsumeSettingDelete_Handler,
		},
		{
			MethodName: "MemberLevelAdd",
			Handler:    _Ums_MemberLevelAdd_Handler,
		},
		{
			MethodName: "MemberLevelInfo",
			Handler:    _Ums_MemberLevelInfo_Handler,
		},
		{
			MethodName: "MemberLevelList",
			Handler:    _Ums_MemberLevelList_Handler,
		},
		{
			MethodName: "MemberLevelUpdate",
			Handler:    _Ums_MemberLevelUpdate_Handler,
		},
		{
			MethodName: "MemberLevelDelete",
			Handler:    _Ums_MemberLevelDelete_Handler,
		},
		{
			MethodName: "MemberLoginLogAdd",
			Handler:    _Ums_MemberLoginLogAdd_Handler,
		},
		{
			MethodName: "MemberLoginLogList",
			Handler:    _Ums_MemberLoginLogList_Handler,
		},
		{
			MethodName: "MemberLoginLogUpdate",
			Handler:    _Ums_MemberLoginLogUpdate_Handler,
		},
		{
			MethodName: "MemberLoginLogDelete",
			Handler:    _Ums_MemberLoginLogDelete_Handler,
		},
		{
			MethodName: "MemberMemberTagRelationAdd",
			Handler:    _Ums_MemberMemberTagRelationAdd_Handler,
		},
		{
			MethodName: "MemberMemberTagRelationList",
			Handler:    _Ums_MemberMemberTagRelationList_Handler,
		},
		{
			MethodName: "MemberMemberTagRelationUpdate",
			Handler:    _Ums_MemberMemberTagRelationUpdate_Handler,
		},
		{
			MethodName: "MemberMemberTagRelationDelete",
			Handler:    _Ums_MemberMemberTagRelationDelete_Handler,
		},
		{
			MethodName: "MemberPrepaidCardList",
			Handler:    _Ums_MemberPrepaidCardList_Handler,
		},
		{
			MethodName: "MemberPrepaidCardLogAdd",
			Handler:    _Ums_MemberPrepaidCardLogAdd_Handler,
		},
		{
			MethodName: "MemberPrepaidCardLogList",
			Handler:    _Ums_MemberPrepaidCardLogList_Handler,
		},
		{
			MethodName: "MemberPrepaidCardRelationAdd",
			Handler:    _Ums_MemberPrepaidCardRelationAdd_Handler,
		},
		{
			MethodName: "MemberPrepaidCardRelationList",
			Handler:    _Ums_MemberPrepaidCardRelationList_Handler,
		},
		{
			MethodName: "MemberPrepaidCardRelationUpdate",
			Handler:    _Ums_MemberPrepaidCardRelationUpdate_Handler,
		},
		{
			MethodName: "MemberPrepaidCardRelationDelete",
			Handler:    _Ums_MemberPrepaidCardRelationDelete_Handler,
		},
		{
			MethodName: "MemberProductCategoryRelationAdd",
			Handler:    _Ums_MemberProductCategoryRelationAdd_Handler,
		},
		{
			MethodName: "MemberProductCategoryRelationList",
			Handler:    _Ums_MemberProductCategoryRelationList_Handler,
		},
		{
			MethodName: "MemberProductCategoryRelationUpdate",
			Handler:    _Ums_MemberProductCategoryRelationUpdate_Handler,
		},
		{
			MethodName: "MemberProductCategoryRelationDelete",
			Handler:    _Ums_MemberProductCategoryRelationDelete_Handler,
		},
		{
			MethodName: "MemberReceiveAddressAdd",
			Handler:    _Ums_MemberReceiveAddressAdd_Handler,
		},
		{
			MethodName: "MemberReceiveAddressList",
			Handler:    _Ums_MemberReceiveAddressList_Handler,
		},
		{
			MethodName: "MemberReceiveAddressUpdate",
			Handler:    _Ums_MemberReceiveAddressUpdate_Handler,
		},
		{
			MethodName: "MemberReceiveAddressDelete",
			Handler:    _Ums_MemberReceiveAddressDelete_Handler,
		},
		{
			MethodName: "MemberReceiveAddressQueryDetail",
			Handler:    _Ums_MemberReceiveAddressQueryDetail_Handler,
		},
		{
			MethodName: "MemberRuleSettingAdd",
			Handler:    _Ums_MemberRuleSettingAdd_Handler,
		},
		{
			MethodName: "MemberRuleSettingList",
			Handler:    _Ums_MemberRuleSettingList_Handler,
		},
		{
			MethodName: "MemberRuleSettingUpdate",
			Handler:    _Ums_MemberRuleSettingUpdate_Handler,
		},
		{
			MethodName: "MemberRuleSettingDelete",
			Handler:    _Ums_MemberRuleSettingDelete_Handler,
		},
		{
			MethodName: "MemberStatisticsInfoAdd",
			Handler:    _Ums_MemberStatisticsInfoAdd_Handler,
		},
		{
			MethodName: "MemberStatisticsInfoList",
			Handler:    _Ums_MemberStatisticsInfoList_Handler,
		},
		{
			MethodName: "MemberStatisticsInfoUpdate",
			Handler:    _Ums_MemberStatisticsInfoUpdate_Handler,
		},
		{
			MethodName: "MemberStatisticsInfoDelete",
			Handler:    _Ums_MemberStatisticsInfoDelete_Handler,
		},
		{
			MethodName: "MemberTagAdd",
			Handler:    _Ums_MemberTagAdd_Handler,
		},
		{
			MethodName: "MemberTagList",
			Handler:    _Ums_MemberTagList_Handler,
		},
		{
			MethodName: "MemberTagUpdate",
			Handler:    _Ums_MemberTagUpdate_Handler,
		},
		{
			MethodName: "MemberTagDelete",
			Handler:    _Ums_MemberTagDelete_Handler,
		},
		{
			MethodName: "MemberTaskAdd",
			Handler:    _Ums_MemberTaskAdd_Handler,
		},
		{
			MethodName: "MemberTaskList",
			Handler:    _Ums_MemberTaskList_Handler,
		},
		{
			MethodName: "MemberTaskUpdate",
			Handler:    _Ums_MemberTaskUpdate_Handler,
		},
		{
			MethodName: "MemberTaskDelete",
			Handler:    _Ums_MemberTaskDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ums.proto",
}

// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: ums.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/ums/internal/logic/memberbrandattentionservice"
	"github.com/feihua/zero-admin/rpc/ums/internal/svc"
	"github.com/feihua/zero-admin/rpc/ums/umsclient"
)

type MemberBrandAttentionServiceServer struct {
	svcCtx *svc.ServiceContext
	umsclient.UnimplementedMemberBrandAttentionServiceServer
}

func NewMemberBrandAttentionServiceServer(svcCtx *svc.ServiceContext) *MemberBrandAttentionServiceServer {
	return &MemberBrandAttentionServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加会员关注品牌
func (s *MemberBrandAttentionServiceServer) AddMemberBrandAttention(ctx context.Context, in *umsclient.AddMemberBrandAttentionReq) (*umsclient.AddMemberBrandAttentionResp, error) {
	l := memberbrandattentionservicelogic.NewAddMemberBrandAttentionLogic(ctx, s.svcCtx)
	return l.AddMemberBrandAttention(in)
}

// 取消品牌关注/清空当前用户品牌关注列表
func (s *MemberBrandAttentionServiceServer) DeleteMemberBrandAttention(ctx context.Context, in *umsclient.DeleteMemberBrandAttentionReq) (*umsclient.DeleteMemberBrandAttentionResp, error) {
	l := memberbrandattentionservicelogic.NewDeleteMemberBrandAttentionLogic(ctx, s.svcCtx)
	return l.DeleteMemberBrandAttention(in)
}

// 查询会员关注品牌详情
func (s *MemberBrandAttentionServiceServer) QueryMemberBrandAttentionDetail(ctx context.Context, in *umsclient.QueryMemberBrandAttentionDetailReq) (*umsclient.QueryMemberBrandAttentionDetailResp, error) {
	l := memberbrandattentionservicelogic.NewQueryMemberBrandAttentionDetailLogic(ctx, s.svcCtx)
	return l.QueryMemberBrandAttentionDetail(in)
}

// 查询会员关注品牌列表
func (s *MemberBrandAttentionServiceServer) QueryMemberBrandAttentionList(ctx context.Context, in *umsclient.QueryMemberBrandAttentionListReq) (*umsclient.QueryMemberBrandAttentionListResp, error) {
	l := memberbrandattentionservicelogic.NewQueryMemberBrandAttentionListLogic(ctx, s.svcCtx)
	return l.QueryMemberBrandAttentionList(in)
}

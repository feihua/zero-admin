// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: ums.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/ums/internal/logic/memberconsumesettingservice"
	"github.com/feihua/zero-admin/rpc/ums/internal/svc"
	"github.com/feihua/zero-admin/rpc/ums/umsclient"
)

type MemberConsumeSettingServiceServer struct {
	svcCtx *svc.ServiceContext
	umsclient.UnimplementedMemberConsumeSettingServiceServer
}

func NewMemberConsumeSettingServiceServer(svcCtx *svc.ServiceContext) *MemberConsumeSettingServiceServer {
	return &MemberConsumeSettingServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加积分消费设置
func (s *MemberConsumeSettingServiceServer) AddMemberConsumeSetting(ctx context.Context, in *umsclient.AddMemberConsumeSettingReq) (*umsclient.AddMemberConsumeSettingResp, error) {
	l := memberconsumesettingservicelogic.NewAddMemberConsumeSettingLogic(ctx, s.svcCtx)
	return l.AddMemberConsumeSetting(in)
}

// 删除积分消费设置
func (s *MemberConsumeSettingServiceServer) DeleteMemberConsumeSetting(ctx context.Context, in *umsclient.DeleteMemberConsumeSettingReq) (*umsclient.DeleteMemberConsumeSettingResp, error) {
	l := memberconsumesettingservicelogic.NewDeleteMemberConsumeSettingLogic(ctx, s.svcCtx)
	return l.DeleteMemberConsumeSetting(in)
}

// 更新积分消费设置
func (s *MemberConsumeSettingServiceServer) UpdateMemberConsumeSetting(ctx context.Context, in *umsclient.UpdateMemberConsumeSettingReq) (*umsclient.UpdateMemberConsumeSettingResp, error) {
	l := memberconsumesettingservicelogic.NewUpdateMemberConsumeSettingLogic(ctx, s.svcCtx)
	return l.UpdateMemberConsumeSetting(in)
}

// 更新积分消费设置状态
func (s *MemberConsumeSettingServiceServer) UpdateStatus(ctx context.Context, in *umsclient.UpdateStatusReq) (*umsclient.UpdateMemberConsumeSettingStatusResp, error) {
	l := memberconsumesettingservicelogic.NewUpdateStatusLogic(ctx, s.svcCtx)
	return l.UpdateStatus(in)
}

// 更新是否可以和优惠券同用
func (s *MemberConsumeSettingServiceServer) UpdateCouponStatus(ctx context.Context, in *umsclient.UpdateCouponStatusReq) (*umsclient.UpdateMemberConsumeSettingStatusResp, error) {
	l := memberconsumesettingservicelogic.NewUpdateCouponStatusLogic(ctx, s.svcCtx)
	return l.UpdateCouponStatus(in)
}

// 查询积分消费设置详情
func (s *MemberConsumeSettingServiceServer) QueryMemberConsumeSettingDetail(ctx context.Context, in *umsclient.QueryMemberConsumeSettingDetailReq) (*umsclient.QueryMemberConsumeSettingDetailResp, error) {
	l := memberconsumesettingservicelogic.NewQueryMemberConsumeSettingDetailLogic(ctx, s.svcCtx)
	return l.QueryMemberConsumeSettingDetail(in)
}

// 查询积分消费设置列表
func (s *MemberConsumeSettingServiceServer) QueryMemberConsumeSettingList(ctx context.Context, in *umsclient.QueryMemberConsumeSettingListReq) (*umsclient.QueryMemberConsumeSettingListResp, error) {
	l := memberconsumesettingservicelogic.NewQueryMemberConsumeSettingListLogic(ctx, s.svcCtx)
	return l.QueryMemberConsumeSettingList(in)
}

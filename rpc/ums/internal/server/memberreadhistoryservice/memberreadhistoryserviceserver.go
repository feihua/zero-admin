// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: ums.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/ums/internal/logic/memberreadhistoryservice"
	"github.com/feihua/zero-admin/rpc/ums/internal/svc"
	"github.com/feihua/zero-admin/rpc/ums/umsclient"
)

type MemberReadHistoryServiceServer struct {
	svcCtx *svc.ServiceContext
	umsclient.UnimplementedMemberReadHistoryServiceServer
}

func NewMemberReadHistoryServiceServer(svcCtx *svc.ServiceContext) *MemberReadHistoryServiceServer {
	return &MemberReadHistoryServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加用户商品浏览历史记录
func (s *MemberReadHistoryServiceServer) AddMemberReadHistory(ctx context.Context, in *umsclient.AddMemberReadHistoryReq) (*umsclient.AddMemberReadHistoryResp, error) {
	l := memberreadhistoryservicelogic.NewAddMemberReadHistoryLogic(ctx, s.svcCtx)
	return l.AddMemberReadHistory(in)
}

// 清空浏览记录/删除浏览记录
func (s *MemberReadHistoryServiceServer) DeleteMemberReadHistory(ctx context.Context, in *umsclient.DeleteMemberReadHistoryReq) (*umsclient.DeleteMemberReadHistoryResp, error) {
	l := memberreadhistoryservicelogic.NewDeleteMemberReadHistoryLogic(ctx, s.svcCtx)
	return l.DeleteMemberReadHistory(in)
}

// 查询用户商品浏览历史记录详情
func (s *MemberReadHistoryServiceServer) QueryMemberReadHistoryDetail(ctx context.Context, in *umsclient.QueryMemberReadHistoryDetailReq) (*umsclient.QueryMemberReadHistoryDetailResp, error) {
	l := memberreadhistoryservicelogic.NewQueryMemberReadHistoryDetailLogic(ctx, s.svcCtx)
	return l.QueryMemberReadHistoryDetail(in)
}

// 查询用户商品浏览历史记录列表
func (s *MemberReadHistoryServiceServer) QueryMemberReadHistoryList(ctx context.Context, in *umsclient.QueryMemberReadHistoryListReq) (*umsclient.QueryMemberReadHistoryListResp, error) {
	l := memberreadhistoryservicelogic.NewQueryMemberReadHistoryListLogic(ctx, s.svcCtx)
	return l.QueryMemberReadHistoryList(in)
}

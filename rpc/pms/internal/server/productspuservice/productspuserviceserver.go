// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/productspuservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type ProductSpuServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedProductSpuServiceServer
}

func NewProductSpuServiceServer(svcCtx *svc.ServiceContext) *ProductSpuServiceServer {
	return &ProductSpuServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加商品SPU
func (s *ProductSpuServiceServer) AddProductSpu(ctx context.Context, in *pmsclient.ProductSpuReq) (*pmsclient.ProductSpuResp, error) {
	l := productspuservicelogic.NewAddProductSpuLogic(ctx, s.svcCtx)
	return l.AddProductSpu(in)
}

// 删除商品SPU
func (s *ProductSpuServiceServer) DeleteProductSpu(ctx context.Context, in *pmsclient.DeleteProductSpuReq) (*pmsclient.DeleteProductSpuResp, error) {
	l := productspuservicelogic.NewDeleteProductSpuLogic(ctx, s.svcCtx)
	return l.DeleteProductSpu(in)
}

// 更新商品SPU
func (s *ProductSpuServiceServer) UpdateProductSpu(ctx context.Context, in *pmsclient.ProductSpuReq) (*pmsclient.ProductSpuResp, error) {
	l := productspuservicelogic.NewUpdateProductSpuLogic(ctx, s.svcCtx)
	return l.UpdateProductSpu(in)
}

// 查询商品SPU详情
func (s *ProductSpuServiceServer) QueryProductSpuDetail(ctx context.Context, in *pmsclient.QueryProductSpuDetailReq) (*pmsclient.QueryProductSpuDetailResp, error) {
	l := productspuservicelogic.NewQueryProductSpuDetailLogic(ctx, s.svcCtx)
	return l.QueryProductSpuDetail(in)
}

// 查询商品SPU列表
func (s *ProductSpuServiceServer) QueryProductSpuList(ctx context.Context, in *pmsclient.QueryProductSpuListReq) (*pmsclient.QueryProductSpuListResp, error) {
	l := productspuservicelogic.NewQueryProductSpuListLogic(ctx, s.svcCtx)
	return l.QueryProductSpuList(in)
}

// 修改审核状态
func (s *ProductSpuServiceServer) UpdateVerifyStatus(ctx context.Context, in *pmsclient.UpdateProductSpuStatusReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdateVerifyStatusLogic(ctx, s.svcCtx)
	return l.UpdateVerifyStatus(in)
}

// 上下架商品
func (s *ProductSpuServiceServer) UpdatePublishStatus(ctx context.Context, in *pmsclient.UpdateProductSpuStatusReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdatePublishStatusLogic(ctx, s.svcCtx)
	return l.UpdatePublishStatus(in)
}

// 推荐商品
func (s *ProductSpuServiceServer) UpdateRecommendStatus(ctx context.Context, in *pmsclient.UpdateProductSpuStatusReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdateRecommendStatusLogic(ctx, s.svcCtx)
	return l.UpdateRecommendStatus(in)
}

// 设为新品
func (s *ProductSpuServiceServer) UpdateNewStatus(ctx context.Context, in *pmsclient.UpdateProductSpuStatusReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdateNewStatusLogic(ctx, s.svcCtx)
	return l.UpdateNewStatus(in)
}

// 修改删除状态
func (s *ProductSpuServiceServer) UpdateDeleteStatus(ctx context.Context, in *pmsclient.UpdateProductSpuStatusReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdateDeleteStatusLogic(ctx, s.svcCtx)
	return l.UpdateDeleteStatus(in)
}

// 更新新品排序
func (s *ProductSpuServiceServer) UpdateNewStatusSort(ctx context.Context, in *pmsclient.UpdateProductSortReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdateNewStatusSortLogic(ctx, s.svcCtx)
	return l.UpdateNewStatusSort(in)
}

// 更新推荐排序
func (s *ProductSpuServiceServer) UpdateRecommendStatusSort(ctx context.Context, in *pmsclient.UpdateProductSortReq) (*pmsclient.UpdateProductSpuStatusResp, error) {
	l := productspuservicelogic.NewUpdateRecommendStatusSortLogic(ctx, s.svcCtx)
	return l.UpdateRecommendStatusSort(in)
}

// 根据id集合查询商品信息
func (s *ProductSpuServiceServer) QueryProductSpuListByIds(ctx context.Context, in *pmsclient.QueryProductSpuByIdsReq) (*pmsclient.QueryProductSpuListResp, error) {
	l := productspuservicelogic.NewQueryProductSpuListByIdsLogic(ctx, s.svcCtx)
	return l.QueryProductSpuListByIds(in)
}

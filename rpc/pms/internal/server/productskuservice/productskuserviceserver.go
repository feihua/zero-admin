// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/productskuservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type ProductSkuServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedProductSkuServiceServer
}

func NewProductSkuServiceServer(svcCtx *svc.ServiceContext) *ProductSkuServiceServer {
	return &ProductSkuServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加商品SKU
func (s *ProductSkuServiceServer) AddProductSku(ctx context.Context, in *pmsclient.AddProductSkuReq) (*pmsclient.AddProductSkuResp, error) {
	l := productskuservicelogic.NewAddProductSkuLogic(ctx, s.svcCtx)
	return l.AddProductSku(in)
}

// 删除商品SKU
func (s *ProductSkuServiceServer) DeleteProductSku(ctx context.Context, in *pmsclient.DeleteProductSkuReq) (*pmsclient.DeleteProductSkuResp, error) {
	l := productskuservicelogic.NewDeleteProductSkuLogic(ctx, s.svcCtx)
	return l.DeleteProductSku(in)
}

// 更新商品SKU
func (s *ProductSkuServiceServer) UpdateProductSku(ctx context.Context, in *pmsclient.UpdateProductSkuReq) (*pmsclient.UpdateProductSkuResp, error) {
	l := productskuservicelogic.NewUpdateProductSkuLogic(ctx, s.svcCtx)
	return l.UpdateProductSku(in)
}

// 查询商品SKU详情
func (s *ProductSkuServiceServer) QueryProductSkuDetail(ctx context.Context, in *pmsclient.QueryProductSkuDetailReq) (*pmsclient.QueryProductSkuDetailResp, error) {
	l := productskuservicelogic.NewQueryProductSkuDetailLogic(ctx, s.svcCtx)
	return l.QueryProductSkuDetail(in)
}

// 查询商品SKU列表
func (s *ProductSkuServiceServer) QueryProductSkuList(ctx context.Context, in *pmsclient.QueryProductSkuListReq) (*pmsclient.QueryProductSkuListResp, error) {
	l := productskuservicelogic.NewQueryProductSkuListLogic(ctx, s.svcCtx)
	return l.QueryProductSkuList(in)
}

// 取消订单的时候,释放库存
func (s *ProductSkuServiceServer) ReleaseSkuStockLock(ctx context.Context, in *pmsclient.UpdateSkuStockReq) (*pmsclient.UpdateSkuStockLockResp, error) {
	l := productskuservicelogic.NewReleaseSkuStockLockLogic(ctx, s.svcCtx)
	return l.ReleaseSkuStockLock(in)
}

// 下单的时候,锁定库存
func (s *ProductSkuServiceServer) LockSkuStockLock(ctx context.Context, in *pmsclient.UpdateSkuStockReq) (*pmsclient.UpdateSkuStockLockResp, error) {
	l := productskuservicelogic.NewLockSkuStockLockLogic(ctx, s.svcCtx)
	return l.LockSkuStockLock(in)
}

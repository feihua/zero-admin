// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/productcollectservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type ProductCollectServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedProductCollectServiceServer
}

func NewProductCollectServiceServer(svcCtx *svc.ServiceContext) *ProductCollectServiceServer {
	return &ProductCollectServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加收藏表
func (s *ProductCollectServiceServer) AddProductCollect(ctx context.Context, in *pmsclient.AddProductCollectReq) (*pmsclient.AddProductCollectResp, error) {
	l := productcollectservicelogic.NewAddProductCollectLogic(ctx, s.svcCtx)
	return l.AddProductCollect(in)
}

// 删除收藏表
func (s *ProductCollectServiceServer) DeleteProductCollect(ctx context.Context, in *pmsclient.DeleteProductCollectReq) (*pmsclient.DeleteProductCollectResp, error) {
	l := productcollectservicelogic.NewDeleteProductCollectLogic(ctx, s.svcCtx)
	return l.DeleteProductCollect(in)
}

// 查询收藏表详情
func (s *ProductCollectServiceServer) QueryProductCollectDetail(ctx context.Context, in *pmsclient.QueryProductCollectDetailReq) (*pmsclient.QueryProductCollectDetailResp, error) {
	l := productcollectservicelogic.NewQueryProductCollectDetailLogic(ctx, s.svcCtx)
	return l.QueryProductCollectDetail(in)
}

// 查询收藏表列表
func (s *ProductCollectServiceServer) QueryProductCollectList(ctx context.Context, in *pmsclient.QueryProductCollectListReq) (*pmsclient.QueryProductCollectListResp, error) {
	l := productcollectservicelogic.NewQueryProductCollectListLogic(ctx, s.svcCtx)
	return l.QueryProductCollectList(in)
}

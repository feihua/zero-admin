// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/productladderservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type ProductLadderServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedProductLadderServiceServer
}

func NewProductLadderServiceServer(svcCtx *svc.ServiceContext) *ProductLadderServiceServer {
	return &ProductLadderServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加产品阶梯价格表(只针对同商品)
func (s *ProductLadderServiceServer) AddProductLadder(ctx context.Context, in *pmsclient.AddProductLadderReq) (*pmsclient.AddProductLadderResp, error) {
	l := productladderservicelogic.NewAddProductLadderLogic(ctx, s.svcCtx)
	return l.AddProductLadder(in)
}

// 删除产品阶梯价格表(只针对同商品)
func (s *ProductLadderServiceServer) DeleteProductLadder(ctx context.Context, in *pmsclient.DeleteProductLadderReq) (*pmsclient.DeleteProductLadderResp, error) {
	l := productladderservicelogic.NewDeleteProductLadderLogic(ctx, s.svcCtx)
	return l.DeleteProductLadder(in)
}

// 更新产品阶梯价格表(只针对同商品)
func (s *ProductLadderServiceServer) UpdateProductLadder(ctx context.Context, in *pmsclient.UpdateProductLadderReq) (*pmsclient.UpdateProductLadderResp, error) {
	l := productladderservicelogic.NewUpdateProductLadderLogic(ctx, s.svcCtx)
	return l.UpdateProductLadder(in)
}

// 查询产品阶梯价格表(只针对同商品)详情
func (s *ProductLadderServiceServer) QueryProductLadderDetail(ctx context.Context, in *pmsclient.QueryProductLadderDetailReq) (*pmsclient.QueryProductLadderDetailResp, error) {
	l := productladderservicelogic.NewQueryProductLadderDetailLogic(ctx, s.svcCtx)
	return l.QueryProductLadderDetail(in)
}

// 查询产品阶梯价格表(只针对同商品)列表
func (s *ProductLadderServiceServer) QueryProductLadderList(ctx context.Context, in *pmsclient.QueryProductLadderListReq) (*pmsclient.QueryProductLadderListResp, error) {
	l := productladderservicelogic.NewQueryProductLadderListLogic(ctx, s.svcCtx)
	return l.QueryProductLadderList(in)
}

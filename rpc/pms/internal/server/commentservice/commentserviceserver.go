// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: pms.proto

package server

import (
	"context"

	"github.com/feihua/zero-admin/rpc/pms/internal/logic/commentservice"
	"github.com/feihua/zero-admin/rpc/pms/internal/svc"
	"github.com/feihua/zero-admin/rpc/pms/pmsclient"
)

type CommentServiceServer struct {
	svcCtx *svc.ServiceContext
	pmsclient.UnimplementedCommentServiceServer
}

func NewCommentServiceServer(svcCtx *svc.ServiceContext) *CommentServiceServer {
	return &CommentServiceServer{
		svcCtx: svcCtx,
	}
}

// 添加商品评价
func (s *CommentServiceServer) AddComment(ctx context.Context, in *pmsclient.AddCommentReq) (*pmsclient.AddCommentResp, error) {
	l := commentservicelogic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

// 删除商品评价
func (s *CommentServiceServer) DeleteComment(ctx context.Context, in *pmsclient.DeleteCommentReq) (*pmsclient.DeleteCommentResp, error) {
	l := commentservicelogic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

// 更新商品评价
func (s *CommentServiceServer) UpdateComment(ctx context.Context, in *pmsclient.UpdateCommentReq) (*pmsclient.UpdateCommentResp, error) {
	l := commentservicelogic.NewUpdateCommentLogic(ctx, s.svcCtx)
	return l.UpdateComment(in)
}

// 查询商品评价详情
func (s *CommentServiceServer) QueryCommentDetail(ctx context.Context, in *pmsclient.QueryCommentDetailReq) (*pmsclient.QueryCommentDetailResp, error) {
	l := commentservicelogic.NewQueryCommentDetailLogic(ctx, s.svcCtx)
	return l.QueryCommentDetail(in)
}

// 查询商品评价列表
func (s *CommentServiceServer) QueryCommentList(ctx context.Context, in *pmsclient.QueryCommentListReq) (*pmsclient.QueryCommentListResp, error) {
	l := commentservicelogic.NewQueryCommentListLogic(ctx, s.svcCtx)
	return l.QueryCommentList(in)
}
